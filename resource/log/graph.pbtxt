node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 450
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 450
          }
        }
        string_val: "\017\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\006\000\000\000\007\000\000\000\034\000\000\000\n\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\010\000\000\000\007\000\000\000\020\000\000\000\025\000\000\000\013\000\000\000"
        string_val: "\017\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\006\000\000\000\007\000\000\000\034\000\000\000\n\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\010\000\000\000\007\000\000\000\020\000\000\000\025\000\000\000\013\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\007\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\006\000\000\000\013\000\000\000\031\000\000\000\027\000\000\000\005\000\000\000\013\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\017\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\006\000\000\000\007\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\007\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\006\000\000\000\013\000\000\000\031\000\000\000\027\000\000\000\005\000\000\000\013\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\017\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\006\000\000\000\007\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\031\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\005\000\000\000\013\000\000\000\033\000\000\000\007\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\003\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\031\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\005\000\000\000\013\000\000\000\033\000\000\000\007\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\003\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\014\000\000\000\013\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\014\000\000\000\013\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\t\000\000\000\027\000\000\000\021\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\034\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\022\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\t\000\000\000\027\000\000\000\021\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\034\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\022\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\t\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\010\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\026\000\000\000\003\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\023\000\000\000\013\000\000\000"
        string_val: "\t\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\010\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\026\000\000\000\003\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\023\000\000\000\013\000\000\000"
        string_val: "\016\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\007\000\000\000\017\000\000\000\021\000\000\000\033\000\000\000\007\000\000\000\004\000\000\000\027\000\000\000\t\000\000\000\007\000\000\000\013\000\000\000"
        string_val: "\016\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\007\000\000\000\017\000\000\000\021\000\000\000\033\000\000\000\007\000\000\000\004\000\000\000\027\000\000\000\t\000\000\000\007\000\000\000\013\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\r\000\000\000\007\000\000\000\010\000\000\000\027\000\000\000\005\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\003\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000"
        string_val: "\r\000\000\000\007\000\000\000\010\000\000\000\027\000\000\000\005\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\003\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000"
        string_val: "\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\026\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\026\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\026\000\000\000\003\000\000\000\010\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\005\000\000\000\003\000\000\000\021\000\000\000\034\000\000\000\027\000\000\000\021\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\026\000\000\000\003\000\000\000\010\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\005\000\000\000\003\000\000\000\021\000\000\000\034\000\000\000\027\000\000\000\021\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\017\000\000\000\007\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\017\000\000\000\007\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000"
        string_val: "\017\000\000\000\007\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\017\000\000\000\007\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000"
        string_val: "\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000"
        string_val: "\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000"
        string_val: "\t\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\t\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\017\000\000\000\007\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\025\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\t\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\t\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\017\000\000\000\007\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\025\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\r\000\000\000\007\000\000\000\010\000\000\000\027\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\013\000\000\000\006\000\000\000\021\000\000\000\027\000\000\000\t\000\000\000\007\000\000\000\013\000\000\000\016\000\000\000\013\000\000\000"
        string_val: "\r\000\000\000\007\000\000\000\010\000\000\000\027\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\013\000\000\000\006\000\000\000\021\000\000\000\027\000\000\000\t\000\000\000\007\000\000\000\013\000\000\000\016\000\000\000\013\000\000\000"
        string_val: "\005\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\014\000\000\000\013\000\000\000\033\000\000\000\027\000\000\000\017\000\000\000\007\000\000\000\020\000\000\000\006\000\000\000\007\000\000\000\033\000\000\000\013\000\000\000\005\000\000\000\013\000\000\000\031\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\t\000\000\000\021\000\000\000\027\000\000\000"
        string_val: "\005\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\014\000\000\000\013\000\000\000\033\000\000\000\027\000\000\000\017\000\000\000\007\000\000\000\020\000\000\000\006\000\000\000\007\000\000\000\033\000\000\000\013\000\000\000\005\000\000\000\013\000\000\000\031\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\t\000\000\000\021\000\000\000\027\000\000\000"
        string_val: "\020\000\000\000\003\000\000\000\017\000\000\000\007\000\000\000\006\000\000\000\027\000\000\000\021\000\000\000\020\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\013\000\000\000\033\000\000\000\013\000\000\000\005\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\022\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\020\000\000\000\003\000\000\000\017\000\000\000\007\000\000\000\006\000\000\000\027\000\000\000\021\000\000\000\020\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\013\000\000\000\033\000\000\000\013\000\000\000\005\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\022\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\r\000\000\000\007\000\000\000\010\000\000\000\027\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\016\000\000\000\003\000\000\000\016\000\000\000\003\000\000\000\014\000\000\000\013\000\000\000"
        string_val: "\r\000\000\000\007\000\000\000\010\000\000\000\027\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\016\000\000\000\003\000\000\000\016\000\000\000\003\000\000\000\014\000\000\000\013\000\000\000"
        string_val: "\031\000\000\000\003\000\000\000\020\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\034\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\032\000\000\000\013\000\000\000"
        string_val: "\031\000\000\000\003\000\000\000\020\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\034\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\032\000\000\000\013\000\000\000"
        string_val: "\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\003\000\000\000\023\000\000\000\013\000\000\000\r\000\000\000\007\000\000\000"
        string_val: "\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\003\000\000\000\023\000\000\000\013\000\000\000\r\000\000\000\007\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000\010\000\000\000\007\000\000\000\020\000\000\000\025\000\000\000\013\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000\010\000\000\000\007\000\000\000\020\000\000\000\025\000\000\000\013\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\007\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000\007\000\000\000\013\000\000\000\005\000\000\000\027\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\007\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\020\000\000\000\007\000\000\000\013\000\000\000\005\000\000\000\027\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\006\000\000\000\013\000\000\000!\000\000\000\t\000\000\000\007\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\006\000\000\000\013\000\000\000!\000\000\000\t\000\000\000\007\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\t\000\000\000\007\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\007\000\000\000\014\000\000\000\013\000\000\000\007\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\t\000\000\000\007\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\007\000\000\000\014\000\000\000\013\000\000\000\007\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\026\000\000\000\003\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\032\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\026\000\000\000\003\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\032\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\027\000\000\000\020\000\000\000\004\000\000\000\007\000\000\000\013\000\000\000\034\000\000\000\003\000\000\000\013\000\000\000\024\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\033\000\000\000\013\000\000\000\t\000\000\000\007\000\000\000\t\000\000\000\003\000\000\000\021\000\000\000\022\000\000\000\007\000\000\000\013\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\027\000\000\000\020\000\000\000\004\000\000\000\007\000\000\000\013\000\000\000\034\000\000\000\003\000\000\000\013\000\000\000\024\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\033\000\000\000\013\000\000\000\t\000\000\000\007\000\000\000\t\000\000\000\003\000\000\000\021\000\000\000\022\000\000\000\007\000\000\000\013\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\034\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\026\000\000\000\013\000\000\000\016\000\000\000\003\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\022\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\034\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\026\000\000\000\013\000\000\000\016\000\000\000\003\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\022\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\r\000\000\000\003\000\000\000\020\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\003\000\000\000\025\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\r\000\000\000\003\000\000\000\020\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\003\000\000\000\025\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\n\000\000\000\003\000\000\000\013\000\000\000\017\000\000\000\007\000\000\000\013\000\000\000\016\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000\014\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\n\000\000\000\003\000\000\000\013\000\000\000\017\000\000\000\007\000\000\000\013\000\000\000\016\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000\014\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\033\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\t\000\000\000\003\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\033\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\t\000\000\000\003\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\025\000\000\000\027\000\000\000\006\000\000\000\027\000\000\000\026\000\000\000\003\000\000\000\013\000\000\000\017\000\000\000\003\000\000\000\020\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\025\000\000\000\027\000\000\000\006\000\000\000\027\000\000\000\026\000\000\000\003\000\000\000\013\000\000\000\017\000\000\000\003\000\000\000\020\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\022\000\000\000\003\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000\025\000\000\000\003\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\005\000\000\000\003\000\000\000\013\000\000\000\t\000\000\000\007\000\000\000\013\000\000\000\010\000\000\000\003\000\000\000\006\000\000\000\007\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\022\000\000\000\003\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000\025\000\000\000\003\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\005\000\000\000\003\000\000\000\013\000\000\000\t\000\000\000\007\000\000\000\013\000\000\000\010\000\000\000\003\000\000\000\006\000\000\000\007\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\007\000\000\000\033\000\000\000\027\000\000\000\007\000\000\000\034\000\000\000\027\000\000\000\021\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\016\000\000\000\003\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\007\000\000\000\032\000\000\000\013\000\000\000\007\000\000\000\032\000\000\000\013\000\000\000\020\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\007\000\000\000\033\000\000\000\027\000\000\000\007\000\000\000\034\000\000\000\027\000\000\000\021\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\016\000\000\000\003\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\007\000\000\000\032\000\000\000\013\000\000\000\007\000\000\000\032\000\000\000\013\000\000\000\020\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\034\000\000\000\027\000\000\000\013\000\000\000\006\000\000\000\003\000\000\000\006\000\000\000\007\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\005\000\000\000\n\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\032\000\000\000\027\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\034\000\000\000\027\000\000\000\013\000\000\000\006\000\000\000\003\000\000\000\006\000\000\000\007\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\005\000\000\000\n\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\032\000\000\000\027\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\023\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\014\000\000\000\013\000\000\000\004\000\000\000\007\000\000\000\020\000\000\000\020\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\003\000\000\000\020\000\000\000\025\000\000\000\013\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\023\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\014\000\000\000\013\000\000\000\004\000\000\000\007\000\000\000\020\000\000\000\020\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\003\000\000\000\020\000\000\000\025\000\000\000\013\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\032\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\032\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\033\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\013\000\000\000\006\000\000\000\021\000\000\000\027\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\023\000\000\000\013\000\000\000\026\000\000\000\003\000\000\000\022\000\000\000\003\000\000\000\013\000\000\000\034\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000"
        string_val: "\033\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\013\000\000\000\006\000\000\000\021\000\000\000\027\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\023\000\000\000\013\000\000\000\026\000\000\000\003\000\000\000\022\000\000\000\003\000\000\000\013\000\000\000\034\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\031\000\000\000\027\000\000\000\016\000\000\000\013\000\000\000\027\000\000\000\026\000\000\000\003\000\000\000\013\000\000\000\017\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\031\000\000\000\027\000\000\000\016\000\000\000\013\000\000\000\027\000\000\000\026\000\000\000\003\000\000\000\013\000\000\000\017\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000\033\000\000\000\013\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\033\000\000\000\013\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000\033\000\000\000\013\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\033\000\000\000\013\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\014\000\000\000\013\000\000\000\017\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\014\000\000\000\013\000\000\000\017\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\005\000\000\000\027\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000\031\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\027\000\000\000\005\000\000\000\013\000\000\000"
        string_val: "\005\000\000\000\027\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000\031\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\027\000\000\000\005\000\000\000\013\000\000\000"
        string_val: "\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\021\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\024\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\021\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\024\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\006\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\032\000\000\000\013\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\006\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\032\000\000\000\013\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\033\000\000\000\003\000\000\000\021\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\020\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\007\000\000\000\013\000\000\000\034\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\010\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\027\000\000\000\t\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\033\000\000\000\003\000\000\000\021\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\020\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\007\000\000\000\013\000\000\000\034\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\010\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\027\000\000\000\t\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000"
        string_val: "\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\026\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\032\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\026\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\032\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\004\000\000\000\013\000\000\000\t\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\004\000\000\000\013\000\000\000\t\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\007\000\000\000\t\000\000\000\007\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\006\000\000\000\013\000\000\000\025\000\000\000\013\000\000\000\t\000\000\000\007\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\007\000\000\000\t\000\000\000\007\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\006\000\000\000\013\000\000\000\025\000\000\000\013\000\000\000\t\000\000\000\007\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000"
        string_val: "\026\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000"
        string_val: "\026\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000"
        string_val: "\006\000\000\000\013\000\000\000\025\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\007\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000\033\000\000\000\013\000\000\000\020\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\006\000\000\000\013\000\000\000\025\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\007\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000\033\000\000\000\013\000\000\000\020\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000"
        string_val: "\t\000\000\000\027\000\000\000\034\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\027\000\000\000"
        string_val: "\t\000\000\000\027\000\000\000\034\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\027\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\003\000\000\000\005\000\000\000\013\000\000\000\014\000\000\000\027\000\000\000\007\000\000\000\006\000\000\000\027\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\003\000\000\000\005\000\000\000\013\000\000\000\014\000\000\000\027\000\000\000\007\000\000\000\006\000\000\000\027\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000\004\000\000\000\003\000\000\000\021\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\033\000\000\000\027\000\000\000\020\000\000\000\010\000\000\000\007\000\000\000\013\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000\004\000\000\000\003\000\000\000\021\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\033\000\000\000\027\000\000\000\020\000\000\000\010\000\000\000\007\000\000\000\013\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\t\000\000\000\007\000\000\000\020\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\005\000\000\000\n\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\007\000\000\000\014\000\000\000\027\000\000\000\007\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\t\000\000\000\007\000\000\000\020\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\005\000\000\000\n\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\007\000\000\000\014\000\000\000\027\000\000\000\007\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000"
        string_val: "\016\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\032\000\000\000\013\000\000\000\r\000\000\000\007\000\000\000\010\000\000\000\027\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\033\000\000\000\003\000\000\000\021\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\005\000\000\000\007\000\000\000"
        string_val: "\016\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\032\000\000\000\013\000\000\000\r\000\000\000\007\000\000\000\010\000\000\000\027\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\033\000\000\000\003\000\000\000\021\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\005\000\000\000\007\000\000\000"
        string_val: "\006\000\000\000\003\000\000\000\006\000\000\000\007\000\000\000\033\000\000\000\027\000\000\000\020\000\000\000\010\000\000\000\007\000\000\000\013\000\000\000\010\000\000\000\003\000\000\000\022\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\006\000\000\000\003\000\000\000\006\000\000\000\007\000\000\000\033\000\000\000\027\000\000\000\020\000\000\000\010\000\000\000\007\000\000\000\013\000\000\000\010\000\000\000\003\000\000\000\022\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\007\000\000\000\t\000\000\000\027\000\000\000\021\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\016\000\000\000\003\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\007\000\000\000\t\000\000\000\027\000\000\000\021\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\016\000\000\000\003\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\004\000\000\000\027\000\000\000\t\000\000\000\007\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\004\000\000\000\027\000\000\000\t\000\000\000\007\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\005\000\000\000\007\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\024\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\005\000\000\000\007\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\024\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000!\000\000\000\016\000\000\000\003\000\000\000\021\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\034\000\000\000\013\000\000\000\006\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000!\000\000\000\016\000\000\000\003\000\000\000\021\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\034\000\000\000\013\000\000\000\006\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\034\000\000\000\n\000\000\000\027\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\034\000\000\000\n\000\000\000\027\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\005\000\000\000\n\000\000\000\007\000\000\000\006\000\000\000\013\000\000\000\014\000\000\000\027\000\000\000\007\000\000\000\031\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\005\000\000\000\n\000\000\000\007\000\000\000\006\000\000\000\013\000\000\000\014\000\000\000\027\000\000\000\007\000\000\000\031\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\017\000\000\000\003\000\000\000\025\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\t\000\000\000\027\000\000\000\021\000\000\000\004\000\000\000\003\000\000\000\021\000\000\000\032\000\000\000\013\000\000\000\027\000\000\000\023\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\026\000\000\000\027\000\000\000\021\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\004\000\000\000\027\000\000\000\t\000\000\000\007\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\027\000\000\000"
        string_val: "\017\000\000\000\003\000\000\000\025\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\t\000\000\000\027\000\000\000\021\000\000\000\004\000\000\000\003\000\000\000\021\000\000\000\032\000\000\000\013\000\000\000\027\000\000\000\023\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\026\000\000\000\027\000\000\000\021\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\004\000\000\000\027\000\000\000\t\000\000\000\007\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\027\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\032\000\000\000\013\000\000\000\020\000\000\000\004\000\000\000\027\000\000\000\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\032\000\000\000\013\000\000\000\020\000\000\000\004\000\000\000\027\000\000\000\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\034\000\000\000\027\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\020\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\016\000\000\000\003\000\000\000\021\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000"
        string_val: "\034\000\000\000\027\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\020\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\016\000\000\000\003\000\000\000\021\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000"
        string_val: "\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\t\000\000\000\027\000\000\000\021\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000\024\000\000\000\007\000\000\000\020\000\000\000\006\000\000\000\021\000\000\000\027\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000"
        string_val: "\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\t\000\000\000\027\000\000\000\021\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000\024\000\000\000\007\000\000\000\020\000\000\000\006\000\000\000\021\000\000\000\027\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\013\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\004\000\000\000\007\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\034\000\000\000\007\000\000\000\020\000\000\000\017\000\000\000\007\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\033\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\034\000\000\000\013\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\013\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\004\000\000\000\007\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\034\000\000\000\007\000\000\000\020\000\000\000\017\000\000\000\007\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\033\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\034\000\000\000\013\000\000\000"
        string_val: "\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\005\000\000\000\n\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\005\000\000\000\n\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\026\000\000\000\027\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\007\000\000\000\034\000\000\000\007\000\000\000\024\000\000\000\007\000\000\000\020\000\000\000"
        string_val: "\026\000\000\000\027\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\007\000\000\000\034\000\000\000\007\000\000\000\024\000\000\000\007\000\000\000\020\000\000\000"
        string_val: "\n\000\000\000\003\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\020\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\t\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\n\000\000\000\003\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\020\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\t\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\013\000\000\000\023\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\017\000\000\000\007\000\000\000\013\000\000\000\022\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\t\000\000\000\027\000\000\000\021\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\t\000\000\000\007\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\013\000\000\000\023\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\017\000\000\000\007\000\000\000\013\000\000\000\022\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\t\000\000\000\027\000\000\000\021\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\t\000\000\000\007\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\014\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\027\000\000\000\010\000\000\000\027\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\014\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\027\000\000\000\010\000\000\000\027\000\000\000"
        string_val: "\025\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\016\000\000\000\007\000\000\000\016\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\007\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\026\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\025\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\016\000\000\000\007\000\000\000\016\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\007\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\026\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\022\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\017\000\000\000\027\000\000\000\016\000\000\000\013\000\000\000\017\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000"
        string_val: "\022\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\017\000\000\000\027\000\000\000\016\000\000\000\013\000\000\000\017\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\036\000\000\000\036\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\t\000\000\000\027\000\000\000\021\000\000\000\033\000\000\000\013\000\000\000\005\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\036\000\000\000\036\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\t\000\000\000\027\000\000\000\021\000\000\000\033\000\000\000\013\000\000\000\005\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\036\000\000\000\037\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000\033\000\000\000\013\000\000\000\024\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\036\000\000\000\037\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000\033\000\000\000\013\000\000\000\024\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\016\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\006\000\000\000\007\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\034\000\000\000\027\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\016\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\006\000\000\000\007\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\034\000\000\000\027\000\000\000"
        string_val: "\017\000\000\000\003\000\000\000\020\000\000\000\034\000\000\000\027\000\000\000\033\000\000\000\013\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\017\000\000\000\003\000\000\000\020\000\000\000\034\000\000\000\027\000\000\000\033\000\000\000\013\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\t\000\000\000\027\000\000\000\021\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\003\000\000\000\006\000\000\000\003\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\t\000\000\000\027\000\000\000\021\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\003\000\000\000\006\000\000\000\003\000\000\000"
        string_val: "\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\013\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000"
        string_val: "\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\013\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000"
        string_val: "\006\000\000\000\013\000\000\000\007\000\000\000\024\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\031\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\027\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\006\000\000\000\013\000\000\000\007\000\000\000\024\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\031\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\027\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\016\000\000\000\003\000\000\000\021\000\000\000\024\000\000\000\007\000\000\000\020\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\016\000\000\000\003\000\000\000\021\000\000\000\024\000\000\000\007\000\000\000\020\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\022\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\034\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000"
        string_val: "\022\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\034\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\020\000\000\000\007\000\000\000\013\000\000\000\005\000\000\000\027\000\000\000\020\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\020\000\000\000\007\000\000\000\013\000\000\000\005\000\000\000\027\000\000\000\020\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\006\000\000\000\003\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\023\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\031\000\000\000\003\000\000\000\020\000\000\000\004\000\000\000\027\000\000\000\033\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000"
        string_val: "\006\000\000\000\003\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\023\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\031\000\000\000\003\000\000\000\020\000\000\000\004\000\000\000\027\000\000\000\033\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\007\000\000\000\013\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\007\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\013\000\000\000\r\000\000\000\027\000\000\000\013\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\007\000\000\000\013\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\007\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\013\000\000\000\r\000\000\000\027\000\000\000\013\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\004\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\013\000\000\000\017\000\000\000\007\000\000\000\013\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\004\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\013\000\000\000\017\000\000\000\007\000\000\000\013\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\031\000\000\000\003\000\000\000\013\000\000\000\t\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\r\000\000\000\003\000\000\000\020\000\000\000\023\000\000\000\013\000\000\000\016\000\000\000\003\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\034\000\000\000\n\000\000\000\013\000\000\000\t\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\031\000\000\000\003\000\000\000\013\000\000\000\t\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\r\000\000\000\003\000\000\000\020\000\000\000\023\000\000\000\013\000\000\000\016\000\000\000\003\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\034\000\000\000\n\000\000\000\013\000\000\000\t\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\014\000\000\000\013\000\000\000\022\000\000\000\003\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\t\000\000\000\027\000\000\000\021\000\000\000\026\000\000\000\007\000\000\000\004\000\000\000\013\000\000\000\007\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\014\000\000\000\013\000\000\000\022\000\000\000\003\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\t\000\000\000\027\000\000\000\021\000\000\000\026\000\000\000\007\000\000\000\004\000\000\000\013\000\000\000\007\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\023\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\032\000\000\000\013\000\000\000\006\000\000\000\027\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\025\000\000\000\007\000\000\000\005\000\000\000\003\000\000\000\013\000\000\000\004\000\000\000\003\000\000\000\021\000\000\000\n\000\000\000\007\000\000\000\006\000\000\000\027\000\000\000\006\000\000\000\021\000\000\000\027\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\023\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\032\000\000\000\013\000\000\000\006\000\000\000\027\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\025\000\000\000\007\000\000\000\005\000\000\000\003\000\000\000\013\000\000\000\004\000\000\000\003\000\000\000\021\000\000\000\n\000\000\000\007\000\000\000\006\000\000\000\027\000\000\000\006\000\000\000\021\000\000\000\027\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\025\000\000\000\027\000\000\000\013\000\000\000\024\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000\037\000\000\000\035\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\025\000\000\000\027\000\000\000\013\000\000\000\024\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000\037\000\000\000\035\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\026\000\000\000\003\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\026\000\000\000\003\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\004\000\000\000\027\000\000\000\t\000\000\000\027\000\000\000\021\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\004\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\004\000\000\000\027\000\000\000\t\000\000\000\027\000\000\000\021\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\004\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\007\000\000\000\t\000\000\000\007\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\t\000\000\000\007\000\000\000\020\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\034\000\000\000\027\000\000\000\021\000\000\000\005\000\000\000\n\000\000\000\027\000\000\000\016\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000\t\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\007\000\000\000\t\000\000\000\007\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\t\000\000\000\007\000\000\000\020\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\034\000\000\000\027\000\000\000\021\000\000\000\005\000\000\000\n\000\000\000\027\000\000\000\016\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000\t\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\005\000\000\000\027\000\000\000\020\000\000\000\005\000\000\000\n\000\000\000\027\000\000\000\r\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\007\000\000\000\020\000\000\000\004\000\000\000\007\000\000\000\020\000\000\000\017\000\000\000\007\000\000\000\013\000\000\000\036\000\000\000#\000\000\000\t\000\000\000"
        string_val: "\005\000\000\000\027\000\000\000\020\000\000\000\005\000\000\000\n\000\000\000\027\000\000\000\r\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\007\000\000\000\020\000\000\000\004\000\000\000\007\000\000\000\020\000\000\000\017\000\000\000\007\000\000\000\013\000\000\000\036\000\000\000#\000\000\000\t\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000&\000\000\000\t\000\000\000\006\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000&\000\000\000\t\000\000\000\006\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\023\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\032\000\000\000\013\000\000\000\026\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\034\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\037\000\000\000\t\000\000\000\006\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\023\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\032\000\000\000\013\000\000\000\026\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\034\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\037\000\000\000\t\000\000\000\006\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\004\000\000\000\013\000\000\000\t\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\004\000\000\000\013\000\000\000\t\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\005\000\000\000\003\000\000\000\021\000\000\000\034\000\000\000\027\000\000\000\021\000\000\000\016\000\000\000\013\000\000\000\027\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\005\000\000\000\003\000\000\000\021\000\000\000\034\000\000\000\027\000\000\000\021\000\000\000\016\000\000\000\013\000\000\000\027\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\025\000\000\000\027\000\000\000\006\000\000\000\027\000\000\000\026\000\000\000\003\000\000\000\013\000\000\000\017\000\000\000\003\000\000\000\020\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\025\000\000\000\027\000\000\000\006\000\000\000\027\000\000\000\026\000\000\000\003\000\000\000\013\000\000\000\017\000\000\000\003\000\000\000\020\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\034\000\000\000\027\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\034\000\000\000\027\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\035\000\000\000\036\000\000\000\010\000\000\000\007\000\000\000\020\000\000\000\010\000\000\000\027\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\035\000\000\000\036\000\000\000\010\000\000\000\007\000\000\000\020\000\000\000\010\000\000\000\027\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\016\000\000\000\030\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\016\000\000\000\030\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\007\000\000\000\024\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\007\000\000\000\023\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\007\000\000\000\024\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\007\000\000\000\023\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\017\000\000\000\007\000\000\000\013\000\000\000\023\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\017\000\000\000\007\000\000\000\013\000\000\000\023\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\006\000\000\000\013\000\000\000\007\000\000\000\024\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\025\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\031\000\000\000\027\000\000\000\023\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\006\000\000\000\013\000\000\000\007\000\000\000\024\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\025\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\031\000\000\000\027\000\000\000\023\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\005\000\000\000\n\000\000\000\027\000\000\000\016\000\000\000\007\000\000\000\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\025\000\000\000\027\000\000\000\006\000\000\000\027\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\007\000\000\000\033\000\000\000\027\000\000\000\007\000\000\000"
        string_val: "\005\000\000\000\n\000\000\000\027\000\000\000\016\000\000\000\007\000\000\000\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\025\000\000\000\027\000\000\000\006\000\000\000\027\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\007\000\000\000\033\000\000\000\027\000\000\000\007\000\000\000"
        string_val: "\023\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\031\000\000\000\027\000\000\000\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\022\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\021\000\000\000"
        string_val: "\023\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\031\000\000\000\027\000\000\000\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\022\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\021\000\000\000"
        string_val: "\023\000\000\000\013\000\000\000\026\000\000\000\003\000\000\000\006\000\000\000\021\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\020\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\023\000\000\000\013\000\000\000\026\000\000\000\003\000\000\000\006\000\000\000\021\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\020\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\004\000\000\000\003\000\000\000\021\000\000\000\r\000\000\000\027\000\000\000\021\000\000\000\022\000\000\000\003\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\004\000\000\000\027\000\000\000\017\000\000\000\013\000\000\000\037\000\000\000"
        string_val: "\004\000\000\000\003\000\000\000\021\000\000\000\r\000\000\000\027\000\000\000\021\000\000\000\022\000\000\000\003\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\004\000\000\000\027\000\000\000\017\000\000\000\013\000\000\000\037\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\031\000\000\000\027\000\000\000\026\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\032\000\000\000\027\000\000\000\007\000\000\000\010\000\000\000\027\000\000\000\034\000\000\000\007\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\032\000\000\000\013\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\031\000\000\000\027\000\000\000\026\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\032\000\000\000\027\000\000\000\007\000\000\000\010\000\000\000\027\000\000\000\034\000\000\000\007\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\032\000\000\000\013\000\000\000"
        string_val: "\031\000\000\000\021\000\000\000\010\000\000\000\027\000\000\000\034\000\000\000\007\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\022\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\027\000\000\000\020\000\000\000"
        string_val: "\031\000\000\000\021\000\000\000\010\000\000\000\027\000\000\000\034\000\000\000\007\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\022\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\027\000\000\000\020\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\t\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\r\000\000\000\003\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\t\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\r\000\000\000\003\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\033\000\000\000\013\000\000\000\023\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\033\000\000\000\007\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000"
        string_val: "\033\000\000\000\013\000\000\000\023\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\033\000\000\000\007\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\005\000\000\000\n\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000"
        string_val: "\005\000\000\000\n\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000"
        string_val: "\016\000\000\000\003\000\000\000\021\000\000\000\t\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\017\000\000\000\013\000\000\000\010\000\000\000\007\000\000\000\020\000\000\000"
        string_val: "\016\000\000\000\003\000\000\000\021\000\000\000\t\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\017\000\000\000\013\000\000\000\010\000\000\000\007\000\000\000\020\000\000\000"
        string_val: "\t\000\000\000\007\000\000\000\013\000\000\000\026\000\000\000\003\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000\"\000\000\000\025\000\000\000"
        string_val: "\t\000\000\000\007\000\000\000\013\000\000\000\026\000\000\000\003\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000\"\000\000\000\025\000\000\000"
        string_val: "\026\000\000\000\003\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\032\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\026\000\000\000\003\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\032\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\003\000\000\000\t\000\000\000\007\000\000\000\004\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\023\000\000\000\013\000\000\000\020\000\000\000\017\000\000\000\013\000\000\000\020\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\003\000\000\000\t\000\000\000\007\000\000\000\004\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\023\000\000\000\013\000\000\000\020\000\000\000\017\000\000\000\013\000\000\000\020\000\000\000"
        string_val: "\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\007\000\000\000\033\000\000\000\027\000\000\000\007\000\000\000"
        string_val: "\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\007\000\000\000\033\000\000\000\027\000\000\000\007\000\000\000"
        string_val: "\017\000\000\000\027\000\000\000\023\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\004\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\025\000\000\000\n\000\000\000\027\000\000\000\020\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\017\000\000\000\027\000\000\000\023\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\004\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\025\000\000\000\n\000\000\000\027\000\000\000\020\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\017\000\000\000\007\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\r\000\000\000\003\000\000\000\r\000\000\000\007\000\000\000\006\000\000\000\007\000\000\000\023\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\017\000\000\000\007\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\r\000\000\000\003\000\000\000\r\000\000\000\007\000\000\000\006\000\000\000\007\000\000\000\023\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\024\000\000\000\027\000\000\000\t\000\000\000\027\000\000\000\021\000\000\000\023\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\017\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\n\000\000\000\007\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\017\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\013\000\000\000\t\000\000\000\007\000\000\000\033\000\000\000\003\000\000\000\020\000\000\000\025\000\000\000\007\000\000\000\014\000\000\000\013\000\000\000\027\000\000\000\t\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\024\000\000\000\027\000\000\000\t\000\000\000\027\000\000\000\021\000\000\000\023\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\017\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\n\000\000\000\007\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\017\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\013\000\000\000\t\000\000\000\007\000\000\000\033\000\000\000\003\000\000\000\020\000\000\000\025\000\000\000\007\000\000\000\014\000\000\000\013\000\000\000\027\000\000\000\t\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\034\000\000\000\027\000\000\000\021\000\000\000\031\000\000\000\007\000\000\000\013\000\000\000\t\000\000\000\007\000\000\000\013\000\000\000\004\000\000\000\003\000\000\000\004\000\000\000\003\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\034\000\000\000\027\000\000\000\021\000\000\000\031\000\000\000\007\000\000\000\013\000\000\000\t\000\000\000\007\000\000\000\013\000\000\000\004\000\000\000\003\000\000\000\004\000\000\000\003\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\020\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\017\000\000\000\003\000\000\000\020\000\000\000\034\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\020\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\017\000\000\000\003\000\000\000\020\000\000\000\034\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\026\000\000\000\003\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\026\000\000\000\003\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\003\000\000\000\021\000\000\000\004\000\000\000\003\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\003\000\000\000\021\000\000\000\004\000\000\000\003\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000\007\000\000\000\024\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\034\000\000\000\n\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\027\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000\007\000\000\000\024\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\034\000\000\000\n\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\027\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\007\000\000\000\t\000\000\000\007\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\t\000\000\000\007\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000\022\000\000\000\007\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\013\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\007\000\000\000\t\000\000\000\007\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\t\000\000\000\007\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000\022\000\000\000\007\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\013\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\016\000\000\000\003\000\000\000\021\000\000\000\004\000\000\000\003\000\000\000\t\000\000\000\021\000\000\000\027\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\016\000\000\000\003\000\000\000\021\000\000\000\004\000\000\000\003\000\000\000\t\000\000\000\021\000\000\000\027\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\013\000\000\000\016\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\013\000\000\000\016\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\033\000\000\000\013\000\000\000\020\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\016\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\004\000\000\000\027\000\000\000\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\033\000\000\000\013\000\000\000\020\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\016\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\004\000\000\000\027\000\000\000\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\t\000\000\000\003\000\000\000\020\000\000\000\014\000\000\000\027\000\000\000\007\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\005\000\000\000\n\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\026\000\000\000\007\000\000\000\004\000\000\000\013\000\000\000\007\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\003\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\t\000\000\000\003\000\000\000\020\000\000\000\014\000\000\000\027\000\000\000\007\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\005\000\000\000\n\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\026\000\000\000\007\000\000\000\004\000\000\000\013\000\000\000\007\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\003\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\031\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\013\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\032\000\000\000\027\000\000\000\020\000\000\000\027\000\000\000\016\000\000\000\013\000\000\000\004\000\000\000\003\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\031\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\013\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\032\000\000\000\027\000\000\000\020\000\000\000\027\000\000\000\016\000\000\000\013\000\000\000\004\000\000\000\003\000\000\000"
        string_val: "\034\000\000\000\027\000\000\000\021\000\000\000\t\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\010\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\017\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\034\000\000\000\027\000\000\000\021\000\000\000\t\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\010\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\017\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\004\000\000\000\027\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\n\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\017\000\000\000\013\000\000\000"
        string_val: "\004\000\000\000\027\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\n\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\017\000\000\000\013\000\000\000"
        string_val: "\034\000\000\000\003\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\t\000\000\000\007\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\031\000\000\000\007\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\004\000\000\000\013\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\034\000\000\000\003\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\007\000\000\000\t\000\000\000\007\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\031\000\000\000\007\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\004\000\000\000\013\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\n\000\000\000\007\000\000\000\013\000\000\000\004\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\004\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\003\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\n\000\000\000\007\000\000\000\013\000\000\000\004\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\004\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\003\000\000\000"
        string_val: "\031\000\000\000\013\000\000\000\010\000\000\000\013\000\000\000\033\000\000\000\013\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\031\000\000\000\013\000\000\000\010\000\000\000\013\000\000\000\033\000\000\000\013\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\004\000\000\000\013\000\000\000\007\000\000\000\024\000\000\000\007\000\000\000\020\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\004\000\000\000\013\000\000\000\007\000\000\000\024\000\000\000\007\000\000\000\020\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\031\000\000\000\021\000\000\000\034\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\t\000\000\000\021\000\000\000\027\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\031\000\000\000\021\000\000\000\034\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\t\000\000\000\021\000\000\000\027\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000\026\000\000\000\003\000\000\000\013\000\000\000\017\000\000\000\003\000\000\000\020\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000\026\000\000\000\003\000\000\000\013\000\000\000\017\000\000\000\003\000\000\000\020\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\022\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\016\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\022\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\016\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\022\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\017\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\006\000\000\000\027\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\022\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\017\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\006\000\000\000\027\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\004\000\000\000\027\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\026\000\000\000\013\000\000\000\007\000\000\000\t\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\017\000\000\000\021\000\000\000"
        string_val: "\004\000\000\000\027\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\026\000\000\000\013\000\000\000\007\000\000\000\t\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\017\000\000\000\021\000\000\000"
        string_val: "\t\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\017\000\000\000\021\000\000\000\033\000\000\000\007\000\000\000\017\000\000\000\007\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\t\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\010\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\t\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\017\000\000\000\021\000\000\000\033\000\000\000\007\000\000\000\017\000\000\000\007\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\t\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\010\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\t\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\010\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\022\000\000\000\027\000\000\000\026\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\017\000\000\000\021\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\t\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\010\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\022\000\000\000\027\000\000\000\026\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\017\000\000\000\021\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\023\000\000\000\013\000\000\000\016\000\000\000\003\000\000\000\013\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\023\000\000\000\013\000\000\000\016\000\000\000\003\000\000\000\013\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\022\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\016\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\022\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\016\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\004\000\000\000\013\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\004\000\000\000\013\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\020\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\005\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\004\000\000\000\007\000\000\000\020\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\006\000\000\000\013\000\000\000"
        string_val: "\020\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\005\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\004\000\000\000\007\000\000\000\020\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\006\000\000\000\013\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\017\000\000\000\007\000\000\000\013\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000\033\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\017\000\000\000\007\000\000\000\013\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000\006\000\000\000\007\000\000\000\033\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000"
        string_val: "\022\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\026\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\006\000\000\000\021\000\000\000\027\000\000\000\026\000\000\000\027\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000"
        string_val: "\022\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\026\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\006\000\000\000\021\000\000\000\027\000\000\000\026\000\000\000\027\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000"
        string_val: "\034\000\000\000\003\000\000\000\013\000\000\000\t\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\010\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\022\000\000\000\003\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000"
        string_val: "\034\000\000\000\003\000\000\000\013\000\000\000\t\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\010\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\022\000\000\000\003\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000"
        string_val: "\032\000\000\000\027\000\000\000\020\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\r\000\000\000\007\000\000\000\010\000\000\000\027\000\000\000\006\000\000\000\027\000\000\000\021\000\000\000\005\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\006\000\000\000\003\000\000\000\006\000\000\000\007\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\n\000\000\000\027\000\000\000\023\000\000\000\013\000\000\000\005\000\000\000\013\000\000\000"
        string_val: "\032\000\000\000\027\000\000\000\020\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\r\000\000\000\007\000\000\000\010\000\000\000\027\000\000\000\006\000\000\000\027\000\000\000\021\000\000\000\005\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\006\000\000\000\003\000\000\000\006\000\000\000\007\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\n\000\000\000\027\000\000\000\023\000\000\000\013\000\000\000\005\000\000\000\013\000\000\000"
        string_val: "\023\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\t\000\000\000\007\000\000\000\013\000\000\000\016\000\000\000\027\000\000\000\021\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\016\000\000\000\007\000\000\000\t\000\000\000\007\000\000\000\020\000\000\000\004\000\000\000\007\000\000\000\020\000\000\000\017\000\000\000\007\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\023\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\017\000\000\000\003\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\t\000\000\000\007\000\000\000\013\000\000\000\016\000\000\000\027\000\000\000\021\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\016\000\000\000\007\000\000\000\t\000\000\000\007\000\000\000\020\000\000\000\004\000\000\000\007\000\000\000\020\000\000\000\017\000\000\000\007\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\014\000\000\000\013\000\000\000\005\000\000\000\013\000\000\000\005\000\000\000\003\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\022\000\000\000\003\000\000\000\013\000\000\000\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\014\000\000\000\013\000\000\000\005\000\000\000\013\000\000\000\005\000\000\000\003\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\022\000\000\000\003\000\000\000\013\000\000\000\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\003\000\000\000\023\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\004\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\003\000\000\000\023\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\017\000\000\000\003\000\000\000\017\000\000\000\003\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\032\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\017\000\000\000\003\000\000\000\017\000\000\000\003\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\032\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\033\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\033\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\026\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\026\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\006\000\000\000\003\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\033\000\000\000\007\000\000\000\n\000\000\000\007\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000"
        string_val: "\006\000\000\000\003\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\033\000\000\000\007\000\000\000\n\000\000\000\007\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000"
        string_val: "\022\000\000\000\003\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\022\000\000\000\003\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\013\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\004\000\000\000\013\000\000\000\007\000\000\000\033\000\000\000\007\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\013\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\004\000\000\000\013\000\000\000\007\000\000\000\033\000\000\000\007\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\026\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\007\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\026\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\007\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\013\000\000\000\033\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\013\000\000\000\033\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000"
        string_val: "\025\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\t\000\000\000\007\000\000\000\013\000\000\000\022\000\000\000\021\000\000\000\022\000\000\000\021\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\025\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\t\000\000\000\007\000\000\000\013\000\000\000\022\000\000\000\021\000\000\000\022\000\000\000\021\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\027\000\000\000\033\000\000\000\003\000\000\000\021\000\000\000\004\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\013\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\027\000\000\000\033\000\000\000\003\000\000\000\021\000\000\000\004\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\013\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\t\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\010\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\033\000\000\000\013\000\000\000\033\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\t\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\010\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\007\000\000\000\033\000\000\000\013\000\000\000\033\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\007\000\000\000\024\000\000\000\023\000\000\000\013\000\000\000\007\000\000\000\031\000\000\000\027\000\000\000\016\000\000\000\013\000\000\000\027\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000"
        string_val: "\007\000\000\000\024\000\000\000\023\000\000\000\013\000\000\000\007\000\000\000\031\000\000\000\027\000\000\000\016\000\000\000\013\000\000\000\027\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\013\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\004\000\000\000\013\000\000\000\007\000\000\000\033\000\000\000\007\000\000\000\r\000\000\000\007\000\000\000\033\000\000\000\013\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\013\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\004\000\000\000\013\000\000\000\007\000\000\000\033\000\000\000\007\000\000\000\r\000\000\000\007\000\000\000\033\000\000\000\013\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\034\000\000\000\n\000\000\000\027\000\000\000\020\000\000\000\023\000\000\000\027\000\000\000\007\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\034\000\000\000\n\000\000\000\027\000\000\000\020\000\000\000\023\000\000\000\027\000\000\000\007\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\033\000\000\000\013\000\000\000\r\000\000\000\003\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\033\000\000\000\003\000\000\000\021\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\006\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\014\000\000\000\013\000\000\000\007\000\000\000\025\000\000\000\027\000\000\000\021\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\033\000\000\000\013\000\000\000\r\000\000\000\003\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\033\000\000\000\003\000\000\000\021\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\006\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\014\000\000\000\013\000\000\000\007\000\000\000\025\000\000\000\027\000\000\000\021\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\013\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\005\000\000\000\003\000\000\000\013\000\000\000\020\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\013\000\000\000\031\000\000\000\007\000\000\000\020\000\000\000\005\000\000\000\003\000\000\000\013\000\000\000\020\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\022\000\000\000\003\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\023\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\032\000\000\000\013\000\000\000"
        string_val: "\022\000\000\000\003\000\000\000\013\000\000\000\034\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\023\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\032\000\000\000\013\000\000\000"
        string_val: "\022\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\017\000\000\000\027\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\006\000\000\000\003\000\000\000"
        string_val: "\022\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\017\000\000\000\027\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\006\000\000\000\003\000\000\000"
        string_val: "\n\000\000\000\003\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\007\000\000\000\022\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\017\000\000\000\027\000\000\000"
        string_val: "\n\000\000\000\003\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\007\000\000\000\022\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\017\000\000\000\027\000\000\000"
        string_val: "\026\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\003\000\000\000\004\000\000\000\027\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\020\000\000\000\003\000\000\000"
        string_val: "\026\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\003\000\000\000\004\000\000\000\027\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\020\000\000\000\003\000\000\000"
        string_val: "\005\000\000\000\n\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\003\000\000\000\021\000\000\000\026\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\014\000\000\000\013\000\000\000\027\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\005\000\000\000\n\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\003\000\000\000\021\000\000\000\026\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\014\000\000\000\013\000\000\000\027\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\n\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\025\000\000\000\027\000\000\000\006\000\000\000\027\000\000\000\033\000\000\000\007\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\n\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\025\000\000\000\027\000\000\000\006\000\000\000\027\000\000\000\033\000\000\000\007\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\004\000\000\000\027\000\000\000\034\000\000\000\007\000\000\000\020\000\000\000\017\000\000\000\007\000\000\000\031\000\000\000\003\000\000\000\020\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000"
        string_val: "\004\000\000\000\027\000\000\000\034\000\000\000\007\000\000\000\020\000\000\000\017\000\000\000\007\000\000\000\031\000\000\000\003\000\000\000\020\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000"
        string_val: "\005\000\000\000\n\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\013\000\000\000\005\000\000\000\013\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\005\000\000\000\n\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\013\000\000\000\005\000\000\000\013\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\t\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\020\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\"\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\t\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\020\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\"\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000\014\000\000\000\013\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\033\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000\014\000\000\000\013\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\020\000\000\000\007\000\000\000\013\000\000\000\005\000\000\000\027\000\000\000\020\000\000\000\033\000\000\000\027\000\000\000\020\000\000\000\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\036\000\000\000\t\000\000\000"
        string_val: "\020\000\000\000\007\000\000\000\013\000\000\000\005\000\000\000\027\000\000\000\020\000\000\000\033\000\000\000\027\000\000\000\020\000\000\000\032\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\036\000\000\000\t\000\000\000"
        string_val: "\005\000\000\000\n\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\020\000\000\000\006\000\000\000\003\000\000\000\033\000\000\000\027\000\000\000\007\000\000\000#\000\000\000\t\000\000\000"
        string_val: "\005\000\000\000\n\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\020\000\000\000\006\000\000\000\003\000\000\000\033\000\000\000\027\000\000\000\007\000\000\000#\000\000\000\t\000\000\000"
        string_val: "\031\000\000\000\027\000\000\000\016\000\000\000\013\000\000\000\027\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000"
        string_val: "\031\000\000\000\027\000\000\000\016\000\000\000\013\000\000\000\027\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000"
        string_val: "\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\004\000\000\000\027\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000"
        string_val: "\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\004\000\000\000\027\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000"
        string_val: "\033\000\000\000\021\000\000\000\027\000\000\000\006\000\000\000\007\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\r\000\000\000\003\000\000\000"
        string_val: "\033\000\000\000\021\000\000\000\027\000\000\000\006\000\000\000\007\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\n\000\000\000\027\000\000\000\013\000\000\000\r\000\000\000\003\000\000\000"
        string_val: "\034\000\000\000\007\000\000\000\020\000\000\000\017\000\000\000\007\000\000\000\020\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\021\000\000\000\027\000\000\000\017\000\000\000\007\000\000\000\013\000\000\000\010\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\034\000\000\000\007\000\000\000\020\000\000\000\017\000\000\000\007\000\000\000\020\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\021\000\000\000\027\000\000\000\017\000\000\000\007\000\000\000\013\000\000\000\010\000\000\000\003\000\000\000\020\000\000\000\033\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\004\000\000\000\027\000\000\000\r\000\000\000\007\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\005\000\000\000\n\000\000\000\013\000\000\000"
        string_val: "\004\000\000\000\027\000\000\000\r\000\000\000\007\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\005\000\000\000\n\000\000\000\013\000\000\000"
        string_val: "\t\000\000\000\003\000\000\000\020\000\000\000\014\000\000\000\027\000\000\000\007\000\000\000\004\000\000\000\027\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\t\000\000\000\003\000\000\000\020\000\000\000\014\000\000\000\027\000\000\000\007\000\000\000\004\000\000\000\027\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\t\000\000\000\003\000\000\000\020\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\t\000\000\000\003\000\000\000\020\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\016\000\000\000\007\000\000\000\032\000\000\000\013\000\000\000\007\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\016\000\000\000\007\000\000\000\032\000\000\000\013\000\000\000\007\000\000\000"
        string_val: "\034\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\026\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\034\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\026\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000\033\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\014\000\000\000\013\000\000\000\033\000\000\000\007\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\032\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000\033\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\014\000\000\000\013\000\000\000\033\000\000\000\007\000\000\000\004\000\000\000\027\000\000\000\005\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\t\000\000\000\003\000\000\000\020\000\000\000\014\000\000\000\027\000\000\000\007\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\r\000\000\000\007\000\000\000\033\000\000\000\013\000\000\000"
        string_val: "\t\000\000\000\003\000\000\000\020\000\000\000\014\000\000\000\027\000\000\000\007\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\r\000\000\000\007\000\000\000\033\000\000\000\013\000\000\000"
        string_val: "\033\000\000\000\021\000\000\000\027\000\000\000\016\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\010\000\000\000\007\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\004\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\027\000\000\000\010\000\000\000\027\000\000\000\006\000\000\000\007\000\000\000\006\000\000\000\007\000\000\000\010\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\033\000\000\000\021\000\000\000\027\000\000\000\016\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\010\000\000\000\007\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\004\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\027\000\000\000\010\000\000\000\027\000\000\000\006\000\000\000\007\000\000\000\006\000\000\000\007\000\000\000\010\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\034\000\000\000\013\000\000\000\006\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\027\000\000\000\004\000\000\000\027\000\000\000\034\000\000\000\013\000\000\000\006\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\034\000\000\000\013\000\000\000\006\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\027\000\000\000\004\000\000\000\027\000\000\000\034\000\000\000\013\000\000\000\006\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\033\000\000\000\021\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\010\000\000\000\007\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\033\000\000\000\021\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\010\000\000\000\007\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\033\000\000\000\021\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\010\000\000\000\007\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\033\000\000\000\021\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\010\000\000\000\007\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\007\000\000\000\026\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\006\000\000\000\027\000\000\000\013\000\000\000\010\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\004\000\000\000\027\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\025\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\013\000\000\000\020\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\007\000\000\000\026\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\006\000\000\000\027\000\000\000\013\000\000\000\010\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\004\000\000\000\003\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\026\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\004\000\000\000\027\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\025\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\033\000\000\000\013\000\000\000\020\000\000\000"
        string_val: "\032\000\000\000\027\000\000\000\033\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\003\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\017\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\032\000\000\000\027\000\000\000\033\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\006\000\000\000\003\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\017\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\r\000\000\000\007\000\000\000\010\000\000\000\027\000\000\000\r\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000"
        string_val: "\r\000\000\000\007\000\000\000\010\000\000\000\027\000\000\000\r\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\003\000\000\000\021\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\017\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\032\000\000\000\013\000\000\000\003\000\000\000"
        string_val: "\033\000\000\000\021\000\000\000\027\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\r\000\000\000\003\000\000\000\004\000\000\000\003\000\000\000"
        string_val: "\033\000\000\000\021\000\000\000\027\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\r\000\000\000\003\000\000\000\004\000\000\000\003\000\000\000"
        string_val: "\016\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\031\000\000\000\003\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\t\000\000\000\007\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000!\000\000\000&\000\000\000&\000\000\000\006\000\000\000\007\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\t\000\000\000\007\000\000\000"
        string_val: "\016\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\031\000\000\000\003\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\t\000\000\000\007\000\000\000\033\000\000\000\021\000\000\000\027\000\000\000\006\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000!\000\000\000&\000\000\000&\000\000\000\006\000\000\000\007\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\t\000\000\000\007\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\r\000\000\000\003\000\000\000\020\000\000\000\026\000\000\000\003\000\000\000\021\000\000\000\004\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\013\000\000\000\005\000\000\000\n\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\r\000\000\000\003\000\000\000\020\000\000\000\026\000\000\000\003\000\000\000\021\000\000\000\004\000\000\000\003\000\000\000\021\000\000\000"
        string_val: "\020\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\031\000\000\000\003\000\000\000\020\000\000\000\037\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\020\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\031\000\000\000\003\000\000\000\020\000\000\000\037\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\005\000\000\000\n\000\000\000\027\000\000\000\016\000\000\000\007\000\000\000\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\025\000\000\000\027\000\000\000\006\000\000\000\027\000\000\000"
        string_val: "\005\000\000\000\n\000\000\000\027\000\000\000\016\000\000\000\007\000\000\000\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\025\000\000\000\027\000\000\000\006\000\000\000\027\000\000\000"
        string_val: "\023\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\022\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\003\000\000\000"
        string_val: "\023\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\022\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\003\000\000\000"
        string_val: "\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000\037\000\000\000\035\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\006\000\000\000\007\000\000\000\020\000\000\000\t\000\000\000\016\000\000\000\007\000\000\000\r\000\000\000\027\000\000\000\003\000\000\000\013\000\000\000\037\000\000\000\035\000\000\000\026\000\000\000\013\000\000\000\003\000\000\000\020\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\034\000\000\000\003\000\000\000\021\000\000\000\031\000\000\000\003\000\000\000\020\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\034\000\000\000\003\000\000\000\021\000\000\000\031\000\000\000\003\000\000\000\020\000\000\000\016\000\000\000\007\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\027\000\000\000\031\000\000\000\007\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000\r\000\000\000\021\000\000\000\027\000\000\000\023\000\000\000\013\000\000\000\024\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\032\000\000\000\013\000\000\000\026\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\034\000\000\000\013\000\000\000\006\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\027\000\000\000\031\000\000\000\007\000\000\000\013\000\000\000\016\000\000\000\007\000\000\000\r\000\000\000\021\000\000\000\027\000\000\000\023\000\000\000\013\000\000\000\024\000\000\000\003\000\000\000\020\000\000\000\t\000\000\000\032\000\000\000\013\000\000\000\026\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\034\000\000\000\013\000\000\000\006\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\006\000\000\000\007\000\000\000\034\000\000\000\007\000\000\000\020\000\000\000\017\000\000\000\007\000\000\000\026\000\000\000\027\000\000\000\034\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\021\000\000\000\027\000\000\000\004\000\000\000\027\000\000\000\014\000\000\000\027\000\000\000\007\000\000\000\006\000\000\000\007\000\000\000\006\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\034\000\000\000\n\000\000\000\007\000\000\000\020\000\000\000\006\000\000\000\007\000\000\000\034\000\000\000\007\000\000\000\020\000\000\000\017\000\000\000\007\000\000\000\026\000\000\000\027\000\000\000\034\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\021\000\000\000\027\000\000\000\004\000\000\000\027\000\000\000\014\000\000\000\027\000\000\000\007\000\000\000\006\000\000\000\007\000\000\000\006\000\000\000\027\000\000\000\021\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\026\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\025\000\000\000\n\000\000\000\021\000\000\000\027\000\000\000\014\000\000\000\013\000\000\000\026\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\n\000\000\000\003\000\000\000\021\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\004\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\014\000\000\000\013\000\000\000\027\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\010\000\000\000\003\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\004\000\000\000\013\000\000\000\014\000\000\000\013\000\000\000\003\000\000\000\021\000\000\000\017\000\000\000\003\000\000\000\020\000\000\000"
        string_val: "\034\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\026\000\000\000\013\000\000\000\016\000\000\000\003\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\026\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\032\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\007\000\000\000"
        string_val: "\034\000\000\000\021\000\000\000\020\000\000\000\t\000\000\000\026\000\000\000\013\000\000\000\016\000\000\000\003\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\027\000\000\000\021\000\000\000\n\000\000\000\003\000\000\000\013\000\000\000\025\000\000\000\n\000\000\000\013\000\000\000\026\000\000\000\013\000\000\000\020\000\000\000\t\000\000\000\032\000\000\000\013\000\000\000\n\000\000\000\027\000\000\000\003\000\000\000\020\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 450
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 450
          }
        }
        string_val: "\003\000\000\000\001\000\000\000\004\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\003\000\000\000\001\000\000\000\004\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\006\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\t\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000\004\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\006\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\t\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000\004\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\006\000\000\000\001\000\000\000\001\000\000\000\t\000\000\000\001\000\000\000\016\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\006\000\000\000\001\000\000\000\001\000\000\000\t\000\000\000\001\000\000\000\016\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\021\000\000\000\001\000\000\000\001\000\000\000\022\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\023\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\021\000\000\000\001\000\000\000\001\000\000\000\022\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\023\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\024\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\025\000\000\000\001\000\000\000\001\000\000\000\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\024\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\025\000\000\000\001\000\000\000\001\000\000\000\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\027\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\016\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\031\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\027\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\016\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\031\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\032\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\032\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\034\000\000\000\001\000\000\000\035\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\036\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\037\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\034\000\000\000\001\000\000\000\035\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\036\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\037\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "!\000\000\000\001\000\000\000\001\000\000\000\"\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000#\000\000\000\001\000\000\000$\000\000\000\001\000\000\000\001\000\000\000%\000\000\000\001\000\000\000"
        string_val: "!\000\000\000\001\000\000\000\001\000\000\000\"\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000#\000\000\000\001\000\000\000$\000\000\000\001\000\000\000\001\000\000\000%\000\000\000\001\000\000\000"
        string_val: "(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\000+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\000+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000!\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\037\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000!\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\037\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\034\000\000\000\001\000\000\000\035\000\000\000\001\000\000\000+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000,\000\000\000\001\000\000\000\001\000\000\000\031\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\034\000\000\000\001\000\000\000\035\000\000\000\001\000\000\000+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000,\000\000\000\001\000\000\000\001\000\000\000\031\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\t\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\t\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000#\000\000\000\001\000\000\000.\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\t\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\023\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000#\000\000\000\001\000\000\000.\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\t\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\023\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\034\000\000\000\001\000\000\000\035\000\000\000\001\000\000\000/\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\034\000\000\000\001\000\000\000\035\000\000\000\001\000\000\000/\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\034\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\034\000\000\000\001\000\000\000"
        string_val: "\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\006\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\006\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000\027\000\000\000\001\000\000\000\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000\027\000\000\000\001\000\000\000\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\031\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\031\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\0001\000\000\000\001\000\000\0002\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\0001\000\000\000\001\000\000\0002\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\027\000\000\000\001\000\000\0003\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\027\000\000\000\001\000\000\0003\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\036\000\000\000\001\000\000\000\001\000\000\000\037\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000\023\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\036\000\000\000\001\000\000\000\001\000\000\000\037\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000\023\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\0003\000\000\000\001\000\000\000\001\000\000\0000\000\000\000\001\000\000\0004\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\0003\000\000\000\001\000\000\000\001\000\000\0000\000\000\000\001\000\000\0004\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\032\000\000\000\001\000\000\000\001\000\000\000!\000\000\000\001\000\000\000\001\000\000\000\036\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\032\000\000\000\001\000\000\000\001\000\000\000!\000\000\000\001\000\000\000\001\000\000\000\036\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "5\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\0006\000\000\000\001\000\000\0007\000\000\000\001\000\000\000\025\000\000\000\001\000\000\000\001\000\000\0008\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "5\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\0006\000\000\000\001\000\000\0007\000\000\000\001\000\000\000\025\000\000\000\001\000\000\000\001\000\000\0008\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "9\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\022\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\031\000\000\000\001\000\000\000\001\000\000\000(\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "9\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\022\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\031\000\000\000\001\000\000\000\001\000\000\000(\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r
        string_val: "\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\0000\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\0000\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val
        string_val
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000<\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\0001\000\000\000\001\000\000\0002\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000<\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\0001\000\000\000\001\000\000\0002\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val
        string_val
        string_val: "5\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\025\000\000\000\001\000\000\000\001\000\000\0008\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "5\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\025\000\000\000\001\000\000\000\001\000\000\0008\000\000\000\001\000\000\000\001\000\000\000"
        string_val: ">\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: ">\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: ">\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: ">\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0008\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0008\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\t\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\t\000\000\000\001\000\000\000"
        string_val: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000,\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000,\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000"
        string_valr\000\000\000\001\000\000\000"
        string_valr\000\000\000\001\000\000\000"
        string_val: "\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000"
        string_val: "\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0001\000\000\000\001\000\000\0002\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0001\000\000\000\001\000\000\0002\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000A\000\000\000\001\000\000\0003\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000A\000\000\000\001\000\000\0003\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000"
        string_val: "\006\000\000\000\001\000\000\000\001\000\000\000\027\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\027\000\000\000\001\000\000\000\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000"
        string_val: "\006\000\000\000\001\000\000\000\001\000\000\000\027\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\027\000\000\000\001\000\000\000\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000$\000\000\000\001\000\000\000\001\000\000\000%\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000$\000\000\000\001\000\000\000\001\000\000\000%\000\000\000\001\000\000\000"
        string_val: "\010\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\027\000\000\000\001\000\000\000\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\010\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\027\000\000\000\001\000\000\000\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000<\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\022\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000<\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\022\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\t\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\t\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000"
        string_val: "\037\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\"\000\000\000\001\000\000\000\001\000\000\000$\000\000\000\001\000\000\000\001\000\000\000%\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\037\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\"\000\000\000\001\000\000\000\001\000\000\000$\000\000\000\001\000\000\000\001\000\000\000%\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val
        string_val
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\034\000\000\000\001\000\000\000\035\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000?\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\034\000\000\000\001\000\000\000\035\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000?\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000(\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000(\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000:\000\000\000\001\000\000\000\001\000\000\000\036\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000:\000\000\000\001\000\000\000\001\000\000\000\036\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\030\000\000\000\001\000\000\000\031\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\030\000\000\000\001\000\000\000\031\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\022\000\000\000\001\000\000\000\001\000\000\000\037\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000$\000\000\000\001\000\000\000\001\000\000\000%\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\022\000\000\000\001\000\000\000\001\000\000\000\037\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000$\000\000\000\001\000\000\000\001\000\000\000%\000\000\000\001\000\000\000"
        string_val: "\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000\001\000\000\000D\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000E\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000B\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000\001\000\000\000D\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000E\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000B\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\037\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\037\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val
        string_val
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\022\000\000\000\001\000\000\000\001\000\000\000/\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000F\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\022\000\000\000\001\000\000\000\001\000\000\000/\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000F\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000:\000\000\000\001\000\000\000\001\000\000\000D\000\000\000\001\000\000\000\001\000\000\000\004\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000:\000\000\000\001\000\000\000\001\000\000\000D\000\000\000\001\000\000\000\001\000\000\000\004\000\000\000\001\000\000\000\001\000\000\000"
        string_val
        string_val
        string_val
        string_val
        string_val: "B\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000F\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "B\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000F\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\032\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000;\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000C\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\032\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000;\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000C\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000!\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000<\000\000\000\001\000\000\000\001\000\000\000\021\000\000\000\001\000\000\000\001\000\000\000\006\000\000\000\001\000\000\000\001\000\000\000\027\000\000\000\001\000\000\000$\000\000\000\001\000\000\000\001\000\000\000%\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000!\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000<\000\000\000\001\000\000\000\001\000\000\000\021\000\000\000\001\000\000\000\001\000\000\000\006\000\000\000\001\000\000\000\001\000\000\000\027\000\000\000\001\000\000\000$\000\000\000\001\000\000\000\001\000\000\000%\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\"\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\"\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\021\000\000\000\001\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\t\000\000\000\001\000\000\000\"\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\021\000\000\000\001\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\t\000\000\000\001\000\000\000\"\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\"\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\"\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000B\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000/\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000B\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000/\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\000+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\000+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\010\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0005\000\000\000\001\000\000\000\001\000\000\000<\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\010\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0005\000\000\000\001\000\000\000\001\000\000\000<\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "D\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "D\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\004\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\004\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "0\000\000\000\001\000\000\000\004\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000?\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "0\000\000\000\001\000\000\000\004\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000?\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "/\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000!\000\000\000\001\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "/\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000!\000\000\000\001\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000"
        string_val
        string_val
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\0009\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000&\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\0009\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000&\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val
        string_val
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "C\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\032\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\"\000\000\000\001\000\000\000\001\000\000\000G\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\025\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "C\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\032\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\"\000\000\000\001\000\000\000\001\000\000\000G\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\025\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\030\000\000\000\001\000\000\000\021\000\000\000\001\000\000\000\001\000\000\000\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\032\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000A\000\000\000\001\000\000\000H\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\030\000\000\000\001\000\000\000\021\000\000\000\001\000\000\000\001\000\000\000\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\032\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000A\000\000\000\001\000\000\000H\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_valr\000\000\000\001\000\000\000"
        string_valr\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000!\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000!\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000.\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000.\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "=\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000.\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "=\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000.\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000A\000\000\000\001\000\000\0003\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000A\000\000\000\001\000\000\0003\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\0006\000\000\000\001\000\000\0007\000\000\000\001\000\000\000\025\000\000\000\001\000\000\000\001\000\000\0008\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\0006\000\000\000\001\000\000\0007\000\000\000\001\000\000\000\025\000\000\000\001\000\000\000\001\000\000\0008\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "/\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "/\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: ">\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: ">\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000/\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0003\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000/\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0003\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "!\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000<\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "!\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000<\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\010\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0004\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000<\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\010\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0004\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000<\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\0006\000\000\000\001\000\000\0007\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\027\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\0006\000\000\000\001\000\000\0007\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\027\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000\023\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000\023\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "=\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000,\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\004\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "=\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000,\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\004\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0009\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\006\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0009\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\006\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\006\000\000\000\001\000\000\000\001\000\000\000\023\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\006\000\000\000\001\000\000\000\001\000\000\000\023\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000<\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000<\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\016\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\016\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\032\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\032\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000B\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000B\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "D\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "D\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\031\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\031\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\0001\000\000\000\001\000\000\0002\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\0001\000\000\000\001\000\000\0002\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "@\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000A\000\000\000\001\000\000\000H\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "@\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000A\000\000\000\001\000\000\000H\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\027\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\027\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\032\000\000\000\001\000\000\000\001\000\000\000A\000\000\000\001\000\000\000H\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\032\000\000\000\001\000\000\000\001\000\000\000A\000\000\000\001\000\000\000H\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "!\000\000\000\001\000\000\000\001\000\000\000\"\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "!\000\000\000\001\000\000\000\001\000\000\000\"\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_valr\000\000\000\001\000\000\000"
        string_valr\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\031\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\031\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: ";\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: ";\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "5\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000C\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\025\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "5\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000C\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\025\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000D\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000D\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: ">\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000<\000\000\000\001\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: ">\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000<\000\000\000\001\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\006\000\000\000\001\000\000\000\001\000\000\000\027\000\000\000\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\032\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\006\000\000\000\001\000\000\000\001\000\000\000\027\000\000\000\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\032\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "D\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "D\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "5\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000B\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000F\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "5\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000B\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000F\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val
        string_val
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\022\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\022\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\024\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\024\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\030\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000"
        string_val: "\030\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000"
        string_val
        string_val
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000A\000\000\000\001\000\000\000H\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0000\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000A\000\000\000\001\000\000\000H\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0000\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000&\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000&\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000\025\000\000\000\001\000\000\000\001\000\000\0008\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000\025\000\000\000\001\000\000\000\001\000\000\0008\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "5\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0007\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "5\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0007\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\030\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\030\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\016\000\000\000\001\000\000\000!\000\000\000\001\000\000\000\001\000\000\000\"\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\024\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\016\000\000\000\001\000\000\000!\000\000\000\001\000\000\000\001\000\000\000\"\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\024\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\024\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\"\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\024\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\"\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\036\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\036\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "5\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000A\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\0003\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "5\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000A\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\0003\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val
        string_val
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000,\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000,\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\n\000\000\000\001\000\000\000\001\000\000\000\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\024\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0009\000\000\000\001\000\000\000\001\000\000\000\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\024\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0009\000\000\000\001\000\000\000\001\000\000\000\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000$\000\000\000\001\000\000\000\001\000\000\000\034\000\000\000\001\000\000\000\035\000\000\000\001\000\000\000.\000\000\000\001\000\000\000\001\000\000\000\t\000\000\000\001\000\000\000:\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000=\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000$\000\000\000\001\000\000\000\001\000\000\000\034\000\000\000\001\000\000\000\035\000\000\000\001\000\000\000.\000\000\000\001\000\000\000\001\000\000\000\t\000\000\000\001\000\000\000:\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000=\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "=\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\004\000\000\000\001\000\000\000\001\000\000\000\031\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000!\000\000\000\001\000\000\000\001\000\000\000\"\000\000\000\001\000\000\000\001\000\000\000(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "=\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\004\000\000\000\001\000\000\000\001\000\000\000\031\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000!\000\000\000\001\000\000\000\001\000\000\000\"\000\000\000\001\000\000\000\001\000\000\000(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\t\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\t\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000D\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000D\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\0001\000\000\000\001\000\000\0002\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\0001\000\000\000\001\000\000\0002\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "-\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\037\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "-\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\037\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "0\000\000\000\001\000\000\000\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\016\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "0\000\000\000\001\000\000\000\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\016\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "9\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\032\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "9\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\032\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000&\000\000\000\001\000\000\000\001\000\000\000\016\000\000\000\001\000\000\000+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000&\000\000\000\001\000\000\000\001\000\000\000\016\000\000\000\001\000\000\000+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\016\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\016\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\031\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\031\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000?\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000?\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000<\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000<\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\024\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\024\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000&\000\000\000\001\000\000\000\001\000\000\000\016\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000&\000\000\000\001\000\000\000\001\000\000\000\016\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "H\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "H\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val
        string_val
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000;\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000;\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "9\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "9\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\0000\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000*\000\000\000\001\000\000\000\001\000\000\0000\000\000\000\001\000\000\000"
        string_val: "\032\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\0001\000\000\000\001\000\000\0002\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000G\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\032\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\0001\000\000\000\001\000\000\0002\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000G\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\025\000\000\000\001\000\000\000\001\000\000\0000\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\025\000\000\000\001\000\000\000\001\000\000\0000\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000B\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000?\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000B\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000?\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000B\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0006\000\000\000\001\000\000\0007\000\000\000\001\000\000\000\016\000\000\000\001\000\000\000\032\000\000\000\001\000\000\000\001\000\000\000F\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000B\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0006\000\000\000\001\000\000\0007\000\000\000\001\000\000\000\016\000\000\000\001\000\000\000\032\000\000\000\001\000\000\000\001\000\000\000F\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\030\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000#\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\030\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000#\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\t\000\000\000\001\000\000\000B\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\t\000\000\000\001\000\000\000B\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000;\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000;\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\017\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000F\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000C\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000F\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000C\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\"\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000C\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\"\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000C\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000#\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000,\000\000\000\001\000\000\000\001\000\000\000!\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000#\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000,\000\000\000\001\000\000\000\001\000\000\000!\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\030\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000B\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\030\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000B\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "5\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "5\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0004\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0004\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\016\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\026\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\001\000\000\000-\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\016\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\033\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\032\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\032\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val
        string_val
        string_val: "\001\000\000\000\001\000\000\000E\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0007\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000E\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000E\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0007\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000E\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\"\000\000\000\001\000\000\000\001\000\000\000C\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\"\000\000\000\001\000\000\000\001\000\000\000C\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\"\000\000\000\001\000\000\000\001\000\000\000C\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\"\000\000\000\001\000\000\000\001\000\000\000C\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val
        string_val
        string_val: "\001\000\000\000\001\000\000\000?\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000?\000\000\000\001\000\000\000\001\000\000\000>\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\034\000\000\000\001\000\000\000\035\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000<\000\000\000\001\000\000\000\001\000\000\000\022\000\000\000\001\000\000\000\001\000\000\000\037\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\034\000\000\000\001\000\000\000\035\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000<\000\000\000\001\000\000\000\001\000\000\000\022\000\000\000\001\000\000\000\001\000\000\000\037\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\"\000\000\000\001\000\000\000\001\000\000\000G\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\"\000\000\000\001\000\000\000\001\000\000\000G\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\037\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\027\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000G\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\037\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\027\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000G\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "C\000\000\000\001\000\000\000\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "C\000\000\000\001\000\000\000\001\000\000\000 \000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: ";\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: ";\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\0006\000\000\000\001\000\000\0007\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\0006\000\000\000\001\000\000\0007\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000\023\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000\023\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
        string_val: ">\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: ">\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000+\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\020\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000"
        string_val: "5\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000E\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "5\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\r\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000E\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "/\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000#\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000,\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000.\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "/\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000#\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000,\000\000\000\001\000\000\000\001\000\000\000\030\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000.\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\013\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\014\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\'\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "5\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000A\000\000\000\001\000\000\000H\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0008\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "5\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000(\000\000\000\001\000\000\000)\000\000\000\001\000\000\000\001\000\000\000A\000\000\000\001\000\000\000H\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0008\000\000\000\001\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\036\000\000\000\001\000\000\000\001\000\000\000\037\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\032\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0001\000\000\000\001\000\000\0002\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
        string_val: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\036\000\000\000\001\000\000\000\001\000\000\000\037\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\032\000\000\000\001\000\000\000\001\000\000\000\007\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\0001\000\000\000\001\000\000\0002\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\005\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "input_producer/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 450
      }
    }
  }
}
node {
  name: "input_producer/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_producer/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_producer/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_producer/strided_slice"
  op: "StridedSlice"
  input: "input_producer/Shape"
  input: "input_producer/strided_slice/stack"
  input: "input_producer/strided_slice/stack_1"
  input: "input_producer/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "input_producer/input_producer/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_producer/input_producer/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_producer/input_producer/range"
  op: "Range"
  input: "input_producer/input_producer/range/start"
  input: "input_producer/strided_slice"
  input: "input_producer/input_producer/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "input_producer/input_producer/RandomShuffle"
  op: "RandomShuffle"
  input: "input_producer/input_producer/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "input_producer/input_producer"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "input_producer/input_producer/input_producer_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "input_producer/input_producer"
  input: "input_producer/input_producer/RandomShuffle"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "input_producer/input_producer/input_producer_Close"
  op: "QueueCloseV2"
  input: "input_producer/input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "input_producer/input_producer/input_producer_Close_1"
  op: "QueueCloseV2"
  input: "input_producer/input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "input_producer/input_producer/input_producer_Size"
  op: "QueueSizeV2"
  input: "input_producer/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_producer/input_producer/Cast"
  op: "Cast"
  input: "input_producer/input_producer/input_producer_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_producer/input_producer/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "input_producer/input_producer/mul"
  op: "Mul"
  input: "input_producer/input_producer/Cast"
  input: "input_producer/input_producer/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_producer/input_producer/fraction_of_32_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "input_producer/input_producer/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "input_producer/input_producer/fraction_of_32_full"
  op: "ScalarSummary"
  input: "input_producer/input_producer/fraction_of_32_full/tags"
  input: "input_producer/input_producer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_producer/input_producer_Dequeue"
  op: "QueueDequeueV2"
  input: "input_producer/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "input_producer/Gather"
  op: "Gather"
  input: "Const"
  input: "input_producer/input_producer_Dequeue"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "input_producer/Gather_1"
  op: "Gather"
  input: "Const_1"
  input: "input_producer/input_producer_Dequeue"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "DecodeRaw"
  op: "DecodeRaw"
  input: "input_producer/Gather"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DecodeRaw_1"
  op: "DecodeRaw"
  input: "input_producer/Gather_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "batch/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "batch/padding_fifo_queue"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 12800
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "batch/padding_fifo_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "batch/padding_fifo_queue"
  input: "DecodeRaw"
  input: "DecodeRaw_1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "batch/padding_fifo_queue_Close"
  op: "QueueCloseV2"
  input: "batch/padding_fifo_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "batch/padding_fifo_queue_Close_1"
  op: "QueueCloseV2"
  input: "batch/padding_fifo_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "batch/padding_fifo_queue_Size"
  op: "QueueSizeV2"
  input: "batch/padding_fifo_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch/Cast"
  op: "Cast"
  input: "batch/padding_fifo_queue_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 7.812499825377017e-05
      }
    }
  }
}
node {
  name: "batch/mul"
  op: "Mul"
  input: "batch/Cast"
  input: "batch/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch/fraction_of_12800_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "batch/fraction_of_12800_full"
      }
    }
  }
}
node {
  name: "batch/fraction_of_12800_full"
  op: "ScalarSummary"
  input: "batch/fraction_of_12800_full/tags"
  input: "batch/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "batch/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 200
      }
    }
  }
}
node {
  name: "batch"
  op: "QueueDequeueManyV2"
  input: "batch/padding_fifo_queue"
  input: "batch/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "emb_x/lookup_table/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "+\000\000\000,\001\000\000"
      }
    }
  }
}
node {
  name: "emb_x/lookup_table/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "emb_x/lookup_table/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "emb_x/lookup_table/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "emb_x/lookup_table/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 43
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "emb_x/lookup_table/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "emb_x/lookup_table/Initializer/truncated_normal/TruncatedNormal"
  input: "emb_x/lookup_table/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 43
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "emb_x/lookup_table/Initializer/truncated_normal"
  op: "Add"
  input: "emb_x/lookup_table/Initializer/truncated_normal/mul"
  input: "emb_x/lookup_table/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 43
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "emb_x/lookup_table"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 43
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 43
        }
        dim {
          size: 300
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "emb_x/lookup_table/Assign"
  op: "Assign"
  input: "emb_x/lookup_table"
  input: "emb_x/lookup_table/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 43
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "emb_x/lookup_table/read"
  op: "Identity"
  input: "emb_x/lookup_table"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 43
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "emb_x/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 300
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "emb_x/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "emb_x/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "emb_x/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "emb_x/strided_slice"
  op: "StridedSlice"
  input: "emb_x/lookup_table/read"
  input: "emb_x/strided_slice/stack"
  input: "emb_x/strided_slice/stack_1"
  input: "emb_x/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 42
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "emb_x/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "emb_x/concat"
  op: "ConcatV2"
  input: "emb_x/zeros"
  input: "emb_x/strided_slice"
  input: "emb_x/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 43
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "embedding_lookup"
  op: "Gather"
  input: "emb_x/concat"
  input: "batch"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "prenet/dense1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: ",\001\000\000,\001\000\000"
      }
    }
  }
}
node {
  name: "prenet/dense1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "prenet/dense1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "prenet/dense1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "prenet/dense1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "prenet/dense1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "prenet/dense1/kernel/Initializer/random_uniform/max"
  input: "prenet/dense1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "prenet/dense1/kernel/Initializer/random_uniform/RandomUniform"
  input: "prenet/dense1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "prenet/dense1/kernel/Initializer/random_uniform/mul"
  input: "prenet/dense1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
        dim {
          size: 300
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "prenet/dense1/kernel/Assign"
  op: "Assign"
  input: "prenet/dense1/kernel"
  input: "prenet/dense1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "prenet/dense1/kernel/read"
  op: "Identity"
  input: "prenet/dense1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "prenet/dense1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "prenet/dense1/bias/Assign"
  op: "Assign"
  input: "prenet/dense1/bias"
  input: "prenet/dense1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "prenet/dense1/bias/read"
  op: "Identity"
  input: "prenet/dense1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/Shape"
  op: "Shape"
  input: "embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/axes"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "prenet/dense1/Tensordot/axes"
  input: "prenet/dense1/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/Cast"
  op: "Cast"
  input: "prenet/dense1/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/mul"
  op: "Mul"
  input: "prenet/dense1/Tensordot/Cast"
  input: "prenet/dense1/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/Less"
  op: "Less"
  input: "prenet/dense1/Tensordot/axes"
  input: "prenet/dense1/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/Cast_1"
  op: "Cast"
  input: "prenet/dense1/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/add"
  op: "Add"
  input: "prenet/dense1/Tensordot/axes"
  input: "prenet/dense1/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/mul_1"
  op: "Mul"
  input: "prenet/dense1/Tensordot/Cast_1"
  input: "prenet/dense1/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/add_1"
  op: "Add"
  input: "prenet/dense1/Tensordot/mul"
  input: "prenet/dense1/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/range"
  op: "Range"
  input: "prenet/dense1/Tensordot/range/start"
  input: "prenet/dense1/Tensordot/Rank"
  input: "prenet/dense1/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/ListDiff"
  op: "ListDiff"
  input: "prenet/dense1/Tensordot/range"
  input: "prenet/dense1/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/Gather"
  op: "Gather"
  input: "prenet/dense1/Tensordot/Shape"
  input: "prenet/dense1/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/Gather_1"
  op: "Gather"
  input: "prenet/dense1/Tensordot/Shape"
  input: "prenet/dense1/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/Prod"
  op: "Prod"
  input: "prenet/dense1/Tensordot/Gather"
  input: "prenet/dense1/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/Prod_1"
  op: "Prod"
  input: "prenet/dense1/Tensordot/Gather_1"
  input: "prenet/dense1/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/concat"
  op: "ConcatV2"
  input: "prenet/dense1/Tensordot/Gather_1"
  input: "prenet/dense1/Tensordot/Gather"
  input: "prenet/dense1/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/concat_1"
  op: "ConcatV2"
  input: "prenet/dense1/Tensordot/ListDiff"
  input: "prenet/dense1/Tensordot/add_1"
  input: "prenet/dense1/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/stack"
  op: "Pack"
  input: "prenet/dense1/Tensordot/Prod"
  input: "prenet/dense1/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/transpose"
  op: "Transpose"
  input: "embedding_lookup"
  input: "prenet/dense1/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/Reshape"
  op: "Reshape"
  input: "prenet/dense1/Tensordot/transpose"
  input: "prenet/dense1/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/transpose_1"
  op: "Transpose"
  input: "prenet/dense1/kernel/read"
  input: "prenet/dense1/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: ",\001\000\000,\001\000\000"
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/Reshape_1"
  op: "Reshape"
  input: "prenet/dense1/Tensordot/transpose_1"
  input: "prenet/dense1/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/MatMul"
  op: "MatMul"
  input: "prenet/dense1/Tensordot/Reshape"
  input: "prenet/dense1/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot/concat_2"
  op: "ConcatV2"
  input: "prenet/dense1/Tensordot/Gather"
  input: "prenet/dense1/Tensordot/Const_2"
  input: "prenet/dense1/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/Tensordot"
  op: "Reshape"
  input: "prenet/dense1/Tensordot/MatMul"
  input: "prenet/dense1/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/BiasAdd"
  op: "BiasAdd"
  input: "prenet/dense1/Tensordot"
  input: "prenet/dense1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "prenet/dense1/Relu"
  op: "Relu"
  input: "prenet/dense1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dropout1/dropout/keep_prob"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "prenet/dropout1/dropout/Shape"
  op: "Shape"
  input: "prenet/dense1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "prenet/dropout1/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "prenet/dropout1/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "prenet/dropout1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "prenet/dropout1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "prenet/dropout1/dropout/random_uniform/sub"
  op: "Sub"
  input: "prenet/dropout1/dropout/random_uniform/max"
  input: "prenet/dropout1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "prenet/dropout1/dropout/random_uniform/mul"
  op: "Mul"
  input: "prenet/dropout1/dropout/random_uniform/RandomUniform"
  input: "prenet/dropout1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dropout1/dropout/random_uniform"
  op: "Add"
  input: "prenet/dropout1/dropout/random_uniform/mul"
  input: "prenet/dropout1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dropout1/dropout/add"
  op: "Add"
  input: "prenet/dropout1/dropout/keep_prob"
  input: "prenet/dropout1/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dropout1/dropout/Floor"
  op: "Floor"
  input: "prenet/dropout1/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dropout1/dropout/div"
  op: "RealDiv"
  input: "prenet/dense1/Relu"
  input: "prenet/dropout1/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dropout1/dropout/mul"
  op: "Mul"
  input: "prenet/dropout1/dropout/div"
  input: "prenet/dropout1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: ",\001\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "prenet/dense2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1154700517654419
      }
    }
  }
}
node {
  name: "prenet/dense2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1154700517654419
      }
    }
  }
}
node {
  name: "prenet/dense2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "prenet/dense2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "prenet/dense2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "prenet/dense2/kernel/Initializer/random_uniform/max"
  input: "prenet/dense2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "prenet/dense2/kernel/Initializer/random_uniform/RandomUniform"
  input: "prenet/dense2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "prenet/dense2/kernel/Initializer/random_uniform/mul"
  input: "prenet/dense2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "prenet/dense2/kernel/Assign"
  op: "Assign"
  input: "prenet/dense2/kernel"
  input: "prenet/dense2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "prenet/dense2/kernel/read"
  op: "Identity"
  input: "prenet/dense2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "prenet/dense2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "prenet/dense2/bias/Assign"
  op: "Assign"
  input: "prenet/dense2/bias"
  input: "prenet/dense2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "prenet/dense2/bias/read"
  op: "Identity"
  input: "prenet/dense2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/Shape"
  op: "Shape"
  input: "prenet/dropout1/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/axes"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "prenet/dense2/Tensordot/axes"
  input: "prenet/dense2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/Cast"
  op: "Cast"
  input: "prenet/dense2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/mul"
  op: "Mul"
  input: "prenet/dense2/Tensordot/Cast"
  input: "prenet/dense2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/Less"
  op: "Less"
  input: "prenet/dense2/Tensordot/axes"
  input: "prenet/dense2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/Cast_1"
  op: "Cast"
  input: "prenet/dense2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/add"
  op: "Add"
  input: "prenet/dense2/Tensordot/axes"
  input: "prenet/dense2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/mul_1"
  op: "Mul"
  input: "prenet/dense2/Tensordot/Cast_1"
  input: "prenet/dense2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/add_1"
  op: "Add"
  input: "prenet/dense2/Tensordot/mul"
  input: "prenet/dense2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/range"
  op: "Range"
  input: "prenet/dense2/Tensordot/range/start"
  input: "prenet/dense2/Tensordot/Rank"
  input: "prenet/dense2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "prenet/dense2/Tensordot/range"
  input: "prenet/dense2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/Gather"
  op: "Gather"
  input: "prenet/dense2/Tensordot/Shape"
  input: "prenet/dense2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/Gather_1"
  op: "Gather"
  input: "prenet/dense2/Tensordot/Shape"
  input: "prenet/dense2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/Prod"
  op: "Prod"
  input: "prenet/dense2/Tensordot/Gather"
  input: "prenet/dense2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/Prod_1"
  op: "Prod"
  input: "prenet/dense2/Tensordot/Gather_1"
  input: "prenet/dense2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/concat"
  op: "ConcatV2"
  input: "prenet/dense2/Tensordot/Gather_1"
  input: "prenet/dense2/Tensordot/Gather"
  input: "prenet/dense2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "prenet/dense2/Tensordot/ListDiff"
  input: "prenet/dense2/Tensordot/add_1"
  input: "prenet/dense2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/stack"
  op: "Pack"
  input: "prenet/dense2/Tensordot/Prod"
  input: "prenet/dense2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/transpose"
  op: "Transpose"
  input: "prenet/dropout1/dropout/mul"
  input: "prenet/dense2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/Reshape"
  op: "Reshape"
  input: "prenet/dense2/Tensordot/transpose"
  input: "prenet/dense2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/transpose_1"
  op: "Transpose"
  input: "prenet/dense2/kernel/read"
  input: "prenet/dense2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: ",\001\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "prenet/dense2/Tensordot/transpose_1"
  input: "prenet/dense2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/MatMul"
  op: "MatMul"
  input: "prenet/dense2/Tensordot/Reshape"
  input: "prenet/dense2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 150
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "prenet/dense2/Tensordot/Gather"
  input: "prenet/dense2/Tensordot/Const_2"
  input: "prenet/dense2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/Tensordot"
  op: "Reshape"
  input: "prenet/dense2/Tensordot/MatMul"
  input: "prenet/dense2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/BiasAdd"
  op: "BiasAdd"
  input: "prenet/dense2/Tensordot"
  input: "prenet/dense2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "prenet/dense2/Relu"
  op: "Relu"
  input: "prenet/dense2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dropout2/dropout/keep_prob"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "prenet/dropout2/dropout/Shape"
  op: "Shape"
  input: "prenet/dense2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "prenet/dropout2/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "prenet/dropout2/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "prenet/dropout2/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "prenet/dropout2/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "prenet/dropout2/dropout/random_uniform/sub"
  op: "Sub"
  input: "prenet/dropout2/dropout/random_uniform/max"
  input: "prenet/dropout2/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "prenet/dropout2/dropout/random_uniform/mul"
  op: "Mul"
  input: "prenet/dropout2/dropout/random_uniform/RandomUniform"
  input: "prenet/dropout2/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dropout2/dropout/random_uniform"
  op: "Add"
  input: "prenet/dropout2/dropout/random_uniform/mul"
  input: "prenet/dropout2/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dropout2/dropout/add"
  op: "Add"
  input: "prenet/dropout2/dropout/keep_prob"
  input: "prenet/dropout2/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dropout2/dropout/Floor"
  op: "Floor"
  input: "prenet/dropout2/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dropout2/dropout/div"
  op: "RealDiv"
  input: "prenet/dense2/Relu"
  input: "prenet/dropout2/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dropout2/dropout/mul"
  op: "Mul"
  input: "prenet/dropout2/dropout/div"
  input: "prenet/dropout2/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1414213627576828
      }
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1414213627576828
      }
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1d_banks/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1d_banks/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  input: "conv1d_banks/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1d_banks/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv1d_banks/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv1d_banks/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  input: "conv1d_banks/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/kernel/Assign"
  op: "Assign"
  input: "conv1d_banks/conv1d/conv1d/kernel"
  input: "conv1d_banks/conv1d/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/kernel/read"
  op: "Identity"
  input: "conv1d_banks/conv1d/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "prenet/dropout2/dropout/mul"
  input: "conv1d_banks/conv1d/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "conv1d_banks/conv1d/conv1d/kernel/read"
  input: "conv1d_banks/conv1d/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "conv1d_banks/conv1d/conv1d/convolution/ExpandDims"
  input: "conv1d_banks/conv1d/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "conv1d_banks/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/kernel/Assign"
  op: "Assign"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/kernel/read"
  op: "Identity"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "prenet/dropout2/dropout/mul"
  input: "conv1d_banks/num_2/conv1d/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel/read"
  input: "conv1d_banks/num_2/conv1d/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "conv1d_banks/num_2/conv1d/conv1d/convolution/ExpandDims"
  input: "conv1d_banks/num_2/conv1d/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "conv1d_banks/num_2/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_2/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_2/concat"
  op: "ConcatV2"
  input: "conv1d_banks/conv1d/conv1d/convolution/Squeeze"
  input: "conv1d_banks/num_2/conv1d/conv1d/convolution/Squeeze"
  input: "conv1d_banks/num_2/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.08164966106414795
      }
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.08164966106414795
      }
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/kernel/Assign"
  op: "Assign"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/kernel/read"
  op: "Identity"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "prenet/dropout2/dropout/mul"
  input: "conv1d_banks/num_3/conv1d/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel/read"
  input: "conv1d_banks/num_3/conv1d/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "conv1d_banks/num_3/conv1d/conv1d/convolution/ExpandDims"
  input: "conv1d_banks/num_3/conv1d/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "conv1d_banks/num_3/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_3/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_3/concat"
  op: "ConcatV2"
  input: "conv1d_banks/num_2/concat"
  input: "conv1d_banks/num_3/conv1d/conv1d/convolution/Squeeze"
  input: "conv1d_banks/num_3/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 450
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\004\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0707106813788414
      }
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0707106813788414
      }
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/kernel/Assign"
  op: "Assign"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/kernel/read"
  op: "Identity"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\004\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "prenet/dropout2/dropout/mul"
  input: "conv1d_banks/num_4/conv1d/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel/read"
  input: "conv1d_banks/num_4/conv1d/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "conv1d_banks/num_4/conv1d/conv1d/convolution/ExpandDims"
  input: "conv1d_banks/num_4/conv1d/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "conv1d_banks/num_4/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_4/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_4/concat"
  op: "ConcatV2"
  input: "conv1d_banks/num_3/concat"
  input: "conv1d_banks/num_4/conv1d/conv1d/convolution/Squeeze"
  input: "conv1d_banks/num_4/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 600
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\005\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06324554979801178
      }
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06324554979801178
      }
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/kernel/Assign"
  op: "Assign"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/kernel/read"
  op: "Identity"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\005\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "prenet/dropout2/dropout/mul"
  input: "conv1d_banks/num_5/conv1d/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel/read"
  input: "conv1d_banks/num_5/conv1d/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "conv1d_banks/num_5/conv1d/conv1d/convolution/ExpandDims"
  input: "conv1d_banks/num_5/conv1d/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "conv1d_banks/num_5/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_5/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_5/concat"
  op: "ConcatV2"
  input: "conv1d_banks/num_4/concat"
  input: "conv1d_banks/num_5/conv1d/conv1d/convolution/Squeeze"
  input: "conv1d_banks/num_5/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 750
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\006\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05773502588272095
      }
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05773502588272095
      }
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/kernel/Assign"
  op: "Assign"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/kernel/read"
  op: "Identity"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\006\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "prenet/dropout2/dropout/mul"
  input: "conv1d_banks/num_6/conv1d/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel/read"
  input: "conv1d_banks/num_6/conv1d/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "conv1d_banks/num_6/conv1d/conv1d/convolution/ExpandDims"
  input: "conv1d_banks/num_6/conv1d/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "conv1d_banks/num_6/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_6/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_6/concat"
  op: "ConcatV2"
  input: "conv1d_banks/num_5/concat"
  input: "conv1d_banks/num_6/conv1d/conv1d/convolution/Squeeze"
  input: "conv1d_banks/num_6/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 900
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\007\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.053452249616384506
      }
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.053452249616384506
      }
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/kernel/Assign"
  op: "Assign"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/kernel/read"
  op: "Identity"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\007\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "prenet/dropout2/dropout/mul"
  input: "conv1d_banks/num_7/conv1d/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel/read"
  input: "conv1d_banks/num_7/conv1d/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "conv1d_banks/num_7/conv1d/conv1d/convolution/ExpandDims"
  input: "conv1d_banks/num_7/conv1d/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "conv1d_banks/num_7/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_7/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_7/concat"
  op: "ConcatV2"
  input: "conv1d_banks/num_6/concat"
  input: "conv1d_banks/num_7/conv1d/conv1d/convolution/Squeeze"
  input: "conv1d_banks/num_7/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 1050
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\010\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05000000074505806
      }
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/kernel/Assign"
  op: "Assign"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/kernel/read"
  op: "Identity"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\010\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "prenet/dropout2/dropout/mul"
  input: "conv1d_banks/num_8/conv1d/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel/read"
  input: "conv1d_banks/num_8/conv1d/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "conv1d_banks/num_8/conv1d/conv1d/convolution/ExpandDims"
  input: "conv1d_banks/num_8/conv1d/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "conv1d_banks/num_8/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_8/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_8/concat"
  op: "ConcatV2"
  input: "conv1d_banks/num_7/concat"
  input: "conv1d_banks/num_8/conv1d/conv1d/convolution/Squeeze"
  input: "conv1d_banks/num_8/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 1200
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\t\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0471404530107975
      }
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0471404530107975
      }
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 9
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/kernel/Assign"
  op: "Assign"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/kernel/read"
  op: "Identity"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\t\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "prenet/dropout2/dropout/mul"
  input: "conv1d_banks/num_9/conv1d/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel/read"
  input: "conv1d_banks/num_9/conv1d/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "conv1d_banks/num_9/conv1d/conv1d/convolution/ExpandDims"
  input: "conv1d_banks/num_9/conv1d/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "conv1d_banks/num_9/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_9/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_9/concat"
  op: "ConcatV2"
  input: "conv1d_banks/num_8/concat"
  input: "conv1d_banks/num_9/conv1d/conv1d/convolution/Squeeze"
  input: "conv1d_banks/num_9/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 1350
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\n\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04472136124968529
      }
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04472136124968529
      }
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/kernel/Assign"
  op: "Assign"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/kernel/read"
  op: "Identity"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\n\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "prenet/dropout2/dropout/mul"
  input: "conv1d_banks/num_10/conv1d/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel/read"
  input: "conv1d_banks/num_10/conv1d/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "conv1d_banks/num_10/conv1d/conv1d/convolution/ExpandDims"
  input: "conv1d_banks/num_10/conv1d/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "conv1d_banks/num_10/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_10/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_10/concat"
  op: "ConcatV2"
  input: "conv1d_banks/num_9/concat"
  input: "conv1d_banks/num_10/conv1d/conv1d/convolution/Squeeze"
  input: "conv1d_banks/num_10/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 1500
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\013\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.042640142142772675
      }
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.042640142142772675
      }
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 11
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/kernel/Assign"
  op: "Assign"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/kernel/read"
  op: "Identity"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\013\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "prenet/dropout2/dropout/mul"
  input: "conv1d_banks/num_11/conv1d/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel/read"
  input: "conv1d_banks/num_11/conv1d/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "conv1d_banks/num_11/conv1d/conv1d/convolution/ExpandDims"
  input: "conv1d_banks/num_11/conv1d/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "conv1d_banks/num_11/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_11/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_11/concat"
  op: "ConcatV2"
  input: "conv1d_banks/num_10/concat"
  input: "conv1d_banks/num_11/conv1d/conv1d/convolution/Squeeze"
  input: "conv1d_banks/num_11/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 1650
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\014\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.040824830532073975
      }
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.040824830532073975
      }
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/kernel/Assign"
  op: "Assign"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/kernel/read"
  op: "Identity"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\014\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "prenet/dropout2/dropout/mul"
  input: "conv1d_banks/num_12/conv1d/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel/read"
  input: "conv1d_banks/num_12/conv1d/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "conv1d_banks/num_12/conv1d/conv1d/convolution/ExpandDims"
  input: "conv1d_banks/num_12/conv1d/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "conv1d_banks/num_12/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_12/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_12/concat"
  op: "ConcatV2"
  input: "conv1d_banks/num_11/concat"
  input: "conv1d_banks/num_12/conv1d/conv1d/convolution/Squeeze"
  input: "conv1d_banks/num_12/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 1800
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\r\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03922322764992714
      }
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03922322764992714
      }
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/kernel/Assign"
  op: "Assign"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/kernel/read"
  op: "Identity"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\r\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "prenet/dropout2/dropout/mul"
  input: "conv1d_banks/num_13/conv1d/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel/read"
  input: "conv1d_banks/num_13/conv1d/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "conv1d_banks/num_13/conv1d/conv1d/convolution/ExpandDims"
  input: "conv1d_banks/num_13/conv1d/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "conv1d_banks/num_13/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_13/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_13/concat"
  op: "ConcatV2"
  input: "conv1d_banks/num_12/concat"
  input: "conv1d_banks/num_13/conv1d/conv1d/convolution/Squeeze"
  input: "conv1d_banks/num_13/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 1950
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\016\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03779644891619682
      }
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03779644891619682
      }
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 14
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/kernel/Assign"
  op: "Assign"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/kernel/read"
  op: "Identity"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\016\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "prenet/dropout2/dropout/mul"
  input: "conv1d_banks/num_14/conv1d/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel/read"
  input: "conv1d_banks/num_14/conv1d/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "conv1d_banks/num_14/conv1d/conv1d/convolution/ExpandDims"
  input: "conv1d_banks/num_14/conv1d/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "conv1d_banks/num_14/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_14/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_14/concat"
  op: "ConcatV2"
  input: "conv1d_banks/num_13/concat"
  input: "conv1d_banks/num_14/conv1d/conv1d/convolution/Squeeze"
  input: "conv1d_banks/num_14/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 2100
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\017\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03651483729481697
      }
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03651483729481697
      }
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 15
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/kernel/Assign"
  op: "Assign"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/kernel/read"
  op: "Identity"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\017\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "prenet/dropout2/dropout/mul"
  input: "conv1d_banks/num_15/conv1d/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel/read"
  input: "conv1d_banks/num_15/conv1d/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "conv1d_banks/num_15/conv1d/conv1d/convolution/ExpandDims"
  input: "conv1d_banks/num_15/conv1d/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "conv1d_banks/num_15/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_15/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_15/concat"
  op: "ConcatV2"
  input: "conv1d_banks/num_14/concat"
  input: "conv1d_banks/num_15/conv1d/conv1d/convolution/Squeeze"
  input: "conv1d_banks/num_15/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 2250
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0353553406894207
      }
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0353553406894207
      }
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel/Initializer/random_uniform/max"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel/Initializer/random_uniform/mul"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/kernel/Assign"
  op: "Assign"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/kernel/read"
  op: "Identity"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "prenet/dropout2/dropout/mul"
  input: "conv1d_banks/num_16/conv1d/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel/read"
  input: "conv1d_banks/num_16/conv1d/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "conv1d_banks/num_16/conv1d/conv1d/convolution/ExpandDims"
  input: "conv1d_banks/num_16/conv1d/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "conv1d_banks/num_16/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_16/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv1d_banks/num_16/concat"
  op: "ConcatV2"
  input: "conv1d_banks/num_15/concat"
  input: "conv1d_banks/num_16/conv1d/conv1d/convolution/Squeeze"
  input: "conv1d_banks/num_16/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/ExpandDims"
  op: "ExpandDims"
  input: "conv1d_banks/num_16/concat"
  input: "conv1d_banks/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/normalize/beta/Assign"
  op: "Assign"
  input: "conv1d_banks/normalize/beta"
  input: "conv1d_banks/normalize/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/normalize/beta/read"
  op: "Identity"
  input: "conv1d_banks/normalize/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2400
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/normalize/gamma/Assign"
  op: "Assign"
  input: "conv1d_banks/normalize/gamma"
  input: "conv1d_banks/normalize/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/normalize/gamma/read"
  op: "Identity"
  input: "conv1d_banks/normalize/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/normalize/moving_mean/Assign"
  op: "Assign"
  input: "conv1d_banks/normalize/moving_mean"
  input: "conv1d_banks/normalize/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/normalize/moving_mean/read"
  op: "Identity"
  input: "conv1d_banks/normalize/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2400
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/normalize/moving_variance/Assign"
  op: "Assign"
  input: "conv1d_banks/normalize/moving_variance"
  input: "conv1d_banks/normalize/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/normalize/moving_variance/read"
  op: "Identity"
  input: "conv1d_banks/normalize/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv1d_banks/ExpandDims"
  input: "conv1d_banks/normalize/gamma/read"
  input: "conv1d_banks/normalize/beta/read"
  input: "conv1d_banks/normalize/Const"
  input: "conv1d_banks/normalize/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 2400
          }
        }
        shape {
          dim {
            size: 2400
          }
        }
        shape {
          dim {
            size: 2400
          }
        }
        shape {
          dim {
            size: 2400
          }
        }
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/normalize/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/biased"
  input: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/biased/read"
  op: "Identity"
  input: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/local_step"
  input: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/local_step/read"
  op: "Identity"
  input: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/sub"
  op: "Sub"
  input: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/biased/read"
  input: "conv1d_banks/normalize/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/mul"
  op: "Mul"
  input: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/sub"
  input: "conv1d_banks/normalize/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/conv1d_banks/normalize/conv1d_banks/normalize/moving_mean"
  op: "AssignSub"
  input: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/biased"
  input: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/local_step"
  input: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/read"
  op: "Identity"
  input: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/biased"
  input: "^conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/conv1d_banks/normalize/conv1d_banks/normalize/moving_mean"
  input: "^conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/conv1d_banks/normalize/conv1d_banks/normalize/moving_mean"
  input: "^conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/AssignAdd"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/sub_1"
  op: "Sub"
  input: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/sub_1/x"
  input: "conv1d_banks/normalize/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/read_1"
  op: "Identity"
  input: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/local_step"
  input: "^conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/conv1d_banks/normalize/conv1d_banks/normalize/moving_mean"
  input: "^conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/Pow"
  op: "Pow"
  input: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/sub_1"
  input: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/conv1d_banks/normalize/conv1d_banks/normalize/moving_mean"
  input: "^conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/AssignAdd"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/sub_2"
  op: "Sub"
  input: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/sub_2/x"
  input: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/truediv"
  op: "RealDiv"
  input: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/read"
  input: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/sub_3"
  op: "Sub"
  input: "conv1d_banks/normalize/moving_mean/read"
  input: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/AssignMovingAvg"
  op: "AssignSub"
  input: "conv1d_banks/normalize/moving_mean"
  input: "conv1d_banks/normalize/AssignMovingAvg/conv1d_banks/normalize/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1d_banks/normalize/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "conv1d_banks/normalize/moving_variance/read"
  input: "conv1d_banks/normalize/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "conv1d_banks/normalize/AssignMovingAvg_1/sub"
  input: "conv1d_banks/normalize/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv1d_banks/normalize/moving_variance"
  input: "conv1d_banks/normalize/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1d_banks/normalize/Identity"
  op: "Identity"
  input: "conv1d_banks/normalize/FusedBatchNorm"
  input: "^conv1d_banks/normalize/AssignMovingAvg"
  input: "^conv1d_banks/normalize/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/Squeeze"
  op: "Squeeze"
  input: "conv1d_banks/normalize/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "conv1d_banks/Relu"
  op: "Relu"
  input: "conv1d_banks/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "max_pooling1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "max_pooling1d/ExpandDims"
  op: "ExpandDims"
  input: "conv1d_banks/Relu"
  input: "max_pooling1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "max_pooling1d/MaxPool"
  op: "MaxPool"
  input: "max_pooling1d/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "max_pooling1d/Squeeze"
  op: "Squeeze"
  input: "max_pooling1d/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 2
      }
    }
  }
}
node {
  name: "conv1d_1/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\005\000\000\000`\t\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_1/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.021693045273423195
      }
    }
  }
}
node {
  name: "conv1d_1/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.021693045273423195
      }
    }
  }
}
node {
  name: "conv1d_1/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1d_1/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1d_1/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1d_1/conv1d/kernel/Initializer/random_uniform/max"
  input: "conv1d_1/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1d_1/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1d_1/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv1d_1/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_1/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv1d_1/conv1d/kernel/Initializer/random_uniform/mul"
  input: "conv1d_1/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_1/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 2400
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_1/conv1d/kernel/Assign"
  op: "Assign"
  input: "conv1d_1/conv1d/kernel"
  input: "conv1d_1/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_1/conv1d/kernel/read"
  op: "Identity"
  input: "conv1d_1/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_1/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\005\000\000\000`\t\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_1/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_1/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_1/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "max_pooling1d/Squeeze"
  input: "conv1d_1/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_1/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1d_1/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "conv1d_1/conv1d/kernel/read"
  input: "conv1d_1/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_1/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "conv1d_1/conv1d/convolution/ExpandDims"
  input: "conv1d_1/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_1/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "conv1d_1/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ExpandDims"
  op: "ExpandDims"
  input: "conv1d_1/conv1d/convolution/Squeeze"
  input: "ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm1/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "norm1/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "norm1/beta/Assign"
  op: "Assign"
  input: "norm1/beta"
  input: "norm1/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "norm1/beta/read"
  op: "Identity"
  input: "norm1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm1/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "norm1/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "norm1/gamma/Assign"
  op: "Assign"
  input: "norm1/gamma"
  input: "norm1/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "norm1/gamma/read"
  op: "Identity"
  input: "norm1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm1/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "norm1/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "norm1/moving_mean/Assign"
  op: "Assign"
  input: "norm1/moving_mean"
  input: "norm1/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "norm1/moving_mean/read"
  op: "Identity"
  input: "norm1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm1/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "norm1/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "norm1/moving_variance/Assign"
  op: "Assign"
  input: "norm1/moving_variance"
  input: "norm1/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "norm1/moving_variance/read"
  op: "Identity"
  input: "norm1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "norm1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "norm1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "ExpandDims"
  input: "norm1/gamma/read"
  input: "norm1/beta/read"
  input: "norm1/Const"
  input: "norm1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "norm1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "norm1/AssignMovingAvg/norm1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "norm1/norm1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "norm1/norm1/moving_mean/biased/Assign"
  op: "Assign"
  input: "norm1/norm1/moving_mean/biased"
  input: "norm1/AssignMovingAvg/norm1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "norm1/norm1/moving_mean/biased/read"
  op: "Identity"
  input: "norm1/norm1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm1/norm1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "norm1/norm1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "norm1/norm1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "norm1/norm1/moving_mean/local_step"
  input: "norm1/norm1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "norm1/norm1/moving_mean/local_step/read"
  op: "Identity"
  input: "norm1/norm1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm1/AssignMovingAvg/norm1/moving_mean/sub"
  op: "Sub"
  input: "norm1/norm1/moving_mean/biased/read"
  input: "norm1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm1/AssignMovingAvg/norm1/moving_mean/mul"
  op: "Mul"
  input: "norm1/AssignMovingAvg/norm1/moving_mean/sub"
  input: "norm1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm1/AssignMovingAvg/norm1/moving_mean/norm1/norm1/moving_mean"
  op: "AssignSub"
  input: "norm1/norm1/moving_mean/biased"
  input: "norm1/AssignMovingAvg/norm1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "norm1/AssignMovingAvg/norm1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "norm1/AssignMovingAvg/norm1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "norm1/norm1/moving_mean/local_step"
  input: "norm1/AssignMovingAvg/norm1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "norm1/AssignMovingAvg/norm1/moving_mean/read"
  op: "Identity"
  input: "norm1/norm1/moving_mean/biased"
  input: "^norm1/AssignMovingAvg/norm1/moving_mean/norm1/norm1/moving_mean"
  input: "^norm1/AssignMovingAvg/norm1/moving_mean/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm1/AssignMovingAvg/norm1/moving_mean/sub_1/x"
  op: "Const"
  input: "^norm1/AssignMovingAvg/norm1/moving_mean/norm1/norm1/moving_mean"
  input: "^norm1/AssignMovingAvg/norm1/moving_mean/AssignAdd"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "norm1/AssignMovingAvg/norm1/moving_mean/sub_1"
  op: "Sub"
  input: "norm1/AssignMovingAvg/norm1/moving_mean/sub_1/x"
  input: "norm1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm1/AssignMovingAvg/norm1/moving_mean/read_1"
  op: "Identity"
  input: "norm1/norm1/moving_mean/local_step"
  input: "^norm1/AssignMovingAvg/norm1/moving_mean/norm1/norm1/moving_mean"
  input: "^norm1/AssignMovingAvg/norm1/moving_mean/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm1/AssignMovingAvg/norm1/moving_mean/Pow"
  op: "Pow"
  input: "norm1/AssignMovingAvg/norm1/moving_mean/sub_1"
  input: "norm1/AssignMovingAvg/norm1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm1/AssignMovingAvg/norm1/moving_mean/sub_2/x"
  op: "Const"
  input: "^norm1/AssignMovingAvg/norm1/moving_mean/norm1/norm1/moving_mean"
  input: "^norm1/AssignMovingAvg/norm1/moving_mean/AssignAdd"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "norm1/AssignMovingAvg/norm1/moving_mean/sub_2"
  op: "Sub"
  input: "norm1/AssignMovingAvg/norm1/moving_mean/sub_2/x"
  input: "norm1/AssignMovingAvg/norm1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm1/AssignMovingAvg/norm1/moving_mean/truediv"
  op: "RealDiv"
  input: "norm1/AssignMovingAvg/norm1/moving_mean/read"
  input: "norm1/AssignMovingAvg/norm1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm1/AssignMovingAvg/norm1/moving_mean/sub_3"
  op: "Sub"
  input: "norm1/moving_mean/read"
  input: "norm1/AssignMovingAvg/norm1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm1/AssignMovingAvg"
  op: "AssignSub"
  input: "norm1/moving_mean"
  input: "norm1/AssignMovingAvg/norm1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "norm1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "norm1/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "norm1/moving_variance/read"
  input: "norm1/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm1/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "norm1/AssignMovingAvg_1/sub"
  input: "norm1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "norm1/moving_variance"
  input: "norm1/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "norm1/Identity"
  op: "Identity"
  input: "norm1/FusedBatchNorm"
  input: "^norm1/AssignMovingAvg"
  input: "^norm1/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "Squeeze"
  op: "Squeeze"
  input: "norm1/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "Relu"
  op: "Relu"
  input: "Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_2/conv1d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\005\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_2/conv1d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06324554979801178
      }
    }
  }
}
node {
  name: "conv1d_2/conv1d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06324554979801178
      }
    }
  }
}
node {
  name: "conv1d_2/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1d_2/conv1d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1d_2/conv1d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1d_2/conv1d/kernel/Initializer/random_uniform/max"
  input: "conv1d_2/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1d_2/conv1d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1d_2/conv1d/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv1d_2/conv1d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_2/conv1d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv1d_2/conv1d/kernel/Initializer/random_uniform/mul"
  input: "conv1d_2/conv1d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_2/conv1d/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_2/conv1d/kernel/Assign"
  op: "Assign"
  input: "conv1d_2/conv1d/kernel"
  input: "conv1d_2/conv1d/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_2/conv1d/kernel/read"
  op: "Identity"
  input: "conv1d_2/conv1d/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_2/conv1d/convolution/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\005\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "conv1d_2/conv1d/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_2/conv1d/convolution/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1d_2/conv1d/convolution/ExpandDims"
  op: "ExpandDims"
  input: "Relu"
  input: "conv1d_2/conv1d/convolution/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_2/conv1d/convolution/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1d_2/conv1d/convolution/ExpandDims_1"
  op: "ExpandDims"
  input: "conv1d_2/conv1d/kernel/read"
  input: "conv1d_2/conv1d/convolution/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_2/conv1d/convolution/Conv2D"
  op: "Conv2D"
  input: "conv1d_2/conv1d/convolution/ExpandDims"
  input: "conv1d_2/conv1d/convolution/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_2/conv1d/convolution/Squeeze"
  op: "Squeeze"
  input: "conv1d_2/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ExpandDims_1"
  op: "ExpandDims"
  input: "conv1d_2/conv1d/convolution/Squeeze"
  input: "ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm2/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "norm2/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "norm2/beta/Assign"
  op: "Assign"
  input: "norm2/beta"
  input: "norm2/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "norm2/beta/read"
  op: "Identity"
  input: "norm2/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm2/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "norm2/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "norm2/gamma/Assign"
  op: "Assign"
  input: "norm2/gamma"
  input: "norm2/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "norm2/gamma/read"
  op: "Identity"
  input: "norm2/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm2/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "norm2/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "norm2/moving_mean/Assign"
  op: "Assign"
  input: "norm2/moving_mean"
  input: "norm2/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "norm2/moving_mean/read"
  op: "Identity"
  input: "norm2/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm2/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "norm2/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "norm2/moving_variance/Assign"
  op: "Assign"
  input: "norm2/moving_variance"
  input: "norm2/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "norm2/moving_variance/read"
  op: "Identity"
  input: "norm2/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "norm2/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "norm2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "ExpandDims_1"
  input: "norm2/gamma/read"
  input: "norm2/beta/read"
  input: "norm2/Const"
  input: "norm2/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "norm2/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "norm2/AssignMovingAvg/norm2/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "norm2/norm2/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "norm2/norm2/moving_mean/biased/Assign"
  op: "Assign"
  input: "norm2/norm2/moving_mean/biased"
  input: "norm2/AssignMovingAvg/norm2/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "norm2/norm2/moving_mean/biased/read"
  op: "Identity"
  input: "norm2/norm2/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm2/norm2/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "norm2/norm2/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "norm2/norm2/moving_mean/local_step/Assign"
  op: "Assign"
  input: "norm2/norm2/moving_mean/local_step"
  input: "norm2/norm2/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "norm2/norm2/moving_mean/local_step/read"
  op: "Identity"
  input: "norm2/norm2/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm2/AssignMovingAvg/norm2/moving_mean/sub"
  op: "Sub"
  input: "norm2/norm2/moving_mean/biased/read"
  input: "norm2/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm2/AssignMovingAvg/norm2/moving_mean/mul"
  op: "Mul"
  input: "norm2/AssignMovingAvg/norm2/moving_mean/sub"
  input: "norm2/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm2/AssignMovingAvg/norm2/moving_mean/norm2/norm2/moving_mean"
  op: "AssignSub"
  input: "norm2/norm2/moving_mean/biased"
  input: "norm2/AssignMovingAvg/norm2/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "norm2/AssignMovingAvg/norm2/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "norm2/AssignMovingAvg/norm2/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "norm2/norm2/moving_mean/local_step"
  input: "norm2/AssignMovingAvg/norm2/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "norm2/AssignMovingAvg/norm2/moving_mean/read"
  op: "Identity"
  input: "norm2/norm2/moving_mean/biased"
  input: "^norm2/AssignMovingAvg/norm2/moving_mean/norm2/norm2/moving_mean"
  input: "^norm2/AssignMovingAvg/norm2/moving_mean/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm2/AssignMovingAvg/norm2/moving_mean/sub_1/x"
  op: "Const"
  input: "^norm2/AssignMovingAvg/norm2/moving_mean/norm2/norm2/moving_mean"
  input: "^norm2/AssignMovingAvg/norm2/moving_mean/AssignAdd"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "norm2/AssignMovingAvg/norm2/moving_mean/sub_1"
  op: "Sub"
  input: "norm2/AssignMovingAvg/norm2/moving_mean/sub_1/x"
  input: "norm2/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm2/AssignMovingAvg/norm2/moving_mean/read_1"
  op: "Identity"
  input: "norm2/norm2/moving_mean/local_step"
  input: "^norm2/AssignMovingAvg/norm2/moving_mean/norm2/norm2/moving_mean"
  input: "^norm2/AssignMovingAvg/norm2/moving_mean/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm2/AssignMovingAvg/norm2/moving_mean/Pow"
  op: "Pow"
  input: "norm2/AssignMovingAvg/norm2/moving_mean/sub_1"
  input: "norm2/AssignMovingAvg/norm2/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm2/AssignMovingAvg/norm2/moving_mean/sub_2/x"
  op: "Const"
  input: "^norm2/AssignMovingAvg/norm2/moving_mean/norm2/norm2/moving_mean"
  input: "^norm2/AssignMovingAvg/norm2/moving_mean/AssignAdd"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "norm2/AssignMovingAvg/norm2/moving_mean/sub_2"
  op: "Sub"
  input: "norm2/AssignMovingAvg/norm2/moving_mean/sub_2/x"
  input: "norm2/AssignMovingAvg/norm2/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "norm2/AssignMovingAvg/norm2/moving_mean/truediv"
  op: "RealDiv"
  input: "norm2/AssignMovingAvg/norm2/moving_mean/read"
  input: "norm2/AssignMovingAvg/norm2/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm2/AssignMovingAvg/norm2/moving_mean/sub_3"
  op: "Sub"
  input: "norm2/moving_mean/read"
  input: "norm2/AssignMovingAvg/norm2/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm2/AssignMovingAvg"
  op: "AssignSub"
  input: "norm2/moving_mean"
  input: "norm2/AssignMovingAvg/norm2/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "norm2/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "norm2/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "norm2/moving_variance/read"
  input: "norm2/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm2/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "norm2/AssignMovingAvg_1/sub"
  input: "norm2/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm2/AssignMovingAvg_1"
  op: "AssignSub"
  input: "norm2/moving_variance"
  input: "norm2/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "norm2/Identity"
  op: "Identity"
  input: "norm2/FusedBatchNorm"
  input: "^norm2/AssignMovingAvg"
  input: "^norm2/AssignMovingAvg_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "Squeeze_1"
  op: "Squeeze"
  input: "norm2/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "Squeeze_1"
  input: "prenet/dropout2/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1414213627576828
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1414213627576828
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "highwaynet_0/dense1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "highwaynet_0/dense1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "highwaynet_0/dense1/kernel/Initializer/random_uniform/max"
  input: "highwaynet_0/dense1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "highwaynet_0/dense1/kernel/Initializer/random_uniform/RandomUniform"
  input: "highwaynet_0/dense1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "highwaynet_0/dense1/kernel/Initializer/random_uniform/mul"
  input: "highwaynet_0/dense1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_0/dense1/kernel/Assign"
  op: "Assign"
  input: "highwaynet_0/dense1/kernel"
  input: "highwaynet_0/dense1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_0/dense1/kernel/read"
  op: "Identity"
  input: "highwaynet_0/dense1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_0/dense1/bias/Assign"
  op: "Assign"
  input: "highwaynet_0/dense1/bias"
  input: "highwaynet_0/dense1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_0/dense1/bias/read"
  op: "Identity"
  input: "highwaynet_0/dense1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/Shape"
  op: "Shape"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/axes"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "highwaynet_0/dense1/Tensordot/axes"
  input: "highwaynet_0/dense1/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/Cast"
  op: "Cast"
  input: "highwaynet_0/dense1/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/mul"
  op: "Mul"
  input: "highwaynet_0/dense1/Tensordot/Cast"
  input: "highwaynet_0/dense1/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/Less"
  op: "Less"
  input: "highwaynet_0/dense1/Tensordot/axes"
  input: "highwaynet_0/dense1/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/Cast_1"
  op: "Cast"
  input: "highwaynet_0/dense1/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/add"
  op: "Add"
  input: "highwaynet_0/dense1/Tensordot/axes"
  input: "highwaynet_0/dense1/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/mul_1"
  op: "Mul"
  input: "highwaynet_0/dense1/Tensordot/Cast_1"
  input: "highwaynet_0/dense1/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/add_1"
  op: "Add"
  input: "highwaynet_0/dense1/Tensordot/mul"
  input: "highwaynet_0/dense1/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/range"
  op: "Range"
  input: "highwaynet_0/dense1/Tensordot/range/start"
  input: "highwaynet_0/dense1/Tensordot/Rank"
  input: "highwaynet_0/dense1/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/ListDiff"
  op: "ListDiff"
  input: "highwaynet_0/dense1/Tensordot/range"
  input: "highwaynet_0/dense1/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/Gather"
  op: "Gather"
  input: "highwaynet_0/dense1/Tensordot/Shape"
  input: "highwaynet_0/dense1/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/Gather_1"
  op: "Gather"
  input: "highwaynet_0/dense1/Tensordot/Shape"
  input: "highwaynet_0/dense1/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/Prod"
  op: "Prod"
  input: "highwaynet_0/dense1/Tensordot/Gather"
  input: "highwaynet_0/dense1/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/Prod_1"
  op: "Prod"
  input: "highwaynet_0/dense1/Tensordot/Gather_1"
  input: "highwaynet_0/dense1/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/concat"
  op: "ConcatV2"
  input: "highwaynet_0/dense1/Tensordot/Gather_1"
  input: "highwaynet_0/dense1/Tensordot/Gather"
  input: "highwaynet_0/dense1/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/concat_1"
  op: "ConcatV2"
  input: "highwaynet_0/dense1/Tensordot/ListDiff"
  input: "highwaynet_0/dense1/Tensordot/add_1"
  input: "highwaynet_0/dense1/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/stack"
  op: "Pack"
  input: "highwaynet_0/dense1/Tensordot/Prod"
  input: "highwaynet_0/dense1/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/transpose"
  op: "Transpose"
  input: "add"
  input: "highwaynet_0/dense1/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/Reshape"
  op: "Reshape"
  input: "highwaynet_0/dense1/Tensordot/transpose"
  input: "highwaynet_0/dense1/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/transpose_1"
  op: "Transpose"
  input: "highwaynet_0/dense1/kernel/read"
  input: "highwaynet_0/dense1/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/Reshape_1"
  op: "Reshape"
  input: "highwaynet_0/dense1/Tensordot/transpose_1"
  input: "highwaynet_0/dense1/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/MatMul"
  op: "MatMul"
  input: "highwaynet_0/dense1/Tensordot/Reshape"
  input: "highwaynet_0/dense1/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 150
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot/concat_2"
  op: "ConcatV2"
  input: "highwaynet_0/dense1/Tensordot/Gather"
  input: "highwaynet_0/dense1/Tensordot/Const_2"
  input: "highwaynet_0/dense1/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/Tensordot"
  op: "Reshape"
  input: "highwaynet_0/dense1/Tensordot/MatMul"
  input: "highwaynet_0/dense1/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/BiasAdd"
  op: "BiasAdd"
  input: "highwaynet_0/dense1/Tensordot"
  input: "highwaynet_0/dense1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "highwaynet_0/dense1/Relu"
  op: "Relu"
  input: "highwaynet_0/dense1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1414213627576828
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1414213627576828
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "highwaynet_0/dense2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "highwaynet_0/dense2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "highwaynet_0/dense2/kernel/Initializer/random_uniform/max"
  input: "highwaynet_0/dense2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "highwaynet_0/dense2/kernel/Initializer/random_uniform/RandomUniform"
  input: "highwaynet_0/dense2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "highwaynet_0/dense2/kernel/Initializer/random_uniform/mul"
  input: "highwaynet_0/dense2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_0/dense2/kernel/Assign"
  op: "Assign"
  input: "highwaynet_0/dense2/kernel"
  input: "highwaynet_0/dense2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_0/dense2/kernel/read"
  op: "Identity"
  input: "highwaynet_0/dense2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_0/dense2/bias/Assign"
  op: "Assign"
  input: "highwaynet_0/dense2/bias"
  input: "highwaynet_0/dense2/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_0/dense2/bias/read"
  op: "Identity"
  input: "highwaynet_0/dense2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/Shape"
  op: "Shape"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/axes"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "highwaynet_0/dense2/Tensordot/axes"
  input: "highwaynet_0/dense2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/Cast"
  op: "Cast"
  input: "highwaynet_0/dense2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/mul"
  op: "Mul"
  input: "highwaynet_0/dense2/Tensordot/Cast"
  input: "highwaynet_0/dense2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/Less"
  op: "Less"
  input: "highwaynet_0/dense2/Tensordot/axes"
  input: "highwaynet_0/dense2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/Cast_1"
  op: "Cast"
  input: "highwaynet_0/dense2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/add"
  op: "Add"
  input: "highwaynet_0/dense2/Tensordot/axes"
  input: "highwaynet_0/dense2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/mul_1"
  op: "Mul"
  input: "highwaynet_0/dense2/Tensordot/Cast_1"
  input: "highwaynet_0/dense2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/add_1"
  op: "Add"
  input: "highwaynet_0/dense2/Tensordot/mul"
  input: "highwaynet_0/dense2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/range"
  op: "Range"
  input: "highwaynet_0/dense2/Tensordot/range/start"
  input: "highwaynet_0/dense2/Tensordot/Rank"
  input: "highwaynet_0/dense2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "highwaynet_0/dense2/Tensordot/range"
  input: "highwaynet_0/dense2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/Gather"
  op: "Gather"
  input: "highwaynet_0/dense2/Tensordot/Shape"
  input: "highwaynet_0/dense2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/Gather_1"
  op: "Gather"
  input: "highwaynet_0/dense2/Tensordot/Shape"
  input: "highwaynet_0/dense2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/Prod"
  op: "Prod"
  input: "highwaynet_0/dense2/Tensordot/Gather"
  input: "highwaynet_0/dense2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/Prod_1"
  op: "Prod"
  input: "highwaynet_0/dense2/Tensordot/Gather_1"
  input: "highwaynet_0/dense2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/concat"
  op: "ConcatV2"
  input: "highwaynet_0/dense2/Tensordot/Gather_1"
  input: "highwaynet_0/dense2/Tensordot/Gather"
  input: "highwaynet_0/dense2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "highwaynet_0/dense2/Tensordot/ListDiff"
  input: "highwaynet_0/dense2/Tensordot/add_1"
  input: "highwaynet_0/dense2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/stack"
  op: "Pack"
  input: "highwaynet_0/dense2/Tensordot/Prod"
  input: "highwaynet_0/dense2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/transpose"
  op: "Transpose"
  input: "add"
  input: "highwaynet_0/dense2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/Reshape"
  op: "Reshape"
  input: "highwaynet_0/dense2/Tensordot/transpose"
  input: "highwaynet_0/dense2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/transpose_1"
  op: "Transpose"
  input: "highwaynet_0/dense2/kernel/read"
  input: "highwaynet_0/dense2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "highwaynet_0/dense2/Tensordot/transpose_1"
  input: "highwaynet_0/dense2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/MatMul"
  op: "MatMul"
  input: "highwaynet_0/dense2/Tensordot/Reshape"
  input: "highwaynet_0/dense2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 150
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "highwaynet_0/dense2/Tensordot/Gather"
  input: "highwaynet_0/dense2/Tensordot/Const_2"
  input: "highwaynet_0/dense2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/Tensordot"
  op: "Reshape"
  input: "highwaynet_0/dense2/Tensordot/MatMul"
  input: "highwaynet_0/dense2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/BiasAdd"
  op: "BiasAdd"
  input: "highwaynet_0/dense2/Tensordot"
  input: "highwaynet_0/dense2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "highwaynet_0/dense2/Sigmoid"
  op: "Sigmoid"
  input: "highwaynet_0/dense2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "highwaynet_0/sub"
  op: "Sub"
  input: "highwaynet_0/sub/x"
  input: "highwaynet_0/dense2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/mul"
  op: "Mul"
  input: "highwaynet_0/dense1/Relu"
  input: "highwaynet_0/dense2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/mul_1"
  op: "Mul"
  input: "add"
  input: "highwaynet_0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/add"
  op: "Add"
  input: "highwaynet_0/mul"
  input: "highwaynet_0/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1414213627576828
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1414213627576828
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "highwaynet_1/dense1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "highwaynet_1/dense1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "highwaynet_1/dense1/kernel/Initializer/random_uniform/max"
  input: "highwaynet_1/dense1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "highwaynet_1/dense1/kernel/Initializer/random_uniform/RandomUniform"
  input: "highwaynet_1/dense1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "highwaynet_1/dense1/kernel/Initializer/random_uniform/mul"
  input: "highwaynet_1/dense1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_1/dense1/kernel/Assign"
  op: "Assign"
  input: "highwaynet_1/dense1/kernel"
  input: "highwaynet_1/dense1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_1/dense1/kernel/read"
  op: "Identity"
  input: "highwaynet_1/dense1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_1/dense1/bias/Assign"
  op: "Assign"
  input: "highwaynet_1/dense1/bias"
  input: "highwaynet_1/dense1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_1/dense1/bias/read"
  op: "Identity"
  input: "highwaynet_1/dense1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/Shape"
  op: "Shape"
  input: "highwaynet_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/axes"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "highwaynet_1/dense1/Tensordot/axes"
  input: "highwaynet_1/dense1/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/Cast"
  op: "Cast"
  input: "highwaynet_1/dense1/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/mul"
  op: "Mul"
  input: "highwaynet_1/dense1/Tensordot/Cast"
  input: "highwaynet_1/dense1/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/Less"
  op: "Less"
  input: "highwaynet_1/dense1/Tensordot/axes"
  input: "highwaynet_1/dense1/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/Cast_1"
  op: "Cast"
  input: "highwaynet_1/dense1/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/add"
  op: "Add"
  input: "highwaynet_1/dense1/Tensordot/axes"
  input: "highwaynet_1/dense1/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/mul_1"
  op: "Mul"
  input: "highwaynet_1/dense1/Tensordot/Cast_1"
  input: "highwaynet_1/dense1/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/add_1"
  op: "Add"
  input: "highwaynet_1/dense1/Tensordot/mul"
  input: "highwaynet_1/dense1/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/range"
  op: "Range"
  input: "highwaynet_1/dense1/Tensordot/range/start"
  input: "highwaynet_1/dense1/Tensordot/Rank"
  input: "highwaynet_1/dense1/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/ListDiff"
  op: "ListDiff"
  input: "highwaynet_1/dense1/Tensordot/range"
  input: "highwaynet_1/dense1/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/Gather"
  op: "Gather"
  input: "highwaynet_1/dense1/Tensordot/Shape"
  input: "highwaynet_1/dense1/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/Gather_1"
  op: "Gather"
  input: "highwaynet_1/dense1/Tensordot/Shape"
  input: "highwaynet_1/dense1/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/Prod"
  op: "Prod"
  input: "highwaynet_1/dense1/Tensordot/Gather"
  input: "highwaynet_1/dense1/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/Prod_1"
  op: "Prod"
  input: "highwaynet_1/dense1/Tensordot/Gather_1"
  input: "highwaynet_1/dense1/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/concat"
  op: "ConcatV2"
  input: "highwaynet_1/dense1/Tensordot/Gather_1"
  input: "highwaynet_1/dense1/Tensordot/Gather"
  input: "highwaynet_1/dense1/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/concat_1"
  op: "ConcatV2"
  input: "highwaynet_1/dense1/Tensordot/ListDiff"
  input: "highwaynet_1/dense1/Tensordot/add_1"
  input: "highwaynet_1/dense1/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/stack"
  op: "Pack"
  input: "highwaynet_1/dense1/Tensordot/Prod"
  input: "highwaynet_1/dense1/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/transpose"
  op: "Transpose"
  input: "highwaynet_0/add"
  input: "highwaynet_1/dense1/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/Reshape"
  op: "Reshape"
  input: "highwaynet_1/dense1/Tensordot/transpose"
  input: "highwaynet_1/dense1/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/transpose_1"
  op: "Transpose"
  input: "highwaynet_1/dense1/kernel/read"
  input: "highwaynet_1/dense1/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/Reshape_1"
  op: "Reshape"
  input: "highwaynet_1/dense1/Tensordot/transpose_1"
  input: "highwaynet_1/dense1/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/MatMul"
  op: "MatMul"
  input: "highwaynet_1/dense1/Tensordot/Reshape"
  input: "highwaynet_1/dense1/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 150
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot/concat_2"
  op: "ConcatV2"
  input: "highwaynet_1/dense1/Tensordot/Gather"
  input: "highwaynet_1/dense1/Tensordot/Const_2"
  input: "highwaynet_1/dense1/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/Tensordot"
  op: "Reshape"
  input: "highwaynet_1/dense1/Tensordot/MatMul"
  input: "highwaynet_1/dense1/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/BiasAdd"
  op: "BiasAdd"
  input: "highwaynet_1/dense1/Tensordot"
  input: "highwaynet_1/dense1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "highwaynet_1/dense1/Relu"
  op: "Relu"
  input: "highwaynet_1/dense1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1414213627576828
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1414213627576828
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "highwaynet_1/dense2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "highwaynet_1/dense2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "highwaynet_1/dense2/kernel/Initializer/random_uniform/max"
  input: "highwaynet_1/dense2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "highwaynet_1/dense2/kernel/Initializer/random_uniform/RandomUniform"
  input: "highwaynet_1/dense2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "highwaynet_1/dense2/kernel/Initializer/random_uniform/mul"
  input: "highwaynet_1/dense2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_1/dense2/kernel/Assign"
  op: "Assign"
  input: "highwaynet_1/dense2/kernel"
  input: "highwaynet_1/dense2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_1/dense2/kernel/read"
  op: "Identity"
  input: "highwaynet_1/dense2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_1/dense2/bias/Assign"
  op: "Assign"
  input: "highwaynet_1/dense2/bias"
  input: "highwaynet_1/dense2/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_1/dense2/bias/read"
  op: "Identity"
  input: "highwaynet_1/dense2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/Shape"
  op: "Shape"
  input: "highwaynet_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/axes"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "highwaynet_1/dense2/Tensordot/axes"
  input: "highwaynet_1/dense2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/Cast"
  op: "Cast"
  input: "highwaynet_1/dense2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/mul"
  op: "Mul"
  input: "highwaynet_1/dense2/Tensordot/Cast"
  input: "highwaynet_1/dense2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/Less"
  op: "Less"
  input: "highwaynet_1/dense2/Tensordot/axes"
  input: "highwaynet_1/dense2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/Cast_1"
  op: "Cast"
  input: "highwaynet_1/dense2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/add"
  op: "Add"
  input: "highwaynet_1/dense2/Tensordot/axes"
  input: "highwaynet_1/dense2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/mul_1"
  op: "Mul"
  input: "highwaynet_1/dense2/Tensordot/Cast_1"
  input: "highwaynet_1/dense2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/add_1"
  op: "Add"
  input: "highwaynet_1/dense2/Tensordot/mul"
  input: "highwaynet_1/dense2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/range"
  op: "Range"
  input: "highwaynet_1/dense2/Tensordot/range/start"
  input: "highwaynet_1/dense2/Tensordot/Rank"
  input: "highwaynet_1/dense2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "highwaynet_1/dense2/Tensordot/range"
  input: "highwaynet_1/dense2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/Gather"
  op: "Gather"
  input: "highwaynet_1/dense2/Tensordot/Shape"
  input: "highwaynet_1/dense2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/Gather_1"
  op: "Gather"
  input: "highwaynet_1/dense2/Tensordot/Shape"
  input: "highwaynet_1/dense2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/Prod"
  op: "Prod"
  input: "highwaynet_1/dense2/Tensordot/Gather"
  input: "highwaynet_1/dense2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/Prod_1"
  op: "Prod"
  input: "highwaynet_1/dense2/Tensordot/Gather_1"
  input: "highwaynet_1/dense2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/concat"
  op: "ConcatV2"
  input: "highwaynet_1/dense2/Tensordot/Gather_1"
  input: "highwaynet_1/dense2/Tensordot/Gather"
  input: "highwaynet_1/dense2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "highwaynet_1/dense2/Tensordot/ListDiff"
  input: "highwaynet_1/dense2/Tensordot/add_1"
  input: "highwaynet_1/dense2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/stack"
  op: "Pack"
  input: "highwaynet_1/dense2/Tensordot/Prod"
  input: "highwaynet_1/dense2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/transpose"
  op: "Transpose"
  input: "highwaynet_0/add"
  input: "highwaynet_1/dense2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/Reshape"
  op: "Reshape"
  input: "highwaynet_1/dense2/Tensordot/transpose"
  input: "highwaynet_1/dense2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/transpose_1"
  op: "Transpose"
  input: "highwaynet_1/dense2/kernel/read"
  input: "highwaynet_1/dense2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "highwaynet_1/dense2/Tensordot/transpose_1"
  input: "highwaynet_1/dense2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/MatMul"
  op: "MatMul"
  input: "highwaynet_1/dense2/Tensordot/Reshape"
  input: "highwaynet_1/dense2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 150
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "highwaynet_1/dense2/Tensordot/Gather"
  input: "highwaynet_1/dense2/Tensordot/Const_2"
  input: "highwaynet_1/dense2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/Tensordot"
  op: "Reshape"
  input: "highwaynet_1/dense2/Tensordot/MatMul"
  input: "highwaynet_1/dense2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/BiasAdd"
  op: "BiasAdd"
  input: "highwaynet_1/dense2/Tensordot"
  input: "highwaynet_1/dense2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "highwaynet_1/dense2/Sigmoid"
  op: "Sigmoid"
  input: "highwaynet_1/dense2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "highwaynet_1/sub"
  op: "Sub"
  input: "highwaynet_1/sub/x"
  input: "highwaynet_1/dense2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/mul"
  op: "Mul"
  input: "highwaynet_1/dense1/Relu"
  input: "highwaynet_1/dense2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/mul_1"
  op: "Mul"
  input: "highwaynet_0/add"
  input: "highwaynet_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/add"
  op: "Add"
  input: "highwaynet_1/mul"
  input: "highwaynet_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1414213627576828
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1414213627576828
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "highwaynet_2/dense1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "highwaynet_2/dense1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "highwaynet_2/dense1/kernel/Initializer/random_uniform/max"
  input: "highwaynet_2/dense1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "highwaynet_2/dense1/kernel/Initializer/random_uniform/RandomUniform"
  input: "highwaynet_2/dense1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "highwaynet_2/dense1/kernel/Initializer/random_uniform/mul"
  input: "highwaynet_2/dense1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_2/dense1/kernel/Assign"
  op: "Assign"
  input: "highwaynet_2/dense1/kernel"
  input: "highwaynet_2/dense1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_2/dense1/kernel/read"
  op: "Identity"
  input: "highwaynet_2/dense1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_2/dense1/bias/Assign"
  op: "Assign"
  input: "highwaynet_2/dense1/bias"
  input: "highwaynet_2/dense1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_2/dense1/bias/read"
  op: "Identity"
  input: "highwaynet_2/dense1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/Shape"
  op: "Shape"
  input: "highwaynet_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/axes"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "highwaynet_2/dense1/Tensordot/axes"
  input: "highwaynet_2/dense1/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/Cast"
  op: "Cast"
  input: "highwaynet_2/dense1/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/mul"
  op: "Mul"
  input: "highwaynet_2/dense1/Tensordot/Cast"
  input: "highwaynet_2/dense1/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/Less"
  op: "Less"
  input: "highwaynet_2/dense1/Tensordot/axes"
  input: "highwaynet_2/dense1/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/Cast_1"
  op: "Cast"
  input: "highwaynet_2/dense1/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/add"
  op: "Add"
  input: "highwaynet_2/dense1/Tensordot/axes"
  input: "highwaynet_2/dense1/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/mul_1"
  op: "Mul"
  input: "highwaynet_2/dense1/Tensordot/Cast_1"
  input: "highwaynet_2/dense1/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/add_1"
  op: "Add"
  input: "highwaynet_2/dense1/Tensordot/mul"
  input: "highwaynet_2/dense1/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/range"
  op: "Range"
  input: "highwaynet_2/dense1/Tensordot/range/start"
  input: "highwaynet_2/dense1/Tensordot/Rank"
  input: "highwaynet_2/dense1/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/ListDiff"
  op: "ListDiff"
  input: "highwaynet_2/dense1/Tensordot/range"
  input: "highwaynet_2/dense1/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/Gather"
  op: "Gather"
  input: "highwaynet_2/dense1/Tensordot/Shape"
  input: "highwaynet_2/dense1/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/Gather_1"
  op: "Gather"
  input: "highwaynet_2/dense1/Tensordot/Shape"
  input: "highwaynet_2/dense1/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/Prod"
  op: "Prod"
  input: "highwaynet_2/dense1/Tensordot/Gather"
  input: "highwaynet_2/dense1/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/Prod_1"
  op: "Prod"
  input: "highwaynet_2/dense1/Tensordot/Gather_1"
  input: "highwaynet_2/dense1/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/concat"
  op: "ConcatV2"
  input: "highwaynet_2/dense1/Tensordot/Gather_1"
  input: "highwaynet_2/dense1/Tensordot/Gather"
  input: "highwaynet_2/dense1/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/concat_1"
  op: "ConcatV2"
  input: "highwaynet_2/dense1/Tensordot/ListDiff"
  input: "highwaynet_2/dense1/Tensordot/add_1"
  input: "highwaynet_2/dense1/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/stack"
  op: "Pack"
  input: "highwaynet_2/dense1/Tensordot/Prod"
  input: "highwaynet_2/dense1/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/transpose"
  op: "Transpose"
  input: "highwaynet_1/add"
  input: "highwaynet_2/dense1/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/Reshape"
  op: "Reshape"
  input: "highwaynet_2/dense1/Tensordot/transpose"
  input: "highwaynet_2/dense1/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/transpose_1"
  op: "Transpose"
  input: "highwaynet_2/dense1/kernel/read"
  input: "highwaynet_2/dense1/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/Reshape_1"
  op: "Reshape"
  input: "highwaynet_2/dense1/Tensordot/transpose_1"
  input: "highwaynet_2/dense1/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/MatMul"
  op: "MatMul"
  input: "highwaynet_2/dense1/Tensordot/Reshape"
  input: "highwaynet_2/dense1/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 150
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot/concat_2"
  op: "ConcatV2"
  input: "highwaynet_2/dense1/Tensordot/Gather"
  input: "highwaynet_2/dense1/Tensordot/Const_2"
  input: "highwaynet_2/dense1/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/Tensordot"
  op: "Reshape"
  input: "highwaynet_2/dense1/Tensordot/MatMul"
  input: "highwaynet_2/dense1/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/BiasAdd"
  op: "BiasAdd"
  input: "highwaynet_2/dense1/Tensordot"
  input: "highwaynet_2/dense1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "highwaynet_2/dense1/Relu"
  op: "Relu"
  input: "highwaynet_2/dense1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1414213627576828
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1414213627576828
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "highwaynet_2/dense2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "highwaynet_2/dense2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "highwaynet_2/dense2/kernel/Initializer/random_uniform/max"
  input: "highwaynet_2/dense2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "highwaynet_2/dense2/kernel/Initializer/random_uniform/RandomUniform"
  input: "highwaynet_2/dense2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "highwaynet_2/dense2/kernel/Initializer/random_uniform/mul"
  input: "highwaynet_2/dense2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_2/dense2/kernel/Assign"
  op: "Assign"
  input: "highwaynet_2/dense2/kernel"
  input: "highwaynet_2/dense2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_2/dense2/kernel/read"
  op: "Identity"
  input: "highwaynet_2/dense2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_2/dense2/bias/Assign"
  op: "Assign"
  input: "highwaynet_2/dense2/bias"
  input: "highwaynet_2/dense2/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_2/dense2/bias/read"
  op: "Identity"
  input: "highwaynet_2/dense2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/Shape"
  op: "Shape"
  input: "highwaynet_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/axes"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "highwaynet_2/dense2/Tensordot/axes"
  input: "highwaynet_2/dense2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/Cast"
  op: "Cast"
  input: "highwaynet_2/dense2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/mul"
  op: "Mul"
  input: "highwaynet_2/dense2/Tensordot/Cast"
  input: "highwaynet_2/dense2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/Less"
  op: "Less"
  input: "highwaynet_2/dense2/Tensordot/axes"
  input: "highwaynet_2/dense2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/Cast_1"
  op: "Cast"
  input: "highwaynet_2/dense2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/add"
  op: "Add"
  input: "highwaynet_2/dense2/Tensordot/axes"
  input: "highwaynet_2/dense2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/mul_1"
  op: "Mul"
  input: "highwaynet_2/dense2/Tensordot/Cast_1"
  input: "highwaynet_2/dense2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/add_1"
  op: "Add"
  input: "highwaynet_2/dense2/Tensordot/mul"
  input: "highwaynet_2/dense2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/range"
  op: "Range"
  input: "highwaynet_2/dense2/Tensordot/range/start"
  input: "highwaynet_2/dense2/Tensordot/Rank"
  input: "highwaynet_2/dense2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "highwaynet_2/dense2/Tensordot/range"
  input: "highwaynet_2/dense2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/Gather"
  op: "Gather"
  input: "highwaynet_2/dense2/Tensordot/Shape"
  input: "highwaynet_2/dense2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/Gather_1"
  op: "Gather"
  input: "highwaynet_2/dense2/Tensordot/Shape"
  input: "highwaynet_2/dense2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/Prod"
  op: "Prod"
  input: "highwaynet_2/dense2/Tensordot/Gather"
  input: "highwaynet_2/dense2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/Prod_1"
  op: "Prod"
  input: "highwaynet_2/dense2/Tensordot/Gather_1"
  input: "highwaynet_2/dense2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/concat"
  op: "ConcatV2"
  input: "highwaynet_2/dense2/Tensordot/Gather_1"
  input: "highwaynet_2/dense2/Tensordot/Gather"
  input: "highwaynet_2/dense2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "highwaynet_2/dense2/Tensordot/ListDiff"
  input: "highwaynet_2/dense2/Tensordot/add_1"
  input: "highwaynet_2/dense2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/stack"
  op: "Pack"
  input: "highwaynet_2/dense2/Tensordot/Prod"
  input: "highwaynet_2/dense2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/transpose"
  op: "Transpose"
  input: "highwaynet_1/add"
  input: "highwaynet_2/dense2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/Reshape"
  op: "Reshape"
  input: "highwaynet_2/dense2/Tensordot/transpose"
  input: "highwaynet_2/dense2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/transpose_1"
  op: "Transpose"
  input: "highwaynet_2/dense2/kernel/read"
  input: "highwaynet_2/dense2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "highwaynet_2/dense2/Tensordot/transpose_1"
  input: "highwaynet_2/dense2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/MatMul"
  op: "MatMul"
  input: "highwaynet_2/dense2/Tensordot/Reshape"
  input: "highwaynet_2/dense2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 150
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "highwaynet_2/dense2/Tensordot/Gather"
  input: "highwaynet_2/dense2/Tensordot/Const_2"
  input: "highwaynet_2/dense2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/Tensordot"
  op: "Reshape"
  input: "highwaynet_2/dense2/Tensordot/MatMul"
  input: "highwaynet_2/dense2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/BiasAdd"
  op: "BiasAdd"
  input: "highwaynet_2/dense2/Tensordot"
  input: "highwaynet_2/dense2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "highwaynet_2/dense2/Sigmoid"
  op: "Sigmoid"
  input: "highwaynet_2/dense2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "highwaynet_2/sub"
  op: "Sub"
  input: "highwaynet_2/sub/x"
  input: "highwaynet_2/dense2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/mul"
  op: "Mul"
  input: "highwaynet_2/dense1/Relu"
  input: "highwaynet_2/dense2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/mul_1"
  op: "Mul"
  input: "highwaynet_1/add"
  input: "highwaynet_2/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/add"
  op: "Add"
  input: "highwaynet_2/mul"
  input: "highwaynet_2/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1414213627576828
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1414213627576828
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "highwaynet_3/dense1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "highwaynet_3/dense1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "highwaynet_3/dense1/kernel/Initializer/random_uniform/max"
  input: "highwaynet_3/dense1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "highwaynet_3/dense1/kernel/Initializer/random_uniform/RandomUniform"
  input: "highwaynet_3/dense1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "highwaynet_3/dense1/kernel/Initializer/random_uniform/mul"
  input: "highwaynet_3/dense1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_3/dense1/kernel/Assign"
  op: "Assign"
  input: "highwaynet_3/dense1/kernel"
  input: "highwaynet_3/dense1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_3/dense1/kernel/read"
  op: "Identity"
  input: "highwaynet_3/dense1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_3/dense1/bias/Assign"
  op: "Assign"
  input: "highwaynet_3/dense1/bias"
  input: "highwaynet_3/dense1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_3/dense1/bias/read"
  op: "Identity"
  input: "highwaynet_3/dense1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/Shape"
  op: "Shape"
  input: "highwaynet_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/axes"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "highwaynet_3/dense1/Tensordot/axes"
  input: "highwaynet_3/dense1/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/Cast"
  op: "Cast"
  input: "highwaynet_3/dense1/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/mul"
  op: "Mul"
  input: "highwaynet_3/dense1/Tensordot/Cast"
  input: "highwaynet_3/dense1/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/Less"
  op: "Less"
  input: "highwaynet_3/dense1/Tensordot/axes"
  input: "highwaynet_3/dense1/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/Cast_1"
  op: "Cast"
  input: "highwaynet_3/dense1/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/add"
  op: "Add"
  input: "highwaynet_3/dense1/Tensordot/axes"
  input: "highwaynet_3/dense1/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/mul_1"
  op: "Mul"
  input: "highwaynet_3/dense1/Tensordot/Cast_1"
  input: "highwaynet_3/dense1/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/add_1"
  op: "Add"
  input: "highwaynet_3/dense1/Tensordot/mul"
  input: "highwaynet_3/dense1/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/range"
  op: "Range"
  input: "highwaynet_3/dense1/Tensordot/range/start"
  input: "highwaynet_3/dense1/Tensordot/Rank"
  input: "highwaynet_3/dense1/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/ListDiff"
  op: "ListDiff"
  input: "highwaynet_3/dense1/Tensordot/range"
  input: "highwaynet_3/dense1/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/Gather"
  op: "Gather"
  input: "highwaynet_3/dense1/Tensordot/Shape"
  input: "highwaynet_3/dense1/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/Gather_1"
  op: "Gather"
  input: "highwaynet_3/dense1/Tensordot/Shape"
  input: "highwaynet_3/dense1/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/Prod"
  op: "Prod"
  input: "highwaynet_3/dense1/Tensordot/Gather"
  input: "highwaynet_3/dense1/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/Prod_1"
  op: "Prod"
  input: "highwaynet_3/dense1/Tensordot/Gather_1"
  input: "highwaynet_3/dense1/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/concat"
  op: "ConcatV2"
  input: "highwaynet_3/dense1/Tensordot/Gather_1"
  input: "highwaynet_3/dense1/Tensordot/Gather"
  input: "highwaynet_3/dense1/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/concat_1"
  op: "ConcatV2"
  input: "highwaynet_3/dense1/Tensordot/ListDiff"
  input: "highwaynet_3/dense1/Tensordot/add_1"
  input: "highwaynet_3/dense1/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/stack"
  op: "Pack"
  input: "highwaynet_3/dense1/Tensordot/Prod"
  input: "highwaynet_3/dense1/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/transpose"
  op: "Transpose"
  input: "highwaynet_2/add"
  input: "highwaynet_3/dense1/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/Reshape"
  op: "Reshape"
  input: "highwaynet_3/dense1/Tensordot/transpose"
  input: "highwaynet_3/dense1/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/transpose_1"
  op: "Transpose"
  input: "highwaynet_3/dense1/kernel/read"
  input: "highwaynet_3/dense1/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/Reshape_1"
  op: "Reshape"
  input: "highwaynet_3/dense1/Tensordot/transpose_1"
  input: "highwaynet_3/dense1/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/MatMul"
  op: "MatMul"
  input: "highwaynet_3/dense1/Tensordot/Reshape"
  input: "highwaynet_3/dense1/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 150
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot/concat_2"
  op: "ConcatV2"
  input: "highwaynet_3/dense1/Tensordot/Gather"
  input: "highwaynet_3/dense1/Tensordot/Const_2"
  input: "highwaynet_3/dense1/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/Tensordot"
  op: "Reshape"
  input: "highwaynet_3/dense1/Tensordot/MatMul"
  input: "highwaynet_3/dense1/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/BiasAdd"
  op: "BiasAdd"
  input: "highwaynet_3/dense1/Tensordot"
  input: "highwaynet_3/dense1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "highwaynet_3/dense1/Relu"
  op: "Relu"
  input: "highwaynet_3/dense1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1414213627576828
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1414213627576828
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "highwaynet_3/dense2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "highwaynet_3/dense2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "highwaynet_3/dense2/kernel/Initializer/random_uniform/max"
  input: "highwaynet_3/dense2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "highwaynet_3/dense2/kernel/Initializer/random_uniform/RandomUniform"
  input: "highwaynet_3/dense2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "highwaynet_3/dense2/kernel/Initializer/random_uniform/mul"
  input: "highwaynet_3/dense2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_3/dense2/kernel/Assign"
  op: "Assign"
  input: "highwaynet_3/dense2/kernel"
  input: "highwaynet_3/dense2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_3/dense2/kernel/read"
  op: "Identity"
  input: "highwaynet_3/dense2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_3/dense2/bias/Assign"
  op: "Assign"
  input: "highwaynet_3/dense2/bias"
  input: "highwaynet_3/dense2/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_3/dense2/bias/read"
  op: "Identity"
  input: "highwaynet_3/dense2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/Shape"
  op: "Shape"
  input: "highwaynet_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/axes"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "highwaynet_3/dense2/Tensordot/axes"
  input: "highwaynet_3/dense2/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/Cast"
  op: "Cast"
  input: "highwaynet_3/dense2/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/mul"
  op: "Mul"
  input: "highwaynet_3/dense2/Tensordot/Cast"
  input: "highwaynet_3/dense2/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/Less"
  op: "Less"
  input: "highwaynet_3/dense2/Tensordot/axes"
  input: "highwaynet_3/dense2/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/Cast_1"
  op: "Cast"
  input: "highwaynet_3/dense2/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/add"
  op: "Add"
  input: "highwaynet_3/dense2/Tensordot/axes"
  input: "highwaynet_3/dense2/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/mul_1"
  op: "Mul"
  input: "highwaynet_3/dense2/Tensordot/Cast_1"
  input: "highwaynet_3/dense2/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/add_1"
  op: "Add"
  input: "highwaynet_3/dense2/Tensordot/mul"
  input: "highwaynet_3/dense2/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/range"
  op: "Range"
  input: "highwaynet_3/dense2/Tensordot/range/start"
  input: "highwaynet_3/dense2/Tensordot/Rank"
  input: "highwaynet_3/dense2/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/ListDiff"
  op: "ListDiff"
  input: "highwaynet_3/dense2/Tensordot/range"
  input: "highwaynet_3/dense2/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/Gather"
  op: "Gather"
  input: "highwaynet_3/dense2/Tensordot/Shape"
  input: "highwaynet_3/dense2/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/Gather_1"
  op: "Gather"
  input: "highwaynet_3/dense2/Tensordot/Shape"
  input: "highwaynet_3/dense2/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/Prod"
  op: "Prod"
  input: "highwaynet_3/dense2/Tensordot/Gather"
  input: "highwaynet_3/dense2/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/Prod_1"
  op: "Prod"
  input: "highwaynet_3/dense2/Tensordot/Gather_1"
  input: "highwaynet_3/dense2/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/concat"
  op: "ConcatV2"
  input: "highwaynet_3/dense2/Tensordot/Gather_1"
  input: "highwaynet_3/dense2/Tensordot/Gather"
  input: "highwaynet_3/dense2/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/concat_1"
  op: "ConcatV2"
  input: "highwaynet_3/dense2/Tensordot/ListDiff"
  input: "highwaynet_3/dense2/Tensordot/add_1"
  input: "highwaynet_3/dense2/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/stack"
  op: "Pack"
  input: "highwaynet_3/dense2/Tensordot/Prod"
  input: "highwaynet_3/dense2/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/transpose"
  op: "Transpose"
  input: "highwaynet_2/add"
  input: "highwaynet_3/dense2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/Reshape"
  op: "Reshape"
  input: "highwaynet_3/dense2/Tensordot/transpose"
  input: "highwaynet_3/dense2/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/transpose_1"
  op: "Transpose"
  input: "highwaynet_3/dense2/kernel/read"
  input: "highwaynet_3/dense2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/Reshape_1"
  op: "Reshape"
  input: "highwaynet_3/dense2/Tensordot/transpose_1"
  input: "highwaynet_3/dense2/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/MatMul"
  op: "MatMul"
  input: "highwaynet_3/dense2/Tensordot/Reshape"
  input: "highwaynet_3/dense2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 150
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot/concat_2"
  op: "ConcatV2"
  input: "highwaynet_3/dense2/Tensordot/Gather"
  input: "highwaynet_3/dense2/Tensordot/Const_2"
  input: "highwaynet_3/dense2/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/Tensordot"
  op: "Reshape"
  input: "highwaynet_3/dense2/Tensordot/MatMul"
  input: "highwaynet_3/dense2/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/BiasAdd"
  op: "BiasAdd"
  input: "highwaynet_3/dense2/Tensordot"
  input: "highwaynet_3/dense2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "highwaynet_3/dense2/Sigmoid"
  op: "Sigmoid"
  input: "highwaynet_3/dense2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "highwaynet_3/sub"
  op: "Sub"
  input: "highwaynet_3/sub/x"
  input: "highwaynet_3/dense2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/mul"
  op: "Mul"
  input: "highwaynet_3/dense1/Relu"
  input: "highwaynet_3/dense2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/mul_1"
  op: "Mul"
  input: "highwaynet_2/add"
  input: "highwaynet_3/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/add"
  op: "Add"
  input: "highwaynet_3/mul"
  input: "highwaynet_3/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/range"
  op: "Range"
  input: "gru1/bidirectional_rnn/fw/range/start"
  input: "gru1/bidirectional_rnn/fw/Rank"
  input: "gru1/bidirectional_rnn/fw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/concat"
  op: "ConcatV2"
  input: "gru1/bidirectional_rnn/fw/concat/values_0"
  input: "gru1/bidirectional_rnn/fw/range"
  input: "gru1/bidirectional_rnn/fw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/transpose"
  op: "Transpose"
  input: "highwaynet_3/add"
  input: "gru1/bidirectional_rnn/fw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/Shape"
  op: "Shape"
  input: "gru1/bidirectional_rnn/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/strided_slice"
  op: "StridedSlice"
  input: "gru1/bidirectional_rnn/fw/fw/Shape"
  input: "gru1/bidirectional_rnn/fw/fw/strided_slice/stack"
  input: "gru1/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  input: "gru1/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/strided_slice_1"
  op: "StridedSlice"
  input: "gru1/bidirectional_rnn/fw/fw/Shape"
  input: "gru1/bidirectional_rnn/fw/fw/strided_slice_1/stack"
  input: "gru1/bidirectional_rnn/fw/fw/strided_slice_1/stack_1"
  input: "gru1/bidirectional_rnn/fw/fw/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/GRUCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/GRUCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "gru1/bidirectional_rnn/fw/fw/strided_slice"
  input: "gru1/bidirectional_rnn/fw/fw/GRUCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 150
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "gru1/bidirectional_rnn/fw/fw/GRUCellZeroState/ExpandDims"
  input: "gru1/bidirectional_rnn/fw/fw/GRUCellZeroState/Const"
  input: "gru1/bidirectional_rnn/fw/fw/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/GRUCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/GRUCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "gru1/bidirectional_rnn/fw/fw/strided_slice"
  input: "gru1/bidirectional_rnn/fw/fw/GRUCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/GRUCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 150
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/GRUCellZeroState/zeros"
  op: "Fill"
  input: "gru1/bidirectional_rnn/fw/fw/GRUCellZeroState/concat"
  input: "gru1/bidirectional_rnn/fw/fw/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/Shape_1"
  op: "Shape"
  input: "gru1/bidirectional_rnn/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/strided_slice_2"
  op: "StridedSlice"
  input: "gru1/bidirectional_rnn/fw/fw/Shape_1"
  input: "gru1/bidirectional_rnn/fw/fw/strided_slice_2/stack"
  input: "gru1/bidirectional_rnn/fw/fw/strided_slice_2/stack_1"
  input: "gru1/bidirectional_rnn/fw/fw/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/strided_slice_3"
  op: "StridedSlice"
  input: "gru1/bidirectional_rnn/fw/fw/Shape_1"
  input: "gru1/bidirectional_rnn/fw/fw/strided_slice_3/stack"
  input: "gru1/bidirectional_rnn/fw/fw/strided_slice_3/stack_1"
  input: "gru1/bidirectional_rnn/fw/fw/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/ExpandDims"
  op: "ExpandDims"
  input: "gru1/bidirectional_rnn/fw/fw/strided_slice_3"
  input: "gru1/bidirectional_rnn/fw/fw/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 150
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/concat"
  op: "ConcatV2"
  input: "gru1/bidirectional_rnn/fw/fw/ExpandDims"
  input: "gru1/bidirectional_rnn/fw/fw/Const"
  input: "gru1/bidirectional_rnn/fw/fw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/zeros"
  op: "Fill"
  input: "gru1/bidirectional_rnn/fw/fw/concat"
  input: "gru1/bidirectional_rnn/fw/fw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/TensorArray"
  op: "TensorArrayV3"
  input: "gru1/bidirectional_rnn/fw/fw/strided_slice_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/TensorArray_1"
  op: "TensorArrayV3"
  input: "gru1/bidirectional_rnn/fw/fw/strided_slice_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "gru1/bidirectional_rnn/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  op: "Range"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArray_1"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  input: "gru1/bidirectional_rnn/fw/transpose"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/fw/fw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/Enter_1"
  op: "Enter"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/Enter_2"
  op: "Enter"
  input: "gru1/bidirectional_rnn/fw/fw/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/Merge"
  op: "Merge"
  input: "gru1/bidirectional_rnn/fw/fw/while/Enter"
  input: "gru1/bidirectional_rnn/fw/fw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/Merge_1"
  op: "Merge"
  input: "gru1/bidirectional_rnn/fw/fw/while/Enter_1"
  input: "gru1/bidirectional_rnn/fw/fw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/Merge_2"
  op: "Merge"
  input: "gru1/bidirectional_rnn/fw/fw/while/Enter_2"
  input: "gru1/bidirectional_rnn/fw/fw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/Less/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/fw/fw/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/Less"
  op: "Less"
  input: "gru1/bidirectional_rnn/fw/fw/while/Merge"
  input: "gru1/bidirectional_rnn/fw/fw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/LoopCond"
  op: "LoopCond"
  input: "gru1/bidirectional_rnn/fw/fw/while/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/Switch"
  op: "Switch"
  input: "gru1/bidirectional_rnn/fw/fw/while/Merge"
  input: "gru1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/Switch_1"
  op: "Switch"
  input: "gru1/bidirectional_rnn/fw/fw/while/Merge_1"
  input: "gru1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/Switch_2"
  op: "Switch"
  input: "gru1/bidirectional_rnn/fw/fw/while/Merge_2"
  input: "gru1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/Identity"
  op: "Identity"
  input: "gru1/bidirectional_rnn/fw/fw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/Identity_1"
  op: "Identity"
  input: "gru1/bidirectional_rnn/fw/fw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/Identity_2"
  op: "Identity"
  input: "gru1/bidirectional_rnn/fw/fw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  input: "gru1/bidirectional_rnn/fw/fw/while/Identity"
  input: "gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: ",\001\000\000,\001\000\000"
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
        dim {
          size: 300
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat/axis"
  op: "Const"
  input: "^gru1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat"
  op: "ConcatV2"
  input: "gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "gru1/bidirectional_rnn/fw/fw/while/Identity_2"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul"
  op: "MatMul"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd"
  op: "BiasAdd"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid"
  op: "Sigmoid"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Const"
  op: "Const"
  input: "^gru1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split/split_dim"
  op: "Const"
  input: "^gru1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
  op: "Split"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split/split_dim"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul"
  op: "Mul"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
  input: "gru1/bidirectional_rnn/fw/fw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: ",\001\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1154700517654419
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1154700517654419
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat/axis"
  op: "Const"
  input: "^gru1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat"
  op: "ConcatV2"
  input: "gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul"
  op: "MatMul"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd"
  op: "BiasAdd"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh"
  op: "Tanh"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul"
  op: "Mul"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split:1"
  input: "gru1/bidirectional_rnn/fw/fw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub/x"
  op: "Const"
  input: "^gru1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub"
  op: "Sub"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub/x"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1"
  op: "Mul"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add"
  op: "Add"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "gru1/bidirectional_rnn/fw/fw/while/Identity"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add"
  input: "gru1/bidirectional_rnn/fw/fw/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/add/y"
  op: "Const"
  input: "^gru1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/add"
  op: "Add"
  input: "gru1/bidirectional_rnn/fw/fw/while/Identity"
  input: "gru1/bidirectional_rnn/fw/fw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/NextIteration"
  op: "NextIteration"
  input: "gru1/bidirectional_rnn/fw/fw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/NextIteration_1"
  op: "NextIteration"
  input: "gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/NextIteration_2"
  op: "NextIteration"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/Exit"
  op: "Exit"
  input: "gru1/bidirectional_rnn/fw/fw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/Exit_1"
  op: "Exit"
  input: "gru1/bidirectional_rnn/fw/fw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/while/Exit_2"
  op: "Exit"
  input: "gru1/bidirectional_rnn/fw/fw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArray"
  input: "gru1/bidirectional_rnn/fw/fw/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  op: "Range"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArray"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "gru1/bidirectional_rnn/fw/fw/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 150
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 150
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/range"
  op: "Range"
  input: "gru1/bidirectional_rnn/fw/fw/range/start"
  input: "gru1/bidirectional_rnn/fw/fw/Rank"
  input: "gru1/bidirectional_rnn/fw/fw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/concat_1"
  op: "ConcatV2"
  input: "gru1/bidirectional_rnn/fw/fw/concat_1/values_0"
  input: "gru1/bidirectional_rnn/fw/fw/range"
  input: "gru1/bidirectional_rnn/fw/fw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/fw/transpose"
  op: "Transpose"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  input: "gru1/bidirectional_rnn/fw/fw/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/ReverseV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/ReverseV2"
  op: "ReverseV2"
  input: "highwaynet_3/add"
  input: "gru1/bidirectional_rnn/bw/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/range"
  op: "Range"
  input: "gru1/bidirectional_rnn/bw/range/start"
  input: "gru1/bidirectional_rnn/bw/Rank"
  input: "gru1/bidirectional_rnn/bw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/concat"
  op: "ConcatV2"
  input: "gru1/bidirectional_rnn/bw/concat/values_0"
  input: "gru1/bidirectional_rnn/bw/range"
  input: "gru1/bidirectional_rnn/bw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/transpose"
  op: "Transpose"
  input: "gru1/bidirectional_rnn/bw/ReverseV2"
  input: "gru1/bidirectional_rnn/bw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/Shape"
  op: "Shape"
  input: "gru1/bidirectional_rnn/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/strided_slice"
  op: "StridedSlice"
  input: "gru1/bidirectional_rnn/bw/bw/Shape"
  input: "gru1/bidirectional_rnn/bw/bw/strided_slice/stack"
  input: "gru1/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  input: "gru1/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/strided_slice_1"
  op: "StridedSlice"
  input: "gru1/bidirectional_rnn/bw/bw/Shape"
  input: "gru1/bidirectional_rnn/bw/bw/strided_slice_1/stack"
  input: "gru1/bidirectional_rnn/bw/bw/strided_slice_1/stack_1"
  input: "gru1/bidirectional_rnn/bw/bw/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/GRUCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/GRUCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "gru1/bidirectional_rnn/bw/bw/strided_slice"
  input: "gru1/bidirectional_rnn/bw/bw/GRUCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 150
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "gru1/bidirectional_rnn/bw/bw/GRUCellZeroState/ExpandDims"
  input: "gru1/bidirectional_rnn/bw/bw/GRUCellZeroState/Const"
  input: "gru1/bidirectional_rnn/bw/bw/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/GRUCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/GRUCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "gru1/bidirectional_rnn/bw/bw/strided_slice"
  input: "gru1/bidirectional_rnn/bw/bw/GRUCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/GRUCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 150
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/GRUCellZeroState/zeros"
  op: "Fill"
  input: "gru1/bidirectional_rnn/bw/bw/GRUCellZeroState/concat"
  input: "gru1/bidirectional_rnn/bw/bw/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/Shape_1"
  op: "Shape"
  input: "gru1/bidirectional_rnn/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/strided_slice_2"
  op: "StridedSlice"
  input: "gru1/bidirectional_rnn/bw/bw/Shape_1"
  input: "gru1/bidirectional_rnn/bw/bw/strided_slice_2/stack"
  input: "gru1/bidirectional_rnn/bw/bw/strided_slice_2/stack_1"
  input: "gru1/bidirectional_rnn/bw/bw/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/strided_slice_3"
  op: "StridedSlice"
  input: "gru1/bidirectional_rnn/bw/bw/Shape_1"
  input: "gru1/bidirectional_rnn/bw/bw/strided_slice_3/stack"
  input: "gru1/bidirectional_rnn/bw/bw/strided_slice_3/stack_1"
  input: "gru1/bidirectional_rnn/bw/bw/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/ExpandDims"
  op: "ExpandDims"
  input: "gru1/bidirectional_rnn/bw/bw/strided_slice_3"
  input: "gru1/bidirectional_rnn/bw/bw/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 150
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/concat"
  op: "ConcatV2"
  input: "gru1/bidirectional_rnn/bw/bw/ExpandDims"
  input: "gru1/bidirectional_rnn/bw/bw/Const"
  input: "gru1/bidirectional_rnn/bw/bw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/zeros"
  op: "Fill"
  input: "gru1/bidirectional_rnn/bw/bw/concat"
  input: "gru1/bidirectional_rnn/bw/bw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/TensorArray"
  op: "TensorArrayV3"
  input: "gru1/bidirectional_rnn/bw/bw/strided_slice_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/TensorArray_1"
  op: "TensorArrayV3"
  input: "gru1/bidirectional_rnn/bw/bw/strided_slice_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "gru1/bidirectional_rnn/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  op: "Range"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArray_1"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "gru1/bidirectional_rnn/bw/transpose"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/bw/bw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/Enter_1"
  op: "Enter"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/Enter_2"
  op: "Enter"
  input: "gru1/bidirectional_rnn/bw/bw/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/Merge"
  op: "Merge"
  input: "gru1/bidirectional_rnn/bw/bw/while/Enter"
  input: "gru1/bidirectional_rnn/bw/bw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/Merge_1"
  op: "Merge"
  input: "gru1/bidirectional_rnn/bw/bw/while/Enter_1"
  input: "gru1/bidirectional_rnn/bw/bw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/Merge_2"
  op: "Merge"
  input: "gru1/bidirectional_rnn/bw/bw/while/Enter_2"
  input: "gru1/bidirectional_rnn/bw/bw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/Less/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/bw/bw/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/Less"
  op: "Less"
  input: "gru1/bidirectional_rnn/bw/bw/while/Merge"
  input: "gru1/bidirectional_rnn/bw/bw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/LoopCond"
  op: "LoopCond"
  input: "gru1/bidirectional_rnn/bw/bw/while/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/Switch"
  op: "Switch"
  input: "gru1/bidirectional_rnn/bw/bw/while/Merge"
  input: "gru1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/Switch_1"
  op: "Switch"
  input: "gru1/bidirectional_rnn/bw/bw/while/Merge_1"
  input: "gru1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/Switch_2"
  op: "Switch"
  input: "gru1/bidirectional_rnn/bw/bw/while/Merge_2"
  input: "gru1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/Identity"
  op: "Identity"
  input: "gru1/bidirectional_rnn/bw/bw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/Identity_1"
  op: "Identity"
  input: "gru1/bidirectional_rnn/bw/bw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/Identity_2"
  op: "Identity"
  input: "gru1/bidirectional_rnn/bw/bw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  input: "gru1/bidirectional_rnn/bw/bw/while/Identity"
  input: "gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: ",\001\000\000,\001\000\000"
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
        dim {
          size: 300
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat/axis"
  op: "Const"
  input: "^gru1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat"
  op: "ConcatV2"
  input: "gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "gru1/bidirectional_rnn/bw/bw/while/Identity_2"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul"
  op: "MatMul"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd"
  op: "BiasAdd"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid"
  op: "Sigmoid"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Const"
  op: "Const"
  input: "^gru1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split/split_dim"
  op: "Const"
  input: "^gru1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
  op: "Split"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split/split_dim"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul"
  op: "Mul"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
  input: "gru1/bidirectional_rnn/bw/bw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: ",\001\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1154700517654419
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1154700517654419
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat/axis"
  op: "Const"
  input: "^gru1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat"
  op: "ConcatV2"
  input: "gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul"
  op: "MatMul"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd"
  op: "BiasAdd"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh"
  op: "Tanh"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul"
  op: "Mul"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split:1"
  input: "gru1/bidirectional_rnn/bw/bw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub/x"
  op: "Const"
  input: "^gru1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub"
  op: "Sub"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub/x"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1"
  op: "Mul"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add"
  op: "Add"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "gru1/bidirectional_rnn/bw/bw/while/Identity"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add"
  input: "gru1/bidirectional_rnn/bw/bw/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/add/y"
  op: "Const"
  input: "^gru1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/add"
  op: "Add"
  input: "gru1/bidirectional_rnn/bw/bw/while/Identity"
  input: "gru1/bidirectional_rnn/bw/bw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/NextIteration"
  op: "NextIteration"
  input: "gru1/bidirectional_rnn/bw/bw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/NextIteration_1"
  op: "NextIteration"
  input: "gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/NextIteration_2"
  op: "NextIteration"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/Exit"
  op: "Exit"
  input: "gru1/bidirectional_rnn/bw/bw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/Exit_1"
  op: "Exit"
  input: "gru1/bidirectional_rnn/bw/bw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/while/Exit_2"
  op: "Exit"
  input: "gru1/bidirectional_rnn/bw/bw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArray"
  input: "gru1/bidirectional_rnn/bw/bw/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  op: "Range"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArray"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "gru1/bidirectional_rnn/bw/bw/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 150
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 150
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/range"
  op: "Range"
  input: "gru1/bidirectional_rnn/bw/bw/range/start"
  input: "gru1/bidirectional_rnn/bw/bw/Rank"
  input: "gru1/bidirectional_rnn/bw/bw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/concat_1"
  op: "ConcatV2"
  input: "gru1/bidirectional_rnn/bw/bw/concat_1/values_0"
  input: "gru1/bidirectional_rnn/bw/bw/range"
  input: "gru1/bidirectional_rnn/bw/bw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/bw/transpose"
  op: "Transpose"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  input: "gru1/bidirectional_rnn/bw/bw/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/ReverseV2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gru1/ReverseV2"
  op: "ReverseV2"
  input: "gru1/bidirectional_rnn/bw/bw/transpose"
  input: "gru1/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gru1/concat"
  op: "ConcatV2"
  input: "gru1/bidirectional_rnn/fw/fw/transpose"
  input: "gru1/ReverseV2"
  input: "gru1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: ",\001\000\000I\000\000\000"
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.12682977318763733
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.12682977318763733
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense/kernel/Initializer/random_uniform/max"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense/kernel/Initializer/random_uniform/mul"
  input: "dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
        dim {
          size: 73
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/kernel/Assign"
  op: "Assign"
  input: "dense/kernel"
  input: "dense/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/kernel/read"
  op: "Identity"
  input: "dense/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/Shape"
  op: "Shape"
  input: "gru1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/Tensordot/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "dense/Tensordot/axes"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "dense/Tensordot/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "dense/Tensordot/axes"
  input: "dense/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/Cast"
  op: "Cast"
  input: "dense/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/mul"
  op: "Mul"
  input: "dense/Tensordot/Cast"
  input: "dense/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/Less"
  op: "Less"
  input: "dense/Tensordot/axes"
  input: "dense/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/Cast_1"
  op: "Cast"
  input: "dense/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/add"
  op: "Add"
  input: "dense/Tensordot/axes"
  input: "dense/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/mul_1"
  op: "Mul"
  input: "dense/Tensordot/Cast_1"
  input: "dense/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/add_1"
  op: "Add"
  input: "dense/Tensordot/mul"
  input: "dense/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "dense/Tensordot/range"
  op: "Range"
  input: "dense/Tensordot/range/start"
  input: "dense/Tensordot/Rank"
  input: "dense/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/ListDiff"
  op: "ListDiff"
  input: "dense/Tensordot/range"
  input: "dense/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dense/Tensordot/Gather"
  op: "Gather"
  input: "dense/Tensordot/Shape"
  input: "dense/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dense/Tensordot/Gather_1"
  op: "Gather"
  input: "dense/Tensordot/Shape"
  input: "dense/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "dense/Tensordot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/Prod"
  op: "Prod"
  input: "dense/Tensordot/Gather"
  input: "dense/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dense/Tensordot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/Prod_1"
  op: "Prod"
  input: "dense/Tensordot/Gather_1"
  input: "dense/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dense/Tensordot/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/concat"
  op: "ConcatV2"
  input: "dense/Tensordot/Gather_1"
  input: "dense/Tensordot/Gather"
  input: "dense/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/concat_1"
  op: "ConcatV2"
  input: "dense/Tensordot/ListDiff"
  input: "dense/Tensordot/add_1"
  input: "dense/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/stack"
  op: "Pack"
  input: "dense/Tensordot/Prod"
  input: "dense/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "dense/Tensordot/transpose"
  op: "Transpose"
  input: "gru1/concat"
  input: "dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/Reshape"
  op: "Reshape"
  input: "dense/Tensordot/transpose"
  input: "dense/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "dense/Tensordot/transpose_1"
  op: "Transpose"
  input: "dense/kernel/read"
  input: "dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: ",\001\000\000I\000\000\000"
      }
    }
  }
}
node {
  name: "dense/Tensordot/Reshape_1"
  op: "Reshape"
  input: "dense/Tensordot/transpose_1"
  input: "dense/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot/MatMul"
  op: "MatMul"
  input: "dense/Tensordot/Reshape"
  input: "dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense/Tensordot/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 73
      }
    }
  }
}
node {
  name: "dense/Tensordot/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "dense/Tensordot/concat_2"
  op: "ConcatV2"
  input: "dense/Tensordot/Gather"
  input: "dense/Tensordot/Const_2"
  input: "dense/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "dense/Tensordot"
  op: "Reshape"
  input: "dense/Tensordot/MatMul"
  input: "dense/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "dense/Tensordot"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ToInt32"
  op: "Cast"
  input: "ArgMax"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/Shape"
  op: "Shape"
  input: "batch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/Shape_1"
  op: "Shape"
  input: "dense/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/sub"
  op: "Sub"
  input: "SparseSoftmaxCrossEntropyWithLogits/Rank"
  input: "SparseSoftmaxCrossEntropyWithLogits/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/add"
  op: "Add"
  input: "SparseSoftmaxCrossEntropyWithLogits/sub"
  input: "SparseSoftmaxCrossEntropyWithLogits/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack"
  op: "Pack"
  input: "SparseSoftmaxCrossEntropyWithLogits/sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_1"
  op: "Pack"
  input: "SparseSoftmaxCrossEntropyWithLogits/add"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_2"
  op: "Pack"
  input: "SparseSoftmaxCrossEntropyWithLogits/Const"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/strided_slice"
  op: "StridedSlice"
  input: "SparseSoftmaxCrossEntropyWithLogits/Shape_1"
  input: "SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack"
  input: "SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_1"
  input: "SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/Reshape/shape/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/Reshape/shape"
  op: "Pack"
  input: "SparseSoftmaxCrossEntropyWithLogits/Reshape/shape/0"
  input: "SparseSoftmaxCrossEntropyWithLogits/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/Reshape"
  op: "Reshape"
  input: "dense/Tensordot"
  input: "SparseSoftmaxCrossEntropyWithLogits/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/Reshape_1"
  op: "Reshape"
  input: "batch:1"
  input: "SparseSoftmaxCrossEntropyWithLogits/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "SparseSoftmaxCrossEntropyWithLogits/Reshape"
  input: "SparseSoftmaxCrossEntropyWithLogits/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  op: "Reshape"
  input: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "SparseSoftmaxCrossEntropyWithLogits/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_like"
  op: "ZerosLike"
  input: "batch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "NotEqual"
  op: "NotEqual"
  input: "batch:1"
  input: "zeros_like"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ToFloat"
  op: "Cast"
  input: "NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Equal"
  op: "Equal"
  input: "ToInt32"
  input: "batch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "ToFloat_1"
  op: "Cast"
  input: "Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "ToFloat_1"
  input: "ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "mul"
  input: "Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Sum_1"
  op: "Sum"
  input: "ToFloat"
  input: "Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "truediv"
  op: "RealDiv"
  input: "Sum"
  input: "Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  input: "ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Sum_2"
  op: "Sum"
  input: "mul_1"
  input: "Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Sum_3"
  op: "Sum"
  input: "ToFloat"
  input: "Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "truediv_1"
  op: "RealDiv"
  input: "Sum_2"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_1"
  op: "Enter"
  input: "gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge"
  op: "Merge"
  input: "gradients/f_count_1"
  input: "gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch"
  op: "Switch"
  input: "gradients/Merge"
  input: "gru1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add/y"
  op: "Const"
  input: "^gru1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add"
  op: "Add"
  input: "gradients/Switch:1"
  input: "gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration"
  op: "NextIteration"
  input: "gradients/Add"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/ShapeN/StackPush"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_2"
  op: "Exit"
  input: "gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_1"
  op: "Enter"
  input: "gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_1"
  op: "Merge"
  input: "gradients/b_count_1"
  input: "gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/Merge_1"
  input: "gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_2"
  op: "LoopCond"
  input: "gradients/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_1"
  op: "Switch"
  input: "gradients/Merge_1"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub"
  op: "Sub"
  input: "gradients/Switch_1:1"
  input: "gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_1"
  op: "NextIteration"
  input: "gradients/Sub"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_3"
  op: "Exit"
  input: "gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_4"
  op: "Enter"
  input: "gradients/f_count_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_2"
  op: "Merge"
  input: "gradients/f_count_4"
  input: "gradients/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_2"
  op: "Switch"
  input: "gradients/Merge_2"
  input: "gru1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add_1/y"
  op: "Const"
  input: "^gru1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add_1"
  op: "Add"
  input: "gradients/Switch_2:1"
  input: "gradients/Add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_2"
  op: "NextIteration"
  input: "gradients/Add_1"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/StackPush"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/ShapeN/StackPush"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_5"
  op: "Exit"
  input: "gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_5"
  op: "Enter"
  input: "gradients/f_count_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_3"
  op: "Merge"
  input: "gradients/b_count_5"
  input: "gradients/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_1/Enter"
  op: "Enter"
  input: "gradients/b_count_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/GreaterEqual_1"
  op: "GreaterEqual"
  input: "gradients/Merge_3"
  input: "gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_6"
  op: "LoopCond"
  input: "gradients/GreaterEqual_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_3"
  op: "Switch"
  input: "gradients/Merge_3"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub_1"
  op: "Sub"
  input: "gradients/Switch_3:1"
  input: "gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_3"
  op: "NextIteration"
  input: "gradients/Sub_1"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_7"
  op: "Exit"
  input: "gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/truediv_1_grad/Shape"
  input: "gradients/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/Fill"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/Sum"
  op: "Sum"
  input: "gradients/truediv_1_grad/RealDiv"
  input: "gradients/truediv_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_1_grad/Sum"
  input: "gradients/truediv_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/Neg"
  op: "Neg"
  input: "Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/truediv_1_grad/Neg"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/truediv_1_grad/RealDiv_1"
  input: "Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/mul"
  op: "Mul"
  input: "gradients/Fill"
  input: "gradients/truediv_1_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/truediv_1_grad/mul"
  input: "gradients/truediv_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/truediv_1_grad/Sum_1"
  input: "gradients/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/truediv_1_grad/Reshape"
  input: "^gradients/truediv_1_grad/Reshape_1"
}
node {
  name: "gradients/truediv_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/truediv_1_grad/Reshape"
  input: "^gradients/truediv_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/truediv_1_grad/Reshape_1"
  input: "^gradients/truediv_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/Sum_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_1_grad/tuple/control_dependency"
  input: "gradients/Sum_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Sum_2_grad/Shape"
  op: "Shape"
  input: "mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Sum_2_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_2_grad/Reshape"
  input: "gradients/Sum_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/Shape"
  op: "Shape"
  input: "SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_1_grad/Shape_1"
  op: "Shape"
  input: "ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/mul_1_grad/Shape"
  input: "gradients/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/Sum_2_grad/Tile"
  input: "ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/mul_1_grad/mul"
  input: "gradients/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_1_grad/Sum"
  input: "gradients/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/mul_1"
  op: "Mul"
  input: "SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  input: "gradients/Sum_2_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/mul_1_grad/mul_1"
  input: "gradients/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/mul_1_grad/Sum_1"
  input: "gradients/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_1_grad/Reshape"
  input: "^gradients/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_1_grad/Reshape"
  input: "^gradients/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_1_grad/Reshape_1"
  input: "^gradients/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Shape"
  op: "Shape"
  input: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/mul_1_grad/tuple/control_dependency"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  op: "PreventGradient"
  input: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Reshape"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Shape"
  op: "Shape"
  input: "dense/Tensordot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/Tensordot_grad/Shape"
  op: "Shape"
  input: "dense/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dense/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Reshape"
  input: "gradients/dense/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/dense/Tensordot_grad/Reshape"
  input: "dense/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/dense/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dense/Tensordot/Reshape"
  input: "gradients/dense/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dense/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dense/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/dense/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/dense/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dense/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/dense/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dense/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/dense/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dense/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "dense/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dense/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/dense/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/dense/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: ",\001\000\000I\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/dense/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/dense/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/dense/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "dense/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/dense/Tensordot/Reshape_grad/Reshape"
  input: "gradients/dense/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "dense/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/dense/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/dense/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/dense/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/gru1/concat_grad/mod"
  op: "FloorMod"
  input: "gru1/concat/axis"
  input: "gradients/gru1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/concat_grad/Shape"
  op: "Shape"
  input: "gru1/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru1/concat_grad/ShapeN"
  op: "ShapeN"
  input: "gru1/bidirectional_rnn/fw/fw/transpose"
  input: "gru1/ReverseV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru1/concat_grad/mod"
  input: "gradients/gru1/concat_grad/ShapeN"
  input: "gradients/gru1/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/concat_grad/Slice"
  op: "Slice"
  input: "gradients/dense/Tensordot/transpose_grad/transpose"
  input: "gradients/gru1/concat_grad/ConcatOffset"
  input: "gradients/gru1/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/dense/Tensordot/transpose_grad/transpose"
  input: "gradients/gru1/concat_grad/ConcatOffset:1"
  input: "gradients/gru1/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/concat_grad/Slice"
  input: "^gradients/gru1/concat_grad/Slice_1"
}
node {
  name: "gradients/gru1/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/concat_grad/Slice"
  input: "^gradients/gru1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/concat_grad/Slice_1"
  input: "^gradients/gru1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gru1/bidirectional_rnn/fw/fw/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/gru1/concat_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/ReverseV2_grad/ReverseV2"
  op: "ReverseV2"
  input: "gradients/gru1/concat_grad/tuple/control_dependency_1"
  input: "gru1/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArray"
  input: "gru1/bidirectional_rnn/fw/fw/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gru1/bidirectional_rnn/fw/fw/while/Exit_1"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/transpose_grad/transpose"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gru1/bidirectional_rnn/bw/bw/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/gru1/ReverseV2_grad/ReverseV2"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArray"
  input: "gru1/bidirectional_rnn/bw/bw/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gru1/bidirectional_rnn/bw/bw/while/Exit_1"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_1"
  op: "ZerosLike"
  input: "gru1/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/zeros_like_2"
  op: "ZerosLike"
  input: "gru1/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/Exit_1_grad/b_exit"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/Switch_1_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/Exit_2_grad/b_exit"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/Switch_1_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_1_grad/Switch"
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_1_grad/Switch"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_1_grad/Switch:1"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch:1"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/Exit_1_grad/b_exit"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/Switch_1_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/Switch_1_grad/b_switch"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_1_grad/Switch"
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_1_grad/Switch"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_1_grad/Switch:1"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch:1"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  input: "gru1/bidirectional_rnn/fw/fw/while/Identity"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/ShapeN/StackPop"
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/GRUCellZeroState/zeros_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/GRUCellZeroState/zeros_grad/Sum"
  op: "Sum"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/Enter_2_grad/Exit"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/GRUCellZeroState/zeros_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Shape"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Sum"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Sum_1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Reshape"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Reshape_1"
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Reshape"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Reshape_1"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  input: "gru1/bidirectional_rnn/bw/bw/while/Identity"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/ShapeN/StackPop"
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/GRUCellZeroState/zeros_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/GRUCellZeroState/zeros_grad/Sum"
  op: "Sum"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/Enter_2_grad/Exit"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/GRUCellZeroState/zeros_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "gru1/bidirectional_rnn/fw/fw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Shape"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/RefEnter"
  input: "gru1/bidirectional_rnn/fw/fw/while/Identity_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul"
  op: "Mul"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Sum"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/RefEnter"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split:1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1"
  op: "Mul"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Sum_1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Reshape"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Reshape"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Reshape_1"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Shape"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/RefEnter"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/tuple/control_dependency_1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Sum"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/RefEnter"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Sum_1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Reshape"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Reshape"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Reshape_1"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Shape"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Sum"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Sum_1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Reshape"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Reshape_1"
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Reshape"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Reshape_1"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Shape"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Sum"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Neg"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Reshape"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Reshape"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Reshape_1"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "gru1/bidirectional_rnn/bw/bw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Shape"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/RefEnter"
  input: "gru1/bidirectional_rnn/bw/bw/while/Identity_2"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul"
  op: "Mul"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Sum"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/RefEnter"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split:1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1"
  op: "Mul"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Sum_1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Reshape"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Reshape"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Reshape_1"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Shape"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/RefEnter"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/tuple/control_dependency_1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Sum"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/RefEnter"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Sum_1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Reshape"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Reshape"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Reshape_1"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Shape"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Sum"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Neg"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Reshape"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Reshape"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Reshape_1"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch:1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat/axis"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Shape"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Slice"
  op: "Slice"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/ConcatOffset:1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Slice_1"
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Slice_1"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch:1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch:1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Shape_1"
  op: "Shape"
  input: "gru1/bidirectional_rnn/fw/fw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Shape"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul"
  op: "Mul"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Sum"
  op: "Sum"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Sum"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1"
  op: "Mul"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Sum_1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Reshape"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Reshape_1"
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Reshape"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Reshape_1"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat/axis"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Shape"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Slice"
  op: "Slice"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/ConcatOffset:1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Slice_1"
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Slice_1"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch:1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/RefEnter"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split/split_dim"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/tuple/control_dependency"
  input: "gradients/AddN_2"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Shape_1"
  op: "Shape"
  input: "gru1/bidirectional_rnn/bw/bw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Shape"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul"
  op: "Mul"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Sum"
  op: "Sum"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Sum"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1"
  op: "Mul"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Sum_1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Reshape"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Reshape_1"
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Reshape"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Reshape_1"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/RefEnter"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/RefEnter"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split/split_dim"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/tuple/control_dependency"
  input: "gradients/AddN_3"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/RefEnter"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch:1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Rank"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  input: "gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat/axis"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod"
  op: "FloorMod"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Shape_1"
  op: "Shape"
  input: "gru1/bidirectional_rnn/fw/fw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/ShapeN/RefEnter"
  input: "gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/ShapeN/StackPop"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/ShapeN"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Slice"
  op: "Slice"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/ConcatOffset"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/ConcatOffset:1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Slice"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Slice_1"
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Slice"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Slice_1"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/Switch:1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch:1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "gradients/AddN_4"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Rank"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  input: "gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat/axis"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod"
  op: "FloorMod"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Shape_1"
  op: "Shape"
  input: "gru1/bidirectional_rnn/bw/bw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/ShapeN/RefEnter"
  input: "gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/ShapeN"
  op: "ShapeN"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/ShapeN/StackPop"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/ShapeN"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Slice"
  op: "Slice"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/ConcatOffset"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/ConcatOffset:1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Slice"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Slice_1"
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Slice"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Slice_1"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  op: "Add"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/Switch:1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/fw/fw/while/gru1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "gradients/AddN_6"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArray_1"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/gru1/bidirectional_rnn/bw/bw/while/gru1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArray_1"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gru1/bidirectional_rnn/fw/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/fw/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/fw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gru1/bidirectional_rnn/bw/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "gradients/gru1/bidirectional_rnn/bw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/gru1/bidirectional_rnn/bw/ReverseV2_grad/ReverseV2"
  op: "ReverseV2"
  input: "gradients/gru1/bidirectional_rnn/bw/transpose_grad/transpose"
  input: "gru1/bidirectional_rnn/bw/ReverseV2/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/gru1/bidirectional_rnn/fw/transpose_grad/transpose"
  input: "gradients/gru1/bidirectional_rnn/bw/ReverseV2_grad/ReverseV2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/gru1/bidirectional_rnn/fw/transpose_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/add_grad/Shape"
  op: "Shape"
  input: "highwaynet_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_3/add_grad/Shape_1"
  op: "Shape"
  input: "highwaynet_3/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_3/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/highwaynet_3/add_grad/Shape"
  input: "gradients/highwaynet_3/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_8"
  input: "gradients/highwaynet_3/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_3/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_3/add_grad/Sum"
  input: "gradients/highwaynet_3/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_8"
  input: "gradients/highwaynet_3/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_3/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/highwaynet_3/add_grad/Sum_1"
  input: "gradients/highwaynet_3/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_3/add_grad/Reshape"
  input: "^gradients/highwaynet_3/add_grad/Reshape_1"
}
node {
  name: "gradients/highwaynet_3/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_3/add_grad/Reshape"
  input: "^gradients/highwaynet_3/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_3/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_3/add_grad/Reshape_1"
  input: "^gradients/highwaynet_3/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_3/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/mul_grad/Shape"
  op: "Shape"
  input: "highwaynet_3/dense1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_3/mul_grad/Shape_1"
  op: "Shape"
  input: "highwaynet_3/dense2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_3/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/highwaynet_3/mul_grad/Shape"
  input: "gradients/highwaynet_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/mul_grad/mul"
  op: "Mul"
  input: "gradients/highwaynet_3/add_grad/tuple/control_dependency"
  input: "highwaynet_3/dense2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/mul_grad/Sum"
  op: "Sum"
  input: "gradients/highwaynet_3/mul_grad/mul"
  input: "gradients/highwaynet_3/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_3/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_3/mul_grad/Sum"
  input: "gradients/highwaynet_3/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/mul_grad/mul_1"
  op: "Mul"
  input: "highwaynet_3/dense1/Relu"
  input: "gradients/highwaynet_3/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/highwaynet_3/mul_grad/mul_1"
  input: "gradients/highwaynet_3/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_3/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/highwaynet_3/mul_grad/Sum_1"
  input: "gradients/highwaynet_3/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_3/mul_grad/Reshape"
  input: "^gradients/highwaynet_3/mul_grad/Reshape_1"
}
node {
  name: "gradients/highwaynet_3/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_3/mul_grad/Reshape"
  input: "^gradients/highwaynet_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_3/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_3/mul_grad/Reshape_1"
  input: "^gradients/highwaynet_3/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_3/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/mul_1_grad/Shape"
  op: "Shape"
  input: "highwaynet_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_3/mul_1_grad/Shape_1"
  op: "Shape"
  input: "highwaynet_3/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_3/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/highwaynet_3/mul_1_grad/Shape"
  input: "gradients/highwaynet_3/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/highwaynet_3/add_grad/tuple/control_dependency_1"
  input: "highwaynet_3/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/highwaynet_3/mul_1_grad/mul"
  input: "gradients/highwaynet_3/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_3/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_3/mul_1_grad/Sum"
  input: "gradients/highwaynet_3/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/mul_1_grad/mul_1"
  op: "Mul"
  input: "highwaynet_2/add"
  input: "gradients/highwaynet_3/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/highwaynet_3/mul_1_grad/mul_1"
  input: "gradients/highwaynet_3/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_3/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/highwaynet_3/mul_1_grad/Sum_1"
  input: "gradients/highwaynet_3/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_3/mul_1_grad/Reshape"
  input: "^gradients/highwaynet_3/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/highwaynet_3/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_3/mul_1_grad/Reshape"
  input: "^gradients/highwaynet_3/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_3/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_3/mul_1_grad/Reshape_1"
  input: "^gradients/highwaynet_3/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_3/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/highwaynet_3/mul_grad/tuple/control_dependency"
  input: "highwaynet_3/dense1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/sub_grad/Shape_1"
  op: "Shape"
  input: "highwaynet_3/dense2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_3/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/highwaynet_3/sub_grad/Shape"
  input: "gradients/highwaynet_3/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/sub_grad/Sum"
  op: "Sum"
  input: "gradients/highwaynet_3/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/highwaynet_3/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_3/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_3/sub_grad/Sum"
  input: "gradients/highwaynet_3/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/highwaynet_3/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/highwaynet_3/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_3/sub_grad/Neg"
  op: "Neg"
  input: "gradients/highwaynet_3/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/highwaynet_3/sub_grad/Neg"
  input: "gradients/highwaynet_3/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_3/sub_grad/Reshape"
  input: "^gradients/highwaynet_3/sub_grad/Reshape_1"
}
node {
  name: "gradients/highwaynet_3/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_3/sub_grad/Reshape"
  input: "^gradients/highwaynet_3/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_3/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_3/sub_grad/Reshape_1"
  input: "^gradients/highwaynet_3/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_3/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/highwaynet_3/dense1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_3/dense1/Relu_grad/ReluGrad"
  input: "^gradients/highwaynet_3/dense1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/highwaynet_3/dense1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_3/dense1/Relu_grad/ReluGrad"
  input: "^gradients/highwaynet_3/dense1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_3/dense1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_3/dense1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/highwaynet_3/dense1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_3/dense1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/highwaynet_3/mul_grad/tuple/control_dependency_1"
  input: "gradients/highwaynet_3/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_3/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense2/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "highwaynet_3/dense2/Sigmoid"
  input: "gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense1/Tensordot_grad/Shape"
  op: "Shape"
  input: "highwaynet_3/dense1/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense1/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_3/dense1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/highwaynet_3/dense1/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/highwaynet_3/dense2/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_3/dense2/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/highwaynet_3/dense2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/highwaynet_3/dense2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_3/dense2/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/highwaynet_3/dense2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_3/dense2/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_3/dense2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/highwaynet_3/dense2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_3/dense2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense1/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/highwaynet_3/dense1/Tensordot_grad/Reshape"
  input: "highwaynet_3/dense1/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense1/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "highwaynet_3/dense1/Tensordot/Reshape"
  input: "gradients/highwaynet_3/dense1/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense1/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_3/dense1/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/highwaynet_3/dense1/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/highwaynet_3/dense1/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_3/dense1/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/highwaynet_3/dense1/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_3/dense1/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense1/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_3/dense1/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/highwaynet_3/dense1/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_3/dense1/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense2/Tensordot_grad/Shape"
  op: "Shape"
  input: "highwaynet_3/dense2/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense2/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_3/dense2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/highwaynet_3/dense2/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense1/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "highwaynet_3/dense1/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense1/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_3/dense1/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/highwaynet_3/dense1/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense1/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense1/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_3/dense1/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/highwaynet_3/dense1/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense2/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/highwaynet_3/dense2/Tensordot_grad/Reshape"
  input: "highwaynet_3/dense2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense2/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "highwaynet_3/dense2/Tensordot/Reshape"
  input: "gradients/highwaynet_3/dense2/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense2/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_3/dense2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/highwaynet_3/dense2/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/highwaynet_3/dense2/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_3/dense2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/highwaynet_3/dense2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_3/dense2/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_3/dense2/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/highwaynet_3/dense2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_3/dense2/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense1/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "highwaynet_3/dense1/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense1/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/highwaynet_3/dense1/Tensordot/Reshape_grad/Reshape"
  input: "gradients/highwaynet_3/dense1/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense1/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "highwaynet_3/dense1/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense1/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/highwaynet_3/dense1/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/highwaynet_3/dense1/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense2/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "highwaynet_3/dense2/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense2/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_3/dense2/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/highwaynet_3/dense2/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense2/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense2/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_3/dense2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/highwaynet_3/dense2/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense2/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "highwaynet_3/dense2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense2/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/highwaynet_3/dense2/Tensordot/Reshape_grad/Reshape"
  input: "gradients/highwaynet_3/dense2/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense2/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "highwaynet_3/dense2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_3/dense2/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/highwaynet_3/dense2/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/highwaynet_3/dense2/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/highwaynet_3/mul_1_grad/tuple/control_dependency"
  input: "gradients/highwaynet_3/dense1/Tensordot/transpose_grad/transpose"
  input: "gradients/highwaynet_3/dense2/Tensordot/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_3/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/add_grad/Shape"
  op: "Shape"
  input: "highwaynet_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_2/add_grad/Shape_1"
  op: "Shape"
  input: "highwaynet_2/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/highwaynet_2/add_grad/Shape"
  input: "gradients/highwaynet_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_10"
  input: "gradients/highwaynet_2/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_2/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_2/add_grad/Sum"
  input: "gradients/highwaynet_2/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_10"
  input: "gradients/highwaynet_2/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_2/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/highwaynet_2/add_grad/Sum_1"
  input: "gradients/highwaynet_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_2/add_grad/Reshape"
  input: "^gradients/highwaynet_2/add_grad/Reshape_1"
}
node {
  name: "gradients/highwaynet_2/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_2/add_grad/Reshape"
  input: "^gradients/highwaynet_2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_2/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_2/add_grad/Reshape_1"
  input: "^gradients/highwaynet_2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_2/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/mul_grad/Shape"
  op: "Shape"
  input: "highwaynet_2/dense1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_2/mul_grad/Shape_1"
  op: "Shape"
  input: "highwaynet_2/dense2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_2/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/highwaynet_2/mul_grad/Shape"
  input: "gradients/highwaynet_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/mul_grad/mul"
  op: "Mul"
  input: "gradients/highwaynet_2/add_grad/tuple/control_dependency"
  input: "highwaynet_2/dense2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/mul_grad/Sum"
  op: "Sum"
  input: "gradients/highwaynet_2/mul_grad/mul"
  input: "gradients/highwaynet_2/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_2/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_2/mul_grad/Sum"
  input: "gradients/highwaynet_2/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/mul_grad/mul_1"
  op: "Mul"
  input: "highwaynet_2/dense1/Relu"
  input: "gradients/highwaynet_2/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/highwaynet_2/mul_grad/mul_1"
  input: "gradients/highwaynet_2/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_2/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/highwaynet_2/mul_grad/Sum_1"
  input: "gradients/highwaynet_2/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_2/mul_grad/Reshape"
  input: "^gradients/highwaynet_2/mul_grad/Reshape_1"
}
node {
  name: "gradients/highwaynet_2/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_2/mul_grad/Reshape"
  input: "^gradients/highwaynet_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_2/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_2/mul_grad/Reshape_1"
  input: "^gradients/highwaynet_2/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_2/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/mul_1_grad/Shape"
  op: "Shape"
  input: "highwaynet_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_2/mul_1_grad/Shape_1"
  op: "Shape"
  input: "highwaynet_2/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_2/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/highwaynet_2/mul_1_grad/Shape"
  input: "gradients/highwaynet_2/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/highwaynet_2/add_grad/tuple/control_dependency_1"
  input: "highwaynet_2/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/highwaynet_2/mul_1_grad/mul"
  input: "gradients/highwaynet_2/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_2/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_2/mul_1_grad/Sum"
  input: "gradients/highwaynet_2/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/mul_1_grad/mul_1"
  op: "Mul"
  input: "highwaynet_1/add"
  input: "gradients/highwaynet_2/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/highwaynet_2/mul_1_grad/mul_1"
  input: "gradients/highwaynet_2/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_2/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/highwaynet_2/mul_1_grad/Sum_1"
  input: "gradients/highwaynet_2/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_2/mul_1_grad/Reshape"
  input: "^gradients/highwaynet_2/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/highwaynet_2/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_2/mul_1_grad/Reshape"
  input: "^gradients/highwaynet_2/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_2/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_2/mul_1_grad/Reshape_1"
  input: "^gradients/highwaynet_2/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_2/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/highwaynet_2/mul_grad/tuple/control_dependency"
  input: "highwaynet_2/dense1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/sub_grad/Shape_1"
  op: "Shape"
  input: "highwaynet_2/dense2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_2/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/highwaynet_2/sub_grad/Shape"
  input: "gradients/highwaynet_2/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/sub_grad/Sum"
  op: "Sum"
  input: "gradients/highwaynet_2/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/highwaynet_2/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_2/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_2/sub_grad/Sum"
  input: "gradients/highwaynet_2/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/highwaynet_2/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/highwaynet_2/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_2/sub_grad/Neg"
  op: "Neg"
  input: "gradients/highwaynet_2/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/highwaynet_2/sub_grad/Neg"
  input: "gradients/highwaynet_2/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_2/sub_grad/Reshape"
  input: "^gradients/highwaynet_2/sub_grad/Reshape_1"
}
node {
  name: "gradients/highwaynet_2/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_2/sub_grad/Reshape"
  input: "^gradients/highwaynet_2/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_2/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_2/sub_grad/Reshape_1"
  input: "^gradients/highwaynet_2/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_2/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/highwaynet_2/dense1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_2/dense1/Relu_grad/ReluGrad"
  input: "^gradients/highwaynet_2/dense1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/highwaynet_2/dense1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_2/dense1/Relu_grad/ReluGrad"
  input: "^gradients/highwaynet_2/dense1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_2/dense1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_2/dense1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/highwaynet_2/dense1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_2/dense1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/highwaynet_2/mul_grad/tuple/control_dependency_1"
  input: "gradients/highwaynet_2/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_2/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense2/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "highwaynet_2/dense2/Sigmoid"
  input: "gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense1/Tensordot_grad/Shape"
  op: "Shape"
  input: "highwaynet_2/dense1/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense1/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_2/dense1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/highwaynet_2/dense1/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/highwaynet_2/dense2/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_2/dense2/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/highwaynet_2/dense2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/highwaynet_2/dense2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_2/dense2/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/highwaynet_2/dense2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_2/dense2/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_2/dense2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/highwaynet_2/dense2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_2/dense2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense1/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/highwaynet_2/dense1/Tensordot_grad/Reshape"
  input: "highwaynet_2/dense1/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense1/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "highwaynet_2/dense1/Tensordot/Reshape"
  input: "gradients/highwaynet_2/dense1/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense1/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_2/dense1/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/highwaynet_2/dense1/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/highwaynet_2/dense1/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_2/dense1/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/highwaynet_2/dense1/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_2/dense1/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense1/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_2/dense1/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/highwaynet_2/dense1/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_2/dense1/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense2/Tensordot_grad/Shape"
  op: "Shape"
  input: "highwaynet_2/dense2/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense2/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_2/dense2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/highwaynet_2/dense2/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense1/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "highwaynet_2/dense1/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense1/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_2/dense1/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/highwaynet_2/dense1/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense1/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense1/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_2/dense1/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/highwaynet_2/dense1/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense2/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/highwaynet_2/dense2/Tensordot_grad/Reshape"
  input: "highwaynet_2/dense2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense2/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "highwaynet_2/dense2/Tensordot/Reshape"
  input: "gradients/highwaynet_2/dense2/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense2/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_2/dense2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/highwaynet_2/dense2/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/highwaynet_2/dense2/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_2/dense2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/highwaynet_2/dense2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_2/dense2/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_2/dense2/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/highwaynet_2/dense2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_2/dense2/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense1/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "highwaynet_2/dense1/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense1/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/highwaynet_2/dense1/Tensordot/Reshape_grad/Reshape"
  input: "gradients/highwaynet_2/dense1/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense1/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "highwaynet_2/dense1/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense1/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/highwaynet_2/dense1/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/highwaynet_2/dense1/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense2/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "highwaynet_2/dense2/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense2/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_2/dense2/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/highwaynet_2/dense2/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense2/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense2/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_2/dense2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/highwaynet_2/dense2/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense2/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "highwaynet_2/dense2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense2/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/highwaynet_2/dense2/Tensordot/Reshape_grad/Reshape"
  input: "gradients/highwaynet_2/dense2/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense2/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "highwaynet_2/dense2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_2/dense2/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/highwaynet_2/dense2/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/highwaynet_2/dense2/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/highwaynet_2/mul_1_grad/tuple/control_dependency"
  input: "gradients/highwaynet_2/dense1/Tensordot/transpose_grad/transpose"
  input: "gradients/highwaynet_2/dense2/Tensordot/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_2/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/add_grad/Shape"
  op: "Shape"
  input: "highwaynet_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_1/add_grad/Shape_1"
  op: "Shape"
  input: "highwaynet_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/highwaynet_1/add_grad/Shape"
  input: "gradients/highwaynet_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_12"
  input: "gradients/highwaynet_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_1/add_grad/Sum"
  input: "gradients/highwaynet_1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_12"
  input: "gradients/highwaynet_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/highwaynet_1/add_grad/Sum_1"
  input: "gradients/highwaynet_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_1/add_grad/Reshape"
  input: "^gradients/highwaynet_1/add_grad/Reshape_1"
}
node {
  name: "gradients/highwaynet_1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_1/add_grad/Reshape"
  input: "^gradients/highwaynet_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_1/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_1/add_grad/Reshape_1"
  input: "^gradients/highwaynet_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_1/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/mul_grad/Shape"
  op: "Shape"
  input: "highwaynet_1/dense1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_1/mul_grad/Shape_1"
  op: "Shape"
  input: "highwaynet_1/dense2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/highwaynet_1/mul_grad/Shape"
  input: "gradients/highwaynet_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/mul_grad/mul"
  op: "Mul"
  input: "gradients/highwaynet_1/add_grad/tuple/control_dependency"
  input: "highwaynet_1/dense2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/mul_grad/Sum"
  op: "Sum"
  input: "gradients/highwaynet_1/mul_grad/mul"
  input: "gradients/highwaynet_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_1/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_1/mul_grad/Sum"
  input: "gradients/highwaynet_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/mul_grad/mul_1"
  op: "Mul"
  input: "highwaynet_1/dense1/Relu"
  input: "gradients/highwaynet_1/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/highwaynet_1/mul_grad/mul_1"
  input: "gradients/highwaynet_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/highwaynet_1/mul_grad/Sum_1"
  input: "gradients/highwaynet_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_1/mul_grad/Reshape"
  input: "^gradients/highwaynet_1/mul_grad/Reshape_1"
}
node {
  name: "gradients/highwaynet_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_1/mul_grad/Reshape"
  input: "^gradients/highwaynet_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_1/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_1/mul_grad/Reshape_1"
  input: "^gradients/highwaynet_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_1/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/mul_1_grad/Shape"
  op: "Shape"
  input: "highwaynet_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_1/mul_1_grad/Shape_1"
  op: "Shape"
  input: "highwaynet_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_1/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/highwaynet_1/mul_1_grad/Shape"
  input: "gradients/highwaynet_1/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/highwaynet_1/add_grad/tuple/control_dependency_1"
  input: "highwaynet_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/highwaynet_1/mul_1_grad/mul"
  input: "gradients/highwaynet_1/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_1/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_1/mul_1_grad/Sum"
  input: "gradients/highwaynet_1/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/mul_1_grad/mul_1"
  op: "Mul"
  input: "highwaynet_0/add"
  input: "gradients/highwaynet_1/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/highwaynet_1/mul_1_grad/mul_1"
  input: "gradients/highwaynet_1/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_1/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/highwaynet_1/mul_1_grad/Sum_1"
  input: "gradients/highwaynet_1/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_1/mul_1_grad/Reshape"
  input: "^gradients/highwaynet_1/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/highwaynet_1/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_1/mul_1_grad/Reshape"
  input: "^gradients/highwaynet_1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_1/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_1/mul_1_grad/Reshape_1"
  input: "^gradients/highwaynet_1/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_1/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/highwaynet_1/mul_grad/tuple/control_dependency"
  input: "highwaynet_1/dense1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/sub_grad/Shape_1"
  op: "Shape"
  input: "highwaynet_1/dense2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_1/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/highwaynet_1/sub_grad/Shape"
  input: "gradients/highwaynet_1/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/sub_grad/Sum"
  op: "Sum"
  input: "gradients/highwaynet_1/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/highwaynet_1/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_1/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_1/sub_grad/Sum"
  input: "gradients/highwaynet_1/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/highwaynet_1/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/highwaynet_1/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_1/sub_grad/Neg"
  op: "Neg"
  input: "gradients/highwaynet_1/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/highwaynet_1/sub_grad/Neg"
  input: "gradients/highwaynet_1/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_1/sub_grad/Reshape"
  input: "^gradients/highwaynet_1/sub_grad/Reshape_1"
}
node {
  name: "gradients/highwaynet_1/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_1/sub_grad/Reshape"
  input: "^gradients/highwaynet_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_1/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_1/sub_grad/Reshape_1"
  input: "^gradients/highwaynet_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_1/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/highwaynet_1/dense1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_1/dense1/Relu_grad/ReluGrad"
  input: "^gradients/highwaynet_1/dense1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/highwaynet_1/dense1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_1/dense1/Relu_grad/ReluGrad"
  input: "^gradients/highwaynet_1/dense1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_1/dense1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_1/dense1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/highwaynet_1/dense1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_1/dense1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/highwaynet_1/mul_grad/tuple/control_dependency_1"
  input: "gradients/highwaynet_1/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_1/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense2/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "highwaynet_1/dense2/Sigmoid"
  input: "gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense1/Tensordot_grad/Shape"
  op: "Shape"
  input: "highwaynet_1/dense1/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense1/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_1/dense1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/highwaynet_1/dense1/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/highwaynet_1/dense2/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_1/dense2/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/highwaynet_1/dense2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/highwaynet_1/dense2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_1/dense2/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/highwaynet_1/dense2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_1/dense2/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_1/dense2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/highwaynet_1/dense2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_1/dense2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense1/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/highwaynet_1/dense1/Tensordot_grad/Reshape"
  input: "highwaynet_1/dense1/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense1/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "highwaynet_1/dense1/Tensordot/Reshape"
  input: "gradients/highwaynet_1/dense1/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense1/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_1/dense1/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/highwaynet_1/dense1/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/highwaynet_1/dense1/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_1/dense1/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/highwaynet_1/dense1/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_1/dense1/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense1/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_1/dense1/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/highwaynet_1/dense1/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_1/dense1/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense2/Tensordot_grad/Shape"
  op: "Shape"
  input: "highwaynet_1/dense2/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense2/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_1/dense2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/highwaynet_1/dense2/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense1/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "highwaynet_1/dense1/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense1/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_1/dense1/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/highwaynet_1/dense1/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense1/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense1/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_1/dense1/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/highwaynet_1/dense1/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense2/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/highwaynet_1/dense2/Tensordot_grad/Reshape"
  input: "highwaynet_1/dense2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense2/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "highwaynet_1/dense2/Tensordot/Reshape"
  input: "gradients/highwaynet_1/dense2/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense2/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_1/dense2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/highwaynet_1/dense2/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/highwaynet_1/dense2/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_1/dense2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/highwaynet_1/dense2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_1/dense2/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_1/dense2/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/highwaynet_1/dense2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_1/dense2/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense1/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "highwaynet_1/dense1/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense1/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/highwaynet_1/dense1/Tensordot/Reshape_grad/Reshape"
  input: "gradients/highwaynet_1/dense1/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense1/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "highwaynet_1/dense1/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense1/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/highwaynet_1/dense1/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/highwaynet_1/dense1/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense2/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "highwaynet_1/dense2/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense2/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_1/dense2/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/highwaynet_1/dense2/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense2/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense2/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_1/dense2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/highwaynet_1/dense2/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense2/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "highwaynet_1/dense2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense2/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/highwaynet_1/dense2/Tensordot/Reshape_grad/Reshape"
  input: "gradients/highwaynet_1/dense2/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense2/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "highwaynet_1/dense2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_1/dense2/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/highwaynet_1/dense2/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/highwaynet_1/dense2/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/highwaynet_1/mul_1_grad/tuple/control_dependency"
  input: "gradients/highwaynet_1/dense1/Tensordot/transpose_grad/transpose"
  input: "gradients/highwaynet_1/dense2/Tensordot/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_1/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/add_grad/Shape"
  op: "Shape"
  input: "highwaynet_0/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_0/add_grad/Shape_1"
  op: "Shape"
  input: "highwaynet_0/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_0/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/highwaynet_0/add_grad/Shape"
  input: "gradients/highwaynet_0/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_14"
  input: "gradients/highwaynet_0/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_0/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_0/add_grad/Sum"
  input: "gradients/highwaynet_0/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_14"
  input: "gradients/highwaynet_0/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_0/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/highwaynet_0/add_grad/Sum_1"
  input: "gradients/highwaynet_0/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_0/add_grad/Reshape"
  input: "^gradients/highwaynet_0/add_grad/Reshape_1"
}
node {
  name: "gradients/highwaynet_0/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_0/add_grad/Reshape"
  input: "^gradients/highwaynet_0/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_0/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_0/add_grad/Reshape_1"
  input: "^gradients/highwaynet_0/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_0/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/mul_grad/Shape"
  op: "Shape"
  input: "highwaynet_0/dense1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_0/mul_grad/Shape_1"
  op: "Shape"
  input: "highwaynet_0/dense2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_0/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/highwaynet_0/mul_grad/Shape"
  input: "gradients/highwaynet_0/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/mul_grad/mul"
  op: "Mul"
  input: "gradients/highwaynet_0/add_grad/tuple/control_dependency"
  input: "highwaynet_0/dense2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/mul_grad/Sum"
  op: "Sum"
  input: "gradients/highwaynet_0/mul_grad/mul"
  input: "gradients/highwaynet_0/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_0/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_0/mul_grad/Sum"
  input: "gradients/highwaynet_0/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/mul_grad/mul_1"
  op: "Mul"
  input: "highwaynet_0/dense1/Relu"
  input: "gradients/highwaynet_0/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/highwaynet_0/mul_grad/mul_1"
  input: "gradients/highwaynet_0/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_0/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/highwaynet_0/mul_grad/Sum_1"
  input: "gradients/highwaynet_0/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_0/mul_grad/Reshape"
  input: "^gradients/highwaynet_0/mul_grad/Reshape_1"
}
node {
  name: "gradients/highwaynet_0/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_0/mul_grad/Reshape"
  input: "^gradients/highwaynet_0/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_0/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_0/mul_grad/Reshape_1"
  input: "^gradients/highwaynet_0/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_0/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/mul_1_grad/Shape"
  op: "Shape"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_0/mul_1_grad/Shape_1"
  op: "Shape"
  input: "highwaynet_0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_0/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/highwaynet_0/mul_1_grad/Shape"
  input: "gradients/highwaynet_0/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/mul_1_grad/mul"
  op: "Mul"
  input: "gradients/highwaynet_0/add_grad/tuple/control_dependency_1"
  input: "highwaynet_0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/highwaynet_0/mul_1_grad/mul"
  input: "gradients/highwaynet_0/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_0/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_0/mul_1_grad/Sum"
  input: "gradients/highwaynet_0/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/mul_1_grad/mul_1"
  op: "Mul"
  input: "add"
  input: "gradients/highwaynet_0/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/highwaynet_0/mul_1_grad/mul_1"
  input: "gradients/highwaynet_0/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_0/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/highwaynet_0/mul_1_grad/Sum_1"
  input: "gradients/highwaynet_0/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_0/mul_1_grad/Reshape"
  input: "^gradients/highwaynet_0/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/highwaynet_0/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_0/mul_1_grad/Reshape"
  input: "^gradients/highwaynet_0/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_0/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_0/mul_1_grad/Reshape_1"
  input: "^gradients/highwaynet_0/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_0/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/highwaynet_0/mul_grad/tuple/control_dependency"
  input: "highwaynet_0/dense1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/sub_grad/Shape_1"
  op: "Shape"
  input: "highwaynet_0/dense2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_0/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/highwaynet_0/sub_grad/Shape"
  input: "gradients/highwaynet_0/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/sub_grad/Sum"
  op: "Sum"
  input: "gradients/highwaynet_0/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/highwaynet_0/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_0/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_0/sub_grad/Sum"
  input: "gradients/highwaynet_0/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/highwaynet_0/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/highwaynet_0/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_0/sub_grad/Neg"
  op: "Neg"
  input: "gradients/highwaynet_0/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/highwaynet_0/sub_grad/Neg"
  input: "gradients/highwaynet_0/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_0/sub_grad/Reshape"
  input: "^gradients/highwaynet_0/sub_grad/Reshape_1"
}
node {
  name: "gradients/highwaynet_0/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_0/sub_grad/Reshape"
  input: "^gradients/highwaynet_0/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_0/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_0/sub_grad/Reshape_1"
  input: "^gradients/highwaynet_0/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_0/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/highwaynet_0/dense1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_0/dense1/Relu_grad/ReluGrad"
  input: "^gradients/highwaynet_0/dense1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/highwaynet_0/dense1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_0/dense1/Relu_grad/ReluGrad"
  input: "^gradients/highwaynet_0/dense1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_0/dense1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_0/dense1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/highwaynet_0/dense1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_0/dense1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/highwaynet_0/mul_grad/tuple/control_dependency_1"
  input: "gradients/highwaynet_0/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_0/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense2/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "highwaynet_0/dense2/Sigmoid"
  input: "gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense1/Tensordot_grad/Shape"
  op: "Shape"
  input: "highwaynet_0/dense1/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense1/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_0/dense1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/highwaynet_0/dense1/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/highwaynet_0/dense2/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_0/dense2/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/highwaynet_0/dense2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/highwaynet_0/dense2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_0/dense2/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/highwaynet_0/dense2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_0/dense2/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_0/dense2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/highwaynet_0/dense2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_0/dense2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense1/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/highwaynet_0/dense1/Tensordot_grad/Reshape"
  input: "highwaynet_0/dense1/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense1/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "highwaynet_0/dense1/Tensordot/Reshape"
  input: "gradients/highwaynet_0/dense1/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense1/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_0/dense1/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/highwaynet_0/dense1/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/highwaynet_0/dense1/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_0/dense1/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/highwaynet_0/dense1/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_0/dense1/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense1/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_0/dense1/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/highwaynet_0/dense1/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_0/dense1/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense2/Tensordot_grad/Shape"
  op: "Shape"
  input: "highwaynet_0/dense2/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense2/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_0/dense2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/highwaynet_0/dense2/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense1/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "highwaynet_0/dense1/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense1/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_0/dense1/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/highwaynet_0/dense1/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense1/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense1/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_0/dense1/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/highwaynet_0/dense1/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense2/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/highwaynet_0/dense2/Tensordot_grad/Reshape"
  input: "highwaynet_0/dense2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense2/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "highwaynet_0/dense2/Tensordot/Reshape"
  input: "gradients/highwaynet_0/dense2/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense2/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/highwaynet_0/dense2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/highwaynet_0/dense2/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/highwaynet_0/dense2/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/highwaynet_0/dense2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/highwaynet_0/dense2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_0/dense2/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/highwaynet_0/dense2/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/highwaynet_0/dense2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_0/dense2/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense1/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "highwaynet_0/dense1/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense1/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/highwaynet_0/dense1/Tensordot/Reshape_grad/Reshape"
  input: "gradients/highwaynet_0/dense1/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense1/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "highwaynet_0/dense1/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense1/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/highwaynet_0/dense1/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/highwaynet_0/dense1/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense2/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "highwaynet_0/dense2/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense2/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_0/dense2/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/highwaynet_0/dense2/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense2/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense2/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/highwaynet_0/dense2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/highwaynet_0/dense2/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense2/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "highwaynet_0/dense2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense2/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/highwaynet_0/dense2/Tensordot/Reshape_grad/Reshape"
  input: "gradients/highwaynet_0/dense2/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense2/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "highwaynet_0/dense2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/highwaynet_0/dense2/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/highwaynet_0/dense2/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/highwaynet_0/dense2/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/highwaynet_0/mul_1_grad/tuple/control_dependency"
  input: "gradients/highwaynet_0/dense1/Tensordot/transpose_grad/transpose"
  input: "gradients/highwaynet_0/dense2/Tensordot/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/highwaynet_0/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/Shape"
  op: "Shape"
  input: "Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/Shape_1"
  op: "Shape"
  input: "prenet/dropout2/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_grad/Shape"
  input: "gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_16"
  input: "gradients/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_grad/Sum"
  input: "gradients/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_16"
  input: "gradients/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_grad/Sum_1"
  input: "gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_grad/Reshape"
  input: "^gradients/add_grad/Reshape_1"
}
node {
  name: "gradients/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_grad/Reshape"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_grad/Reshape_1"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Squeeze_1_grad/Shape"
  op: "Shape"
  input: "norm2/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_grad/tuple/control_dependency"
  input: "gradients/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_like_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_like_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_like_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/norm2/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Squeeze_1_grad/Reshape"
  input: "ExpandDims_1"
  input: "norm2/gamma/read"
  input: "norm2/FusedBatchNorm:3"
  input: "norm2/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: 150
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/norm2/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/norm2/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/norm2/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/norm2/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/norm2/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/norm2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/norm2/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/norm2/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/norm2/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/norm2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/norm2/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/norm2/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/norm2/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/norm2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/norm2/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/norm2/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/norm2/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/norm2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/norm2/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/norm2/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/norm2/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/norm2/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ExpandDims_1_grad/Shape"
  op: "Shape"
  input: "conv1d_2/conv1d/convolution/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/norm2/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_2/conv1d/convolution/Squeeze_grad/Shape"
  op: "Shape"
  input: "conv1d_2/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_2/conv1d/convolution/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/ExpandDims_1_grad/Reshape"
  input: "gradients/conv1d_2/conv1d/convolution/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_2/conv1d/convolution/Conv2D_grad/Shape"
  op: "Shape"
  input: "conv1d_2/conv1d/convolution/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_2/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv1d_2/conv1d/convolution/Conv2D_grad/Shape"
  input: "conv1d_2/conv1d/convolution/ExpandDims_1"
  input: "gradients/conv1d_2/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_2/conv1d/convolution/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_2/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv1d_2/conv1d/convolution/ExpandDims"
  input: "gradients/conv1d_2/conv1d/convolution/Conv2D_grad/Shape_1"
  input: "gradients/conv1d_2/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_2/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_2/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_2/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/conv1d_2/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_2/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_2/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_2/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_2/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_2/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv1d_2/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_2/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_2/conv1d/convolution/ExpandDims_grad/Shape"
  op: "Shape"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_2/conv1d/convolution/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_2/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  input: "gradients/conv1d_2/conv1d/convolution/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_2/conv1d/convolution/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\005\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_2/conv1d/convolution/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_2/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_2/conv1d/convolution/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/conv1d_2/conv1d/convolution/ExpandDims_grad/Reshape"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Squeeze_grad/Shape"
  op: "Shape"
  input: "norm1/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/Relu_grad/ReluGrad"
  input: "gradients/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_like_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_like_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_like_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/norm1/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/Squeeze_grad/Reshape"
  input: "ExpandDims"
  input: "norm1/gamma/read"
  input: "norm1/FusedBatchNorm:3"
  input: "norm1/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: 150
          }
        }
        shape {
          dim {
            size: 150
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/norm1/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/norm1/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/norm1/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/norm1/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/norm1/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/norm1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/norm1/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/norm1/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/norm1/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/norm1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/norm1/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/norm1/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/norm1/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/norm1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/norm1/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/norm1/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/norm1/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/norm1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/norm1/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/norm1/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/norm1/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/norm1/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/ExpandDims_grad/Shape"
  op: "Shape"
  input: "conv1d_1/conv1d/convolution/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/norm1/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_1/conv1d/convolution/Squeeze_grad/Shape"
  op: "Shape"
  input: "conv1d_1/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_1/conv1d/convolution/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/ExpandDims_grad/Reshape"
  input: "gradients/conv1d_1/conv1d/convolution/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_1/conv1d/convolution/Conv2D_grad/Shape"
  op: "Shape"
  input: "conv1d_1/conv1d/convolution/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_1/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv1d_1/conv1d/convolution/Conv2D_grad/Shape"
  input: "conv1d_1/conv1d/convolution/ExpandDims_1"
  input: "gradients/conv1d_1/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_1/conv1d/convolution/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000`\t\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_1/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv1d_1/conv1d/convolution/ExpandDims"
  input: "gradients/conv1d_1/conv1d/convolution/Conv2D_grad/Shape_1"
  input: "gradients/conv1d_1/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_1/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_1/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_1/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/conv1d_1/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_1/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_1/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_1/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_1/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_1/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv1d_1/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_1/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_1/conv1d/convolution/ExpandDims_grad/Shape"
  op: "Shape"
  input: "max_pooling1d/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_1/conv1d/convolution/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_1/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  input: "gradients/conv1d_1/conv1d/convolution/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_1/conv1d/convolution/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\005\000\000\000`\t\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_1/conv1d/convolution/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_1/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_1/conv1d/convolution/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/max_pooling1d/Squeeze_grad/Shape"
  op: "Shape"
  input: "max_pooling1d/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/max_pooling1d/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_1/conv1d/convolution/ExpandDims_grad/Reshape"
  input: "gradients/max_pooling1d/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "gradients/max_pooling1d/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "max_pooling1d/ExpandDims"
  input: "max_pooling1d/MaxPool"
  input: "gradients/max_pooling1d/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "gradients/max_pooling1d/ExpandDims_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/max_pooling1d/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/max_pooling1d/MaxPool_grad/MaxPoolGrad"
  input: "gradients/max_pooling1d/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/max_pooling1d/ExpandDims_grad/Reshape"
  input: "conv1d_banks/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/Squeeze_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/normalize/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/Relu_grad/ReluGrad"
  input: "gradients/conv1d_banks/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_like_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_like_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_like_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/normalize/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/conv1d_banks/Squeeze_grad/Reshape"
  input: "conv1d_banks/ExpandDims"
  input: "conv1d_banks/normalize/gamma/read"
  input: "conv1d_banks/normalize/FusedBatchNorm:3"
  input: "conv1d_banks/normalize/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 2400
          }
        }
        shape {
          dim {
            size: 2400
          }
        }
        shape {
          dim {
            size: 2400
          }
        }
        shape {
          dim {
          }
        }
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/normalize/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/normalize/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/conv1d_banks/normalize/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/normalize/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/conv1d_banks/normalize/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/normalize/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/normalize/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/normalize/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/conv1d_banks/normalize/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/normalize/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/normalize/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/conv1d_banks/normalize/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/conv1d_banks/normalize/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/normalize/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/normalize/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/conv1d_banks/normalize/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^gradients/conv1d_banks/normalize/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/normalize/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/normalize/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/conv1d_banks/normalize/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^gradients/conv1d_banks/normalize/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/normalize/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/ExpandDims_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_16/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/normalize/FusedBatchNorm_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_16/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_16/concat_grad/mod"
  op: "FloorMod"
  input: "conv1d_banks/num_16/concat/axis"
  input: "gradients/conv1d_banks/num_16/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_16/concat_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_15/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_16/concat_grad/ShapeN"
  op: "ShapeN"
  input: "conv1d_banks/num_15/concat"
  input: "conv1d_banks/num_16/conv1d/conv1d/convolution/Squeeze"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_16/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/conv1d_banks/num_16/concat_grad/mod"
  input: "gradients/conv1d_banks/num_16/concat_grad/ShapeN"
  input: "gradients/conv1d_banks/num_16/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_16/concat_grad/Slice"
  op: "Slice"
  input: "gradients/conv1d_banks/ExpandDims_grad/Reshape"
  input: "gradients/conv1d_banks/num_16/concat_grad/ConcatOffset"
  input: "gradients/conv1d_banks/num_16/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_16/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/conv1d_banks/ExpandDims_grad/Reshape"
  input: "gradients/conv1d_banks/num_16/concat_grad/ConcatOffset:1"
  input: "gradients/conv1d_banks/num_16/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_16/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_16/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_16/concat_grad/Slice_1"
}
node {
  name: "gradients/conv1d_banks/num_16/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_16/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_16/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_16/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 2250
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_16/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_16/concat_grad/Slice_1"
  input: "^gradients/conv1d_banks/num_16/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_16/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_15/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_15/concat_grad/mod"
  op: "FloorMod"
  input: "conv1d_banks/num_15/concat/axis"
  input: "gradients/conv1d_banks/num_15/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_15/concat_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_14/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_15/concat_grad/ShapeN"
  op: "ShapeN"
  input: "conv1d_banks/num_14/concat"
  input: "conv1d_banks/num_15/conv1d/conv1d/convolution/Squeeze"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_15/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/conv1d_banks/num_15/concat_grad/mod"
  input: "gradients/conv1d_banks/num_15/concat_grad/ShapeN"
  input: "gradients/conv1d_banks/num_15/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_15/concat_grad/Slice"
  op: "Slice"
  input: "gradients/conv1d_banks/num_16/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_15/concat_grad/ConcatOffset"
  input: "gradients/conv1d_banks/num_15/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_15/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/conv1d_banks/num_16/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_15/concat_grad/ConcatOffset:1"
  input: "gradients/conv1d_banks/num_15/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_15/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_15/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_15/concat_grad/Slice_1"
}
node {
  name: "gradients/conv1d_banks/num_15/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_15/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_15/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_15/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 2100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_15/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_15/concat_grad/Slice_1"
  input: "^gradients/conv1d_banks/num_15/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_15/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_16/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_16/concat_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_14/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_14/concat_grad/mod"
  op: "FloorMod"
  input: "conv1d_banks/num_14/concat/axis"
  input: "gradients/conv1d_banks/num_14/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_14/concat_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_13/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_14/concat_grad/ShapeN"
  op: "ShapeN"
  input: "conv1d_banks/num_13/concat"
  input: "conv1d_banks/num_14/conv1d/conv1d/convolution/Squeeze"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_14/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/conv1d_banks/num_14/concat_grad/mod"
  input: "gradients/conv1d_banks/num_14/concat_grad/ShapeN"
  input: "gradients/conv1d_banks/num_14/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_14/concat_grad/Slice"
  op: "Slice"
  input: "gradients/conv1d_banks/num_15/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_14/concat_grad/ConcatOffset"
  input: "gradients/conv1d_banks/num_14/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_14/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/conv1d_banks/num_15/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_14/concat_grad/ConcatOffset:1"
  input: "gradients/conv1d_banks/num_14/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_14/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_14/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_14/concat_grad/Slice_1"
}
node {
  name: "gradients/conv1d_banks/num_14/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_14/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_14/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_14/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 1950
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_14/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_14/concat_grad/Slice_1"
  input: "^gradients/conv1d_banks/num_14/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_14/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_15/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_15/concat_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_16/conv1d/conv1d/convolution/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  input: "conv1d_banks/num_16/conv1d/conv1d/convolution/ExpandDims_1"
  input: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\020\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv1d_banks/num_16/conv1d/conv1d/convolution/ExpandDims"
  input: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  input: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_13/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_13/concat_grad/mod"
  op: "FloorMod"
  input: "conv1d_banks/num_13/concat/axis"
  input: "gradients/conv1d_banks/num_13/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_13/concat_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_12/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_13/concat_grad/ShapeN"
  op: "ShapeN"
  input: "conv1d_banks/num_12/concat"
  input: "conv1d_banks/num_13/conv1d/conv1d/convolution/Squeeze"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_13/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/conv1d_banks/num_13/concat_grad/mod"
  input: "gradients/conv1d_banks/num_13/concat_grad/ShapeN"
  input: "gradients/conv1d_banks/num_13/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_13/concat_grad/Slice"
  op: "Slice"
  input: "gradients/conv1d_banks/num_14/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_13/concat_grad/ConcatOffset"
  input: "gradients/conv1d_banks/num_13/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_13/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/conv1d_banks/num_14/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_13/concat_grad/ConcatOffset:1"
  input: "gradients/conv1d_banks/num_13/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_13/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_13/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_13/concat_grad/Slice_1"
}
node {
  name: "gradients/conv1d_banks/num_13/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_13/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_13/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_13/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 1800
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_13/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_13/concat_grad/Slice_1"
  input: "^gradients/conv1d_banks/num_13/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_13/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_14/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_14/concat_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_15/conv1d/conv1d/convolution/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  input: "conv1d_banks/num_15/conv1d/conv1d/convolution/ExpandDims_1"
  input: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\017\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv1d_banks/num_15/conv1d/conv1d/convolution/ExpandDims"
  input: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  input: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  op: "Shape"
  input: "prenet/dropout2/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\020\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_12/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_12/concat_grad/mod"
  op: "FloorMod"
  input: "conv1d_banks/num_12/concat/axis"
  input: "gradients/conv1d_banks/num_12/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_12/concat_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_11/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_12/concat_grad/ShapeN"
  op: "ShapeN"
  input: "conv1d_banks/num_11/concat"
  input: "conv1d_banks/num_12/conv1d/conv1d/convolution/Squeeze"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_12/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/conv1d_banks/num_12/concat_grad/mod"
  input: "gradients/conv1d_banks/num_12/concat_grad/ShapeN"
  input: "gradients/conv1d_banks/num_12/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_12/concat_grad/Slice"
  op: "Slice"
  input: "gradients/conv1d_banks/num_13/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_12/concat_grad/ConcatOffset"
  input: "gradients/conv1d_banks/num_12/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_12/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/conv1d_banks/num_13/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_12/concat_grad/ConcatOffset:1"
  input: "gradients/conv1d_banks/num_12/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_12/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_12/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_12/concat_grad/Slice_1"
}
node {
  name: "gradients/conv1d_banks/num_12/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_12/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_12/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_12/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 1650
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_12/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_12/concat_grad/Slice_1"
  input: "^gradients/conv1d_banks/num_12/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_12/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_13/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_13/concat_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_14/conv1d/conv1d/convolution/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  input: "conv1d_banks/num_14/conv1d/conv1d/convolution/ExpandDims_1"
  input: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\016\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv1d_banks/num_14/conv1d/conv1d/convolution/ExpandDims"
  input: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  input: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  op: "Shape"
  input: "prenet/dropout2/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\017\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_11/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_11/concat_grad/mod"
  op: "FloorMod"
  input: "conv1d_banks/num_11/concat/axis"
  input: "gradients/conv1d_banks/num_11/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_11/concat_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_10/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_11/concat_grad/ShapeN"
  op: "ShapeN"
  input: "conv1d_banks/num_10/concat"
  input: "conv1d_banks/num_11/conv1d/conv1d/convolution/Squeeze"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_11/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/conv1d_banks/num_11/concat_grad/mod"
  input: "gradients/conv1d_banks/num_11/concat_grad/ShapeN"
  input: "gradients/conv1d_banks/num_11/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_11/concat_grad/Slice"
  op: "Slice"
  input: "gradients/conv1d_banks/num_12/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_11/concat_grad/ConcatOffset"
  input: "gradients/conv1d_banks/num_11/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_11/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/conv1d_banks/num_12/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_11/concat_grad/ConcatOffset:1"
  input: "gradients/conv1d_banks/num_11/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_11/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_11/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_11/concat_grad/Slice_1"
}
node {
  name: "gradients/conv1d_banks/num_11/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_11/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_11/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_11/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 1500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_11/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_11/concat_grad/Slice_1"
  input: "^gradients/conv1d_banks/num_11/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_11/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_12/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_12/concat_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_13/conv1d/conv1d/convolution/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  input: "conv1d_banks/num_13/conv1d/conv1d/convolution/ExpandDims_1"
  input: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\r\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv1d_banks/num_13/conv1d/conv1d/convolution/ExpandDims"
  input: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  input: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  op: "Shape"
  input: "prenet/dropout2/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\016\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_10/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_10/concat_grad/mod"
  op: "FloorMod"
  input: "conv1d_banks/num_10/concat/axis"
  input: "gradients/conv1d_banks/num_10/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_10/concat_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_9/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_10/concat_grad/ShapeN"
  op: "ShapeN"
  input: "conv1d_banks/num_9/concat"
  input: "conv1d_banks/num_10/conv1d/conv1d/convolution/Squeeze"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_10/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/conv1d_banks/num_10/concat_grad/mod"
  input: "gradients/conv1d_banks/num_10/concat_grad/ShapeN"
  input: "gradients/conv1d_banks/num_10/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_10/concat_grad/Slice"
  op: "Slice"
  input: "gradients/conv1d_banks/num_11/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_10/concat_grad/ConcatOffset"
  input: "gradients/conv1d_banks/num_10/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_10/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/conv1d_banks/num_11/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_10/concat_grad/ConcatOffset:1"
  input: "gradients/conv1d_banks/num_10/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_10/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_10/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_10/concat_grad/Slice_1"
}
node {
  name: "gradients/conv1d_banks/num_10/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_10/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_10/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_10/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 1350
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_10/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_10/concat_grad/Slice_1"
  input: "^gradients/conv1d_banks/num_10/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_10/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_11/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_11/concat_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_12/conv1d/conv1d/convolution/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  input: "conv1d_banks/num_12/conv1d/conv1d/convolution/ExpandDims_1"
  input: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\014\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv1d_banks/num_12/conv1d/conv1d/convolution/ExpandDims"
  input: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  input: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  op: "Shape"
  input: "prenet/dropout2/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\r\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_9/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_9/concat_grad/mod"
  op: "FloorMod"
  input: "conv1d_banks/num_9/concat/axis"
  input: "gradients/conv1d_banks/num_9/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_9/concat_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_8/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_9/concat_grad/ShapeN"
  op: "ShapeN"
  input: "conv1d_banks/num_8/concat"
  input: "conv1d_banks/num_9/conv1d/conv1d/convolution/Squeeze"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_9/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/conv1d_banks/num_9/concat_grad/mod"
  input: "gradients/conv1d_banks/num_9/concat_grad/ShapeN"
  input: "gradients/conv1d_banks/num_9/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_9/concat_grad/Slice"
  op: "Slice"
  input: "gradients/conv1d_banks/num_10/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_9/concat_grad/ConcatOffset"
  input: "gradients/conv1d_banks/num_9/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_9/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/conv1d_banks/num_10/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_9/concat_grad/ConcatOffset:1"
  input: "gradients/conv1d_banks/num_9/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_9/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_9/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_9/concat_grad/Slice_1"
}
node {
  name: "gradients/conv1d_banks/num_9/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_9/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_9/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_9/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 1200
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_9/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_9/concat_grad/Slice_1"
  input: "^gradients/conv1d_banks/num_9/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_9/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_10/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_10/concat_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_11/conv1d/conv1d/convolution/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  input: "conv1d_banks/num_11/conv1d/conv1d/convolution/ExpandDims_1"
  input: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\013\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv1d_banks/num_11/conv1d/conv1d/convolution/ExpandDims"
  input: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  input: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  op: "Shape"
  input: "prenet/dropout2/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\014\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_8/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_8/concat_grad/mod"
  op: "FloorMod"
  input: "conv1d_banks/num_8/concat/axis"
  input: "gradients/conv1d_banks/num_8/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_8/concat_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_7/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_8/concat_grad/ShapeN"
  op: "ShapeN"
  input: "conv1d_banks/num_7/concat"
  input: "conv1d_banks/num_8/conv1d/conv1d/convolution/Squeeze"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_8/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/conv1d_banks/num_8/concat_grad/mod"
  input: "gradients/conv1d_banks/num_8/concat_grad/ShapeN"
  input: "gradients/conv1d_banks/num_8/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_8/concat_grad/Slice"
  op: "Slice"
  input: "gradients/conv1d_banks/num_9/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_8/concat_grad/ConcatOffset"
  input: "gradients/conv1d_banks/num_8/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_8/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/conv1d_banks/num_9/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_8/concat_grad/ConcatOffset:1"
  input: "gradients/conv1d_banks/num_8/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_8/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_8/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_8/concat_grad/Slice_1"
}
node {
  name: "gradients/conv1d_banks/num_8/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_8/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_8/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_8/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 1050
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_8/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_8/concat_grad/Slice_1"
  input: "^gradients/conv1d_banks/num_8/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_8/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_9/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_9/concat_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_10/conv1d/conv1d/convolution/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  input: "conv1d_banks/num_10/conv1d/conv1d/convolution/ExpandDims_1"
  input: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\n\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv1d_banks/num_10/conv1d/conv1d/convolution/ExpandDims"
  input: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  input: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  op: "Shape"
  input: "prenet/dropout2/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\013\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_7/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_7/concat_grad/mod"
  op: "FloorMod"
  input: "conv1d_banks/num_7/concat/axis"
  input: "gradients/conv1d_banks/num_7/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_7/concat_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_6/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_7/concat_grad/ShapeN"
  op: "ShapeN"
  input: "conv1d_banks/num_6/concat"
  input: "conv1d_banks/num_7/conv1d/conv1d/convolution/Squeeze"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_7/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/conv1d_banks/num_7/concat_grad/mod"
  input: "gradients/conv1d_banks/num_7/concat_grad/ShapeN"
  input: "gradients/conv1d_banks/num_7/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_7/concat_grad/Slice"
  op: "Slice"
  input: "gradients/conv1d_banks/num_8/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_7/concat_grad/ConcatOffset"
  input: "gradients/conv1d_banks/num_7/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_7/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/conv1d_banks/num_8/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_7/concat_grad/ConcatOffset:1"
  input: "gradients/conv1d_banks/num_7/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_7/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_7/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_7/concat_grad/Slice_1"
}
node {
  name: "gradients/conv1d_banks/num_7/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_7/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_7/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_7/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 900
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_7/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_7/concat_grad/Slice_1"
  input: "^gradients/conv1d_banks/num_7/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_7/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_8/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_8/concat_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_9/conv1d/conv1d/convolution/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  input: "conv1d_banks/num_9/conv1d/conv1d/convolution/ExpandDims_1"
  input: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\t\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv1d_banks/num_9/conv1d/conv1d/convolution/ExpandDims"
  input: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  input: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  op: "Shape"
  input: "prenet/dropout2/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\n\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_6/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_6/concat_grad/mod"
  op: "FloorMod"
  input: "conv1d_banks/num_6/concat/axis"
  input: "gradients/conv1d_banks/num_6/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_6/concat_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_5/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_6/concat_grad/ShapeN"
  op: "ShapeN"
  input: "conv1d_banks/num_5/concat"
  input: "conv1d_banks/num_6/conv1d/conv1d/convolution/Squeeze"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_6/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/conv1d_banks/num_6/concat_grad/mod"
  input: "gradients/conv1d_banks/num_6/concat_grad/ShapeN"
  input: "gradients/conv1d_banks/num_6/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_6/concat_grad/Slice"
  op: "Slice"
  input: "gradients/conv1d_banks/num_7/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_6/concat_grad/ConcatOffset"
  input: "gradients/conv1d_banks/num_6/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_6/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/conv1d_banks/num_7/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_6/concat_grad/ConcatOffset:1"
  input: "gradients/conv1d_banks/num_6/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_6/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_6/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_6/concat_grad/Slice_1"
}
node {
  name: "gradients/conv1d_banks/num_6/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_6/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_6/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_6/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 750
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_6/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_6/concat_grad/Slice_1"
  input: "^gradients/conv1d_banks/num_6/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_6/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_7/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_7/concat_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_8/conv1d/conv1d/convolution/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  input: "conv1d_banks/num_8/conv1d/conv1d/convolution/ExpandDims_1"
  input: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\010\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv1d_banks/num_8/conv1d/conv1d/convolution/ExpandDims"
  input: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  input: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  op: "Shape"
  input: "prenet/dropout2/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\t\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_5/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_5/concat_grad/mod"
  op: "FloorMod"
  input: "conv1d_banks/num_5/concat/axis"
  input: "gradients/conv1d_banks/num_5/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_5/concat_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_4/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_5/concat_grad/ShapeN"
  op: "ShapeN"
  input: "conv1d_banks/num_4/concat"
  input: "conv1d_banks/num_5/conv1d/conv1d/convolution/Squeeze"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_5/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/conv1d_banks/num_5/concat_grad/mod"
  input: "gradients/conv1d_banks/num_5/concat_grad/ShapeN"
  input: "gradients/conv1d_banks/num_5/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_5/concat_grad/Slice"
  op: "Slice"
  input: "gradients/conv1d_banks/num_6/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_5/concat_grad/ConcatOffset"
  input: "gradients/conv1d_banks/num_5/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_5/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/conv1d_banks/num_6/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_5/concat_grad/ConcatOffset:1"
  input: "gradients/conv1d_banks/num_5/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_5/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_5/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_5/concat_grad/Slice_1"
}
node {
  name: "gradients/conv1d_banks/num_5/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_5/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_5/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_5/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 600
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_5/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_5/concat_grad/Slice_1"
  input: "^gradients/conv1d_banks/num_5/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_5/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_6/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_6/concat_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_7/conv1d/conv1d/convolution/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  input: "conv1d_banks/num_7/conv1d/conv1d/convolution/ExpandDims_1"
  input: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\007\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv1d_banks/num_7/conv1d/conv1d/convolution/ExpandDims"
  input: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  input: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  op: "Shape"
  input: "prenet/dropout2/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\010\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_4/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_4/concat_grad/mod"
  op: "FloorMod"
  input: "conv1d_banks/num_4/concat/axis"
  input: "gradients/conv1d_banks/num_4/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_4/concat_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_3/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_4/concat_grad/ShapeN"
  op: "ShapeN"
  input: "conv1d_banks/num_3/concat"
  input: "conv1d_banks/num_4/conv1d/conv1d/convolution/Squeeze"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_4/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/conv1d_banks/num_4/concat_grad/mod"
  input: "gradients/conv1d_banks/num_4/concat_grad/ShapeN"
  input: "gradients/conv1d_banks/num_4/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_4/concat_grad/Slice"
  op: "Slice"
  input: "gradients/conv1d_banks/num_5/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_4/concat_grad/ConcatOffset"
  input: "gradients/conv1d_banks/num_4/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_4/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/conv1d_banks/num_5/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_4/concat_grad/ConcatOffset:1"
  input: "gradients/conv1d_banks/num_4/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_4/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_4/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_4/concat_grad/Slice_1"
}
node {
  name: "gradients/conv1d_banks/num_4/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_4/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_4/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_4/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 450
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_4/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_4/concat_grad/Slice_1"
  input: "^gradients/conv1d_banks/num_4/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_4/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_5/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_5/concat_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_6/conv1d/conv1d/convolution/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  input: "conv1d_banks/num_6/conv1d/conv1d/convolution/ExpandDims_1"
  input: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\006\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv1d_banks/num_6/conv1d/conv1d/convolution/ExpandDims"
  input: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  input: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  op: "Shape"
  input: "prenet/dropout2/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\007\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_3/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_3/concat_grad/mod"
  op: "FloorMod"
  input: "conv1d_banks/num_3/concat/axis"
  input: "gradients/conv1d_banks/num_3/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_3/concat_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_2/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_3/concat_grad/ShapeN"
  op: "ShapeN"
  input: "conv1d_banks/num_2/concat"
  input: "conv1d_banks/num_3/conv1d/conv1d/convolution/Squeeze"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_3/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/conv1d_banks/num_3/concat_grad/mod"
  input: "gradients/conv1d_banks/num_3/concat_grad/ShapeN"
  input: "gradients/conv1d_banks/num_3/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_3/concat_grad/Slice"
  op: "Slice"
  input: "gradients/conv1d_banks/num_4/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_3/concat_grad/ConcatOffset"
  input: "gradients/conv1d_banks/num_3/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_3/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/conv1d_banks/num_4/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_3/concat_grad/ConcatOffset:1"
  input: "gradients/conv1d_banks/num_3/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_3/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_3/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_3/concat_grad/Slice_1"
}
node {
  name: "gradients/conv1d_banks/num_3/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_3/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_3/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_3/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_3/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_3/concat_grad/Slice_1"
  input: "^gradients/conv1d_banks/num_3/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_3/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_4/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_4/concat_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_5/conv1d/conv1d/convolution/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  input: "conv1d_banks/num_5/conv1d/conv1d/convolution/ExpandDims_1"
  input: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\005\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv1d_banks/num_5/conv1d/conv1d/convolution/ExpandDims"
  input: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  input: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  op: "Shape"
  input: "prenet/dropout2/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\006\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_2/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_2/concat_grad/mod"
  op: "FloorMod"
  input: "conv1d_banks/num_2/concat/axis"
  input: "gradients/conv1d_banks/num_2/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_2/concat_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/conv1d/conv1d/convolution/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_2/concat_grad/ShapeN"
  op: "ShapeN"
  input: "conv1d_banks/conv1d/conv1d/convolution/Squeeze"
  input: "conv1d_banks/num_2/conv1d/conv1d/convolution/Squeeze"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_2/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/conv1d_banks/num_2/concat_grad/mod"
  input: "gradients/conv1d_banks/num_2/concat_grad/ShapeN"
  input: "gradients/conv1d_banks/num_2/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_2/concat_grad/Slice"
  op: "Slice"
  input: "gradients/conv1d_banks/num_3/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_2/concat_grad/ConcatOffset"
  input: "gradients/conv1d_banks/num_2/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_2/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/conv1d_banks/num_3/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_2/concat_grad/ConcatOffset:1"
  input: "gradients/conv1d_banks/num_2/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_2/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_2/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_2/concat_grad/Slice_1"
}
node {
  name: "gradients/conv1d_banks/num_2/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_2/concat_grad/Slice"
  input: "^gradients/conv1d_banks/num_2/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_2/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_2/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_2/concat_grad/Slice_1"
  input: "^gradients/conv1d_banks/num_2/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_2/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_3/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_3/concat_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_4/conv1d/conv1d/convolution/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  input: "conv1d_banks/num_4/conv1d/conv1d/convolution/ExpandDims_1"
  input: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\004\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv1d_banks/num_4/conv1d/conv1d/convolution/ExpandDims"
  input: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  input: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  op: "Shape"
  input: "prenet/dropout2/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\005\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_2/concat_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_2/conv1d/conv1d/convolution/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_2/concat_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_3/conv1d/conv1d/convolution/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  input: "conv1d_banks/num_3/conv1d/conv1d/convolution/ExpandDims_1"
  input: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\003\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv1d_banks/num_3/conv1d/conv1d/convolution/ExpandDims"
  input: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  input: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  op: "Shape"
  input: "prenet/dropout2/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\004\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/conv1d/conv1d/convolution/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv1d_banks/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  input: "conv1d_banks/conv1d/conv1d/convolution/ExpandDims_1"
  input: "gradients/conv1d_banks/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv1d_banks/conv1d/conv1d/convolution/ExpandDims"
  input: "gradients/conv1d_banks/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  input: "gradients/conv1d_banks/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/conv1d_banks/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv1d_banks/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  op: "Shape"
  input: "conv1d_banks/num_2/conv1d/conv1d/convolution/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Conv2D_grad/Shape"
  input: "conv1d_banks/num_2/conv1d/conv1d/convolution/ExpandDims_1"
  input: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv1d_banks/num_2/conv1d/conv1d/convolution/ExpandDims"
  input: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Conv2D_grad/Shape_1"
  input: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Squeeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  op: "Shape"
  input: "prenet/dropout2/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\003\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  op: "Shape"
  input: "prenet/dropout2/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  op: "Shape"
  input: "prenet/dropout2/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency"
  input: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/ExpandDims_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\226\000\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/Conv2D_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/ExpandDims_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/add_grad/tuple/control_dependency_1"
  input: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  input: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  input: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  input: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  input: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  input: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  input: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  input: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  input: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  input: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  input: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  input: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  input: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  input: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  input: "gradients/conv1d_banks/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  input: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/ExpandDims_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 17
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/mul_grad/Shape"
  op: "Shape"
  input: "prenet/dropout2/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "prenet/dropout2/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/prenet/dropout2/dropout/mul_grad/Shape"
  input: "gradients/prenet/dropout2/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/mul_grad/mul"
  op: "Mul"
  input: "gradients/AddN_17"
  input: "prenet/dropout2/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/prenet/dropout2/dropout/mul_grad/mul"
  input: "gradients/prenet/dropout2/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/prenet/dropout2/dropout/mul_grad/Sum"
  input: "gradients/prenet/dropout2/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "prenet/dropout2/dropout/div"
  input: "gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/prenet/dropout2/dropout/mul_grad/mul_1"
  input: "gradients/prenet/dropout2/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/prenet/dropout2/dropout/mul_grad/Sum_1"
  input: "gradients/prenet/dropout2/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/prenet/dropout2/dropout/mul_grad/Reshape"
  input: "^gradients/prenet/dropout2/dropout/mul_grad/Reshape_1"
}
node {
  name: "gradients/prenet/dropout2/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/prenet/dropout2/dropout/mul_grad/Reshape"
  input: "^gradients/prenet/dropout2/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/prenet/dropout2/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/prenet/dropout2/dropout/mul_grad/Reshape_1"
  input: "^gradients/prenet/dropout2/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/prenet/dropout2/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/div_grad/Shape"
  op: "Shape"
  input: "prenet/dense2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/prenet/dropout2/dropout/div_grad/Shape"
  input: "gradients/prenet/dropout2/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/prenet/dropout2/dropout/mul_grad/tuple/control_dependency"
  input: "prenet/dropout2/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/div_grad/Sum"
  op: "Sum"
  input: "gradients/prenet/dropout2/dropout/div_grad/RealDiv"
  input: "gradients/prenet/dropout2/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "gradients/prenet/dropout2/dropout/div_grad/Sum"
  input: "gradients/prenet/dropout2/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/div_grad/Neg"
  op: "Neg"
  input: "prenet/dense2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/prenet/dropout2/dropout/div_grad/Neg"
  input: "prenet/dropout2/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/prenet/dropout2/dropout/div_grad/RealDiv_1"
  input: "prenet/dropout2/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/div_grad/mul"
  op: "Mul"
  input: "gradients/prenet/dropout2/dropout/mul_grad/tuple/control_dependency"
  input: "gradients/prenet/dropout2/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "gradients/prenet/dropout2/dropout/div_grad/mul"
  input: "gradients/prenet/dropout2/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/prenet/dropout2/dropout/div_grad/Sum_1"
  input: "gradients/prenet/dropout2/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/prenet/dropout2/dropout/div_grad/Reshape"
  input: "^gradients/prenet/dropout2/dropout/div_grad/Reshape_1"
}
node {
  name: "gradients/prenet/dropout2/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/prenet/dropout2/dropout/div_grad/Reshape"
  input: "^gradients/prenet/dropout2/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/prenet/dropout2/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout2/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/prenet/dropout2/dropout/div_grad/Reshape_1"
  input: "^gradients/prenet/dropout2/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/prenet/dropout2/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/prenet/dropout2/dropout/div_grad/tuple/control_dependency"
  input: "prenet/dense2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/prenet/dense2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/prenet/dense2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/prenet/dense2/Relu_grad/ReluGrad"
  input: "^gradients/prenet/dense2/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/prenet/dense2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/prenet/dense2/Relu_grad/ReluGrad"
  input: "^gradients/prenet/dense2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/prenet/dense2/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/prenet/dense2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/prenet/dense2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/prenet/dense2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense2/Tensordot_grad/Shape"
  op: "Shape"
  input: "prenet/dense2/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/prenet/dense2/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/prenet/dense2/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/prenet/dense2/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense2/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/prenet/dense2/Tensordot_grad/Reshape"
  input: "prenet/dense2/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/prenet/dense2/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "prenet/dense2/Tensordot/Reshape"
  input: "gradients/prenet/dense2/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/prenet/dense2/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/prenet/dense2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/prenet/dense2/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/prenet/dense2/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/prenet/dense2/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/prenet/dense2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/prenet/dense2/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/prenet/dense2/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/prenet/dense2/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/prenet/dense2/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense2/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "prenet/dense2/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/prenet/dense2/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/prenet/dense2/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/prenet/dense2/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense2/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: ",\001\000\000\226\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/prenet/dense2/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/prenet/dense2/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/prenet/dense2/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense2/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "prenet/dense2/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense2/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/prenet/dense2/Tensordot/Reshape_grad/Reshape"
  input: "gradients/prenet/dense2/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense2/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "prenet/dense2/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense2/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/prenet/dense2/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/prenet/dense2/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/mul_grad/Shape"
  op: "Shape"
  input: "prenet/dropout1/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "prenet/dropout1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/prenet/dropout1/dropout/mul_grad/Shape"
  input: "gradients/prenet/dropout1/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/mul_grad/mul"
  op: "Mul"
  input: "gradients/prenet/dense2/Tensordot/transpose_grad/transpose"
  input: "prenet/dropout1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/mul_grad/Sum"
  op: "Sum"
  input: "gradients/prenet/dropout1/dropout/mul_grad/mul"
  input: "gradients/prenet/dropout1/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/prenet/dropout1/dropout/mul_grad/Sum"
  input: "gradients/prenet/dropout1/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "prenet/dropout1/dropout/div"
  input: "gradients/prenet/dense2/Tensordot/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/prenet/dropout1/dropout/mul_grad/mul_1"
  input: "gradients/prenet/dropout1/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/prenet/dropout1/dropout/mul_grad/Sum_1"
  input: "gradients/prenet/dropout1/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/prenet/dropout1/dropout/mul_grad/Reshape"
  input: "^gradients/prenet/dropout1/dropout/mul_grad/Reshape_1"
}
node {
  name: "gradients/prenet/dropout1/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/prenet/dropout1/dropout/mul_grad/Reshape"
  input: "^gradients/prenet/dropout1/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/prenet/dropout1/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/prenet/dropout1/dropout/mul_grad/Reshape_1"
  input: "^gradients/prenet/dropout1/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/prenet/dropout1/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/div_grad/Shape"
  op: "Shape"
  input: "prenet/dense1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/prenet/dropout1/dropout/div_grad/Shape"
  input: "gradients/prenet/dropout1/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/prenet/dropout1/dropout/mul_grad/tuple/control_dependency"
  input: "prenet/dropout1/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/div_grad/Sum"
  op: "Sum"
  input: "gradients/prenet/dropout1/dropout/div_grad/RealDiv"
  input: "gradients/prenet/dropout1/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "gradients/prenet/dropout1/dropout/div_grad/Sum"
  input: "gradients/prenet/dropout1/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/div_grad/Neg"
  op: "Neg"
  input: "prenet/dense1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/prenet/dropout1/dropout/div_grad/Neg"
  input: "prenet/dropout1/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/prenet/dropout1/dropout/div_grad/RealDiv_1"
  input: "prenet/dropout1/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/div_grad/mul"
  op: "Mul"
  input: "gradients/prenet/dropout1/dropout/mul_grad/tuple/control_dependency"
  input: "gradients/prenet/dropout1/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "gradients/prenet/dropout1/dropout/div_grad/mul"
  input: "gradients/prenet/dropout1/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/prenet/dropout1/dropout/div_grad/Sum_1"
  input: "gradients/prenet/dropout1/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/prenet/dropout1/dropout/div_grad/Reshape"
  input: "^gradients/prenet/dropout1/dropout/div_grad/Reshape_1"
}
node {
  name: "gradients/prenet/dropout1/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/prenet/dropout1/dropout/div_grad/Reshape"
  input: "^gradients/prenet/dropout1/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/prenet/dropout1/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dropout1/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/prenet/dropout1/dropout/div_grad/Reshape_1"
  input: "^gradients/prenet/dropout1/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/prenet/dropout1/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/prenet/dropout1/dropout/div_grad/tuple/control_dependency"
  input: "prenet/dense1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/prenet/dense1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/prenet/dense1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/prenet/dense1/Relu_grad/ReluGrad"
  input: "^gradients/prenet/dense1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/prenet/dense1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/prenet/dense1/Relu_grad/ReluGrad"
  input: "^gradients/prenet/dense1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/prenet/dense1/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/prenet/dense1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/prenet/dense1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/prenet/dense1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense1/Tensordot_grad/Shape"
  op: "Shape"
  input: "prenet/dense1/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/prenet/dense1/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "gradients/prenet/dense1/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/prenet/dense1/Tensordot_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense1/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/prenet/dense1/Tensordot_grad/Reshape"
  input: "prenet/dense1/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/prenet/dense1/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "prenet/dense1/Tensordot/Reshape"
  input: "gradients/prenet/dense1/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/prenet/dense1/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/prenet/dense1/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/prenet/dense1/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/prenet/dense1/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/prenet/dense1/Tensordot/MatMul_grad/MatMul"
  input: "^gradients/prenet/dense1/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/prenet/dense1/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense1/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/prenet/dense1/Tensordot/MatMul_grad/MatMul_1"
  input: "^gradients/prenet/dense1/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/prenet/dense1/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense1/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "prenet/dense1/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/prenet/dense1/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/prenet/dense1/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "gradients/prenet/dense1/Tensordot/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense1/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: ",\001\000\000,\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/prenet/dense1/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/prenet/dense1/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/prenet/dense1/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense1/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "prenet/dense1/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense1/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/prenet/dense1/Tensordot/Reshape_grad/Reshape"
  input: "gradients/prenet/dense1/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense1/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "prenet/dense1/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/prenet/dense1/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/prenet/dense1/Tensordot/Reshape_1_grad/Reshape"
  input: "gradients/prenet/dense1/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "+\000\000\000,\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/Size"
  op: "Size"
  input: "batch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/embedding_lookup_grad/Size"
  input: "gradients/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/embedding_lookup_grad/Shape"
  input: "gradients/embedding_lookup_grad/strided_slice/stack"
  input: "gradients/embedding_lookup_grad/strided_slice/stack_1"
  input: "gradients/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "gradients/embedding_lookup_grad/ExpandDims"
  input: "gradients/embedding_lookup_grad/strided_slice"
  input: "gradients/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "gradients/prenet/dense1/Tensordot/transpose_grad/transpose"
  input: "gradients/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "batch"
  input: "gradients/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/mod"
  op: "FloorMod"
  input: "emb_x/concat/axis"
  input: "gradients/emb_x/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000,\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "*\000\000\000,\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/Gather"
  op: "Gather"
  input: "gradients/emb_x/concat_grad/Shape"
  input: "gradients/emb_x/concat_grad/mod"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/add"
  op: "Add"
  input: "gradients/emb_x/concat_grad/Const"
  input: "gradients/emb_x/concat_grad/Gather"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/embedding_lookup_grad/Reshape_1"
  input: "gradients/emb_x/concat_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/Less"
  op: "Less"
  input: "gradients/embedding_lookup_grad/Reshape_1"
  input: "gradients/emb_x/concat_grad/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/LogicalAnd"
  op: "LogicalAnd"
  input: "gradients/emb_x/concat_grad/GreaterEqual"
  input: "gradients/emb_x/concat_grad/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/Where"
  op: "Where"
  input: "gradients/emb_x/concat_grad/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/Squeeze"
  op: "Squeeze"
  input: "gradients/emb_x/concat_grad/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/Gather_1"
  op: "Gather"
  input: "gradients/embedding_lookup_grad/Reshape_1"
  input: "gradients/emb_x/concat_grad/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/sub"
  op: "Sub"
  input: "gradients/emb_x/concat_grad/Gather_1"
  input: "gradients/emb_x/concat_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/Gather_2"
  op: "Gather"
  input: "gradients/embedding_lookup_grad/Reshape"
  input: "gradients/emb_x/concat_grad/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/Gather_3"
  op: "Gather"
  input: "gradients/emb_x/concat_grad/Shape_1"
  input: "gradients/emb_x/concat_grad/mod"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/add_1"
  op: "Add"
  input: "gradients/emb_x/concat_grad/add"
  input: "gradients/emb_x/concat_grad/Gather_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/GreaterEqual_1"
  op: "GreaterEqual"
  input: "gradients/embedding_lookup_grad/Reshape_1"
  input: "gradients/emb_x/concat_grad/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/Less_1"
  op: "Less"
  input: "gradients/embedding_lookup_grad/Reshape_1"
  input: "gradients/emb_x/concat_grad/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/LogicalAnd_1"
  op: "LogicalAnd"
  input: "gradients/emb_x/concat_grad/GreaterEqual_1"
  input: "gradients/emb_x/concat_grad/Less_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/Where_1"
  op: "Where"
  input: "gradients/emb_x/concat_grad/LogicalAnd_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/Squeeze_1"
  op: "Squeeze"
  input: "gradients/emb_x/concat_grad/Where_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/Gather_4"
  op: "Gather"
  input: "gradients/embedding_lookup_grad/Reshape_1"
  input: "gradients/emb_x/concat_grad/Squeeze_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/sub_1"
  op: "Sub"
  input: "gradients/emb_x/concat_grad/Gather_4"
  input: "gradients/emb_x/concat_grad/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/Gather_5"
  op: "Gather"
  input: "gradients/embedding_lookup_grad/Reshape"
  input: "gradients/emb_x/concat_grad/Squeeze_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/emb_x/concat_grad/Gather_2"
  input: "^gradients/emb_x/concat_grad/Gather_5"
}
node {
  name: "gradients/emb_x/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/emb_x/concat_grad/Gather_2"
  input: "^gradients/emb_x/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/emb_x/concat_grad/Gather_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/emb_x/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/emb_x/concat_grad/Gather_5"
  input: "^gradients/emb_x/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/emb_x/concat_grad/Gather_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/emb_x/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "+\000\000\000,\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/emb_x/strided_slice_grad/StridedSliceGrad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/emb_x/strided_slice_grad/StridedSliceGrad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/emb_x/strided_slice_grad/StridedSliceGrad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/emb_x/strided_slice_grad/StridedSliceGrad/strided_slice"
  op: "StridedSlice"
  input: "gradients/emb_x/concat_grad/Shape_1"
  input: "gradients/emb_x/strided_slice_grad/StridedSliceGrad/strided_slice/stack"
  input: "gradients/emb_x/strided_slice_grad/StridedSliceGrad/strided_slice/stack_1"
  input: "gradients/emb_x/strided_slice_grad/StridedSliceGrad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/emb_x/strided_slice_grad/StridedSliceGrad/dy"
  op: "UnsortedSegmentSum"
  input: "gradients/emb_x/concat_grad/tuple/control_dependency_1"
  input: "gradients/emb_x/concat_grad/sub_1"
  input: "gradients/emb_x/strided_slice_grad/StridedSliceGrad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/emb_x/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/emb_x/strided_slice_grad/Shape"
  input: "emb_x/strided_slice/stack"
  input: "emb_x/strided_slice/stack_1"
  input: "emb_x/strided_slice/stack_2"
  input: "gradients/emb_x/strided_slice_grad/StridedSliceGrad/dy"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 43
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "emb_x/lookup_table/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 43
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 43
          }
          dim {
            size: 300
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "emb_x/lookup_table/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 43
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 43
        }
        dim {
          size: 300
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "emb_x/lookup_table/Adam/Assign"
  op: "Assign"
  input: "emb_x/lookup_table/Adam"
  input: "emb_x/lookup_table/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 43
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "emb_x/lookup_table/Adam/read"
  op: "Identity"
  input: "emb_x/lookup_table/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 43
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "emb_x/lookup_table/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 43
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 43
          }
          dim {
            size: 300
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "emb_x/lookup_table/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 43
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 43
        }
        dim {
          size: 300
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "emb_x/lookup_table/Adam_1/Assign"
  op: "Assign"
  input: "emb_x/lookup_table/Adam_1"
  input: "emb_x/lookup_table/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 43
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "emb_x/lookup_table/Adam_1/read"
  op: "Identity"
  input: "emb_x/lookup_table/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 43
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "prenet/dense1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
        dim {
          size: 300
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "prenet/dense1/kernel/Adam/Assign"
  op: "Assign"
  input: "prenet/dense1/kernel/Adam"
  input: "prenet/dense1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "prenet/dense1/kernel/Adam/read"
  op: "Identity"
  input: "prenet/dense1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "prenet/dense1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
        dim {
          size: 300
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "prenet/dense1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "prenet/dense1/kernel/Adam_1"
  input: "prenet/dense1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "prenet/dense1/kernel/Adam_1/read"
  op: "Identity"
  input: "prenet/dense1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "prenet/dense1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "prenet/dense1/bias/Adam/Assign"
  op: "Assign"
  input: "prenet/dense1/bias/Adam"
  input: "prenet/dense1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "prenet/dense1/bias/Adam/read"
  op: "Identity"
  input: "prenet/dense1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "prenet/dense1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "prenet/dense1/bias/Adam_1/Assign"
  op: "Assign"
  input: "prenet/dense1/bias/Adam_1"
  input: "prenet/dense1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "prenet/dense1/bias/Adam_1/read"
  op: "Identity"
  input: "prenet/dense1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "prenet/dense2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "prenet/dense2/kernel/Adam/Assign"
  op: "Assign"
  input: "prenet/dense2/kernel/Adam"
  input: "prenet/dense2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "prenet/dense2/kernel/Adam/read"
  op: "Identity"
  input: "prenet/dense2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "prenet/dense2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "prenet/dense2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "prenet/dense2/kernel/Adam_1"
  input: "prenet/dense2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "prenet/dense2/kernel/Adam_1/read"
  op: "Identity"
  input: "prenet/dense2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "prenet/dense2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "prenet/dense2/bias/Adam/Assign"
  op: "Assign"
  input: "prenet/dense2/bias/Adam"
  input: "prenet/dense2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "prenet/dense2/bias/Adam/read"
  op: "Identity"
  input: "prenet/dense2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "prenet/dense2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "prenet/dense2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "prenet/dense2/bias/Adam_1/Assign"
  op: "Assign"
  input: "prenet/dense2/bias/Adam_1"
  input: "prenet/dense2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "prenet/dense2/bias/Adam_1/read"
  op: "Identity"
  input: "prenet/dense2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "conv1d_banks/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "conv1d_banks/conv1d/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "conv1d_banks/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/conv1d/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "conv1d_banks/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 9
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 9
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 11
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 11
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 14
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 14
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 15
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 15
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/normalize/beta/Adam/Assign"
  op: "Assign"
  input: "conv1d_banks/normalize/beta/Adam"
  input: "conv1d_banks/normalize/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/normalize/beta/Adam/read"
  op: "Identity"
  input: "conv1d_banks/normalize/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/normalize/beta/Adam_1/Assign"
  op: "Assign"
  input: "conv1d_banks/normalize/beta/Adam_1"
  input: "conv1d_banks/normalize/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/normalize/beta/Adam_1/read"
  op: "Identity"
  input: "conv1d_banks/normalize/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/normalize/gamma/Adam/Assign"
  op: "Assign"
  input: "conv1d_banks/normalize/gamma/Adam"
  input: "conv1d_banks/normalize/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/normalize/gamma/Adam/read"
  op: "Identity"
  input: "conv1d_banks/normalize/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_banks/normalize/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_banks/normalize/gamma/Adam_1/Assign"
  op: "Assign"
  input: "conv1d_banks/normalize/gamma/Adam_1"
  input: "conv1d_banks/normalize/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_banks/normalize/gamma/Adam_1/read"
  op: "Identity"
  input: "conv1d_banks/normalize/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_1/conv1d/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_1/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 2400
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_1/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "conv1d_1/conv1d/kernel/Adam"
  input: "conv1d_1/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_1/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "conv1d_1/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_1/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_1/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 2400
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_1/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "conv1d_1/conv1d/kernel/Adam_1"
  input: "conv1d_1/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_1/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "conv1d_1/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm1/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "norm1/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "norm1/beta/Adam/Assign"
  op: "Assign"
  input: "norm1/beta/Adam"
  input: "norm1/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "norm1/beta/Adam/read"
  op: "Identity"
  input: "norm1/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm1/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "norm1/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "norm1/beta/Adam_1/Assign"
  op: "Assign"
  input: "norm1/beta/Adam_1"
  input: "norm1/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "norm1/beta/Adam_1/read"
  op: "Identity"
  input: "norm1/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm1/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "norm1/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "norm1/gamma/Adam/Assign"
  op: "Assign"
  input: "norm1/gamma/Adam"
  input: "norm1/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "norm1/gamma/Adam/read"
  op: "Identity"
  input: "norm1/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm1/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "norm1/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "norm1/gamma/Adam_1/Assign"
  op: "Assign"
  input: "norm1/gamma/Adam_1"
  input: "norm1/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "norm1/gamma/Adam_1/read"
  op: "Identity"
  input: "norm1/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_2/conv1d/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_2/conv1d/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_2/conv1d/kernel/Adam/Assign"
  op: "Assign"
  input: "conv1d_2/conv1d/kernel/Adam"
  input: "conv1d_2/conv1d/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_2/conv1d/kernel/Adam/read"
  op: "Identity"
  input: "conv1d_2/conv1d/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "conv1d_2/conv1d/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1d_2/conv1d/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1d_2/conv1d/kernel/Adam_1/Assign"
  op: "Assign"
  input: "conv1d_2/conv1d/kernel/Adam_1"
  input: "conv1d_2/conv1d/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1d_2/conv1d/kernel/Adam_1/read"
  op: "Identity"
  input: "conv1d_2/conv1d/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm2/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "norm2/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "norm2/beta/Adam/Assign"
  op: "Assign"
  input: "norm2/beta/Adam"
  input: "norm2/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "norm2/beta/Adam/read"
  op: "Identity"
  input: "norm2/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm2/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "norm2/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "norm2/beta/Adam_1/Assign"
  op: "Assign"
  input: "norm2/beta/Adam_1"
  input: "norm2/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "norm2/beta/Adam_1/read"
  op: "Identity"
  input: "norm2/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm2/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "norm2/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "norm2/gamma/Adam/Assign"
  op: "Assign"
  input: "norm2/gamma/Adam"
  input: "norm2/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "norm2/gamma/Adam/read"
  op: "Identity"
  input: "norm2/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "norm2/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "norm2/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "norm2/gamma/Adam_1/Assign"
  op: "Assign"
  input: "norm2/gamma/Adam_1"
  input: "norm2/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "norm2/gamma/Adam_1/read"
  op: "Identity"
  input: "norm2/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_0/dense1/kernel/Adam/Assign"
  op: "Assign"
  input: "highwaynet_0/dense1/kernel/Adam"
  input: "highwaynet_0/dense1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_0/dense1/kernel/Adam/read"
  op: "Identity"
  input: "highwaynet_0/dense1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_0/dense1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "highwaynet_0/dense1/kernel/Adam_1"
  input: "highwaynet_0/dense1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_0/dense1/kernel/Adam_1/read"
  op: "Identity"
  input: "highwaynet_0/dense1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_0/dense1/bias/Adam/Assign"
  op: "Assign"
  input: "highwaynet_0/dense1/bias/Adam"
  input: "highwaynet_0/dense1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_0/dense1/bias/Adam/read"
  op: "Identity"
  input: "highwaynet_0/dense1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_0/dense1/bias/Adam_1/Assign"
  op: "Assign"
  input: "highwaynet_0/dense1/bias/Adam_1"
  input: "highwaynet_0/dense1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_0/dense1/bias/Adam_1/read"
  op: "Identity"
  input: "highwaynet_0/dense1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_0/dense2/kernel/Adam/Assign"
  op: "Assign"
  input: "highwaynet_0/dense2/kernel/Adam"
  input: "highwaynet_0/dense2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_0/dense2/kernel/Adam/read"
  op: "Identity"
  input: "highwaynet_0/dense2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_0/dense2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "highwaynet_0/dense2/kernel/Adam_1"
  input: "highwaynet_0/dense2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_0/dense2/kernel/Adam_1/read"
  op: "Identity"
  input: "highwaynet_0/dense2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_0/dense2/bias/Adam/Assign"
  op: "Assign"
  input: "highwaynet_0/dense2/bias/Adam"
  input: "highwaynet_0/dense2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_0/dense2/bias/Adam/read"
  op: "Identity"
  input: "highwaynet_0/dense2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_0/dense2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_0/dense2/bias/Adam_1/Assign"
  op: "Assign"
  input: "highwaynet_0/dense2/bias/Adam_1"
  input: "highwaynet_0/dense2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_0/dense2/bias/Adam_1/read"
  op: "Identity"
  input: "highwaynet_0/dense2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_1/dense1/kernel/Adam/Assign"
  op: "Assign"
  input: "highwaynet_1/dense1/kernel/Adam"
  input: "highwaynet_1/dense1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_1/dense1/kernel/Adam/read"
  op: "Identity"
  input: "highwaynet_1/dense1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_1/dense1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "highwaynet_1/dense1/kernel/Adam_1"
  input: "highwaynet_1/dense1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_1/dense1/kernel/Adam_1/read"
  op: "Identity"
  input: "highwaynet_1/dense1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_1/dense1/bias/Adam/Assign"
  op: "Assign"
  input: "highwaynet_1/dense1/bias/Adam"
  input: "highwaynet_1/dense1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_1/dense1/bias/Adam/read"
  op: "Identity"
  input: "highwaynet_1/dense1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_1/dense1/bias/Adam_1/Assign"
  op: "Assign"
  input: "highwaynet_1/dense1/bias/Adam_1"
  input: "highwaynet_1/dense1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_1/dense1/bias/Adam_1/read"
  op: "Identity"
  input: "highwaynet_1/dense1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_1/dense2/kernel/Adam/Assign"
  op: "Assign"
  input: "highwaynet_1/dense2/kernel/Adam"
  input: "highwaynet_1/dense2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_1/dense2/kernel/Adam/read"
  op: "Identity"
  input: "highwaynet_1/dense2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_1/dense2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "highwaynet_1/dense2/kernel/Adam_1"
  input: "highwaynet_1/dense2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_1/dense2/kernel/Adam_1/read"
  op: "Identity"
  input: "highwaynet_1/dense2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_1/dense2/bias/Adam/Assign"
  op: "Assign"
  input: "highwaynet_1/dense2/bias/Adam"
  input: "highwaynet_1/dense2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_1/dense2/bias/Adam/read"
  op: "Identity"
  input: "highwaynet_1/dense2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_1/dense2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_1/dense2/bias/Adam_1/Assign"
  op: "Assign"
  input: "highwaynet_1/dense2/bias/Adam_1"
  input: "highwaynet_1/dense2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_1/dense2/bias/Adam_1/read"
  op: "Identity"
  input: "highwaynet_1/dense2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_2/dense1/kernel/Adam/Assign"
  op: "Assign"
  input: "highwaynet_2/dense1/kernel/Adam"
  input: "highwaynet_2/dense1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_2/dense1/kernel/Adam/read"
  op: "Identity"
  input: "highwaynet_2/dense1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_2/dense1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "highwaynet_2/dense1/kernel/Adam_1"
  input: "highwaynet_2/dense1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_2/dense1/kernel/Adam_1/read"
  op: "Identity"
  input: "highwaynet_2/dense1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_2/dense1/bias/Adam/Assign"
  op: "Assign"
  input: "highwaynet_2/dense1/bias/Adam"
  input: "highwaynet_2/dense1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_2/dense1/bias/Adam/read"
  op: "Identity"
  input: "highwaynet_2/dense1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_2/dense1/bias/Adam_1/Assign"
  op: "Assign"
  input: "highwaynet_2/dense1/bias/Adam_1"
  input: "highwaynet_2/dense1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_2/dense1/bias/Adam_1/read"
  op: "Identity"
  input: "highwaynet_2/dense1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_2/dense2/kernel/Adam/Assign"
  op: "Assign"
  input: "highwaynet_2/dense2/kernel/Adam"
  input: "highwaynet_2/dense2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_2/dense2/kernel/Adam/read"
  op: "Identity"
  input: "highwaynet_2/dense2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_2/dense2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "highwaynet_2/dense2/kernel/Adam_1"
  input: "highwaynet_2/dense2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_2/dense2/kernel/Adam_1/read"
  op: "Identity"
  input: "highwaynet_2/dense2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_2/dense2/bias/Adam/Assign"
  op: "Assign"
  input: "highwaynet_2/dense2/bias/Adam"
  input: "highwaynet_2/dense2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_2/dense2/bias/Adam/read"
  op: "Identity"
  input: "highwaynet_2/dense2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_2/dense2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_2/dense2/bias/Adam_1/Assign"
  op: "Assign"
  input: "highwaynet_2/dense2/bias/Adam_1"
  input: "highwaynet_2/dense2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_2/dense2/bias/Adam_1/read"
  op: "Identity"
  input: "highwaynet_2/dense2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_3/dense1/kernel/Adam/Assign"
  op: "Assign"
  input: "highwaynet_3/dense1/kernel/Adam"
  input: "highwaynet_3/dense1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_3/dense1/kernel/Adam/read"
  op: "Identity"
  input: "highwaynet_3/dense1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_3/dense1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "highwaynet_3/dense1/kernel/Adam_1"
  input: "highwaynet_3/dense1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_3/dense1/kernel/Adam_1/read"
  op: "Identity"
  input: "highwaynet_3/dense1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_3/dense1/bias/Adam/Assign"
  op: "Assign"
  input: "highwaynet_3/dense1/bias/Adam"
  input: "highwaynet_3/dense1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_3/dense1/bias/Adam/read"
  op: "Identity"
  input: "highwaynet_3/dense1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_3/dense1/bias/Adam_1/Assign"
  op: "Assign"
  input: "highwaynet_3/dense1/bias/Adam_1"
  input: "highwaynet_3/dense1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_3/dense1/bias/Adam_1/read"
  op: "Identity"
  input: "highwaynet_3/dense1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_3/dense2/kernel/Adam/Assign"
  op: "Assign"
  input: "highwaynet_3/dense2/kernel/Adam"
  input: "highwaynet_3/dense2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_3/dense2/kernel/Adam/read"
  op: "Identity"
  input: "highwaynet_3/dense2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_3/dense2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "highwaynet_3/dense2/kernel/Adam_1"
  input: "highwaynet_3/dense2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_3/dense2/kernel/Adam_1/read"
  op: "Identity"
  input: "highwaynet_3/dense2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_3/dense2/bias/Adam/Assign"
  op: "Assign"
  input: "highwaynet_3/dense2/bias/Adam"
  input: "highwaynet_3/dense2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_3/dense2/bias/Adam/read"
  op: "Identity"
  input: "highwaynet_3/dense2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "highwaynet_3/dense2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "highwaynet_3/dense2/bias/Adam_1/Assign"
  op: "Assign"
  input: "highwaynet_3/dense2/bias/Adam_1"
  input: "highwaynet_3/dense2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "highwaynet_3/dense2/bias/Adam_1/read"
  op: "Identity"
  input: "highwaynet_3/dense2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
        dim {
          size: 300
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
        dim {
          size: 300
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
        dim {
          size: 300
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
        dim {
          size: 300
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 150
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 150
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
        dim {
          size: 73
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/kernel/Adam/Assign"
  op: "Assign"
  input: "dense/kernel/Adam"
  input: "dense/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/kernel/Adam/read"
  op: "Identity"
  input: "dense/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 300
        }
        dim {
          size: 73
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "dense/kernel/Adam_1/Assign"
  op: "Assign"
  input: "dense/kernel/Adam_1"
  input: "dense/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "dense/kernel/Adam_1/read"
  op: "Identity"
  input: "dense/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
}
node {
  name: "Adam/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_emb_x/lookup_table/ApplyAdam"
  op: "ApplyAdam"
  input: "emb_x/lookup_table"
  input: "emb_x/lookup_table/Adam"
  input: "emb_x/lookup_table/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/emb_x/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 43
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_prenet/dense1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "prenet/dense1/kernel"
  input: "prenet/dense1/kernel/Adam"
  input: "prenet/dense1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/prenet/dense1/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_prenet/dense1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "prenet/dense1/bias"
  input: "prenet/dense1/bias/Adam"
  input: "prenet/dense1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/prenet/dense1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_prenet/dense2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "prenet/dense2/kernel"
  input: "prenet/dense2/kernel/Adam"
  input: "prenet/dense2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/prenet/dense2/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_prenet/dense2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "prenet/dense2/bias"
  input: "prenet/dense2/bias/Adam"
  input: "prenet/dense2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/prenet/dense2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv1d_banks/conv1d/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1d_banks/conv1d/conv1d/kernel"
  input: "conv1d_banks/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/conv1d/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv1d_banks/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv1d_banks/num_2/conv1d/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv1d_banks/num_2/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv1d_banks/num_3/conv1d/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv1d_banks/num_3/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv1d_banks/num_4/conv1d/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv1d_banks/num_4/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv1d_banks/num_5/conv1d/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv1d_banks/num_5/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv1d_banks/num_6/conv1d/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv1d_banks/num_6/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv1d_banks/num_7/conv1d/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv1d_banks/num_7/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv1d_banks/num_8/conv1d/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv1d_banks/num_8/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv1d_banks/num_9/conv1d/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv1d_banks/num_9/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv1d_banks/num_10/conv1d/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv1d_banks/num_10/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv1d_banks/num_11/conv1d/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv1d_banks/num_11/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv1d_banks/num_12/conv1d/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv1d_banks/num_12/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv1d_banks/num_13/conv1d/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv1d_banks/num_13/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv1d_banks/num_14/conv1d/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv1d_banks/num_14/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv1d_banks/num_15/conv1d/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv1d_banks/num_15/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv1d_banks/num_16/conv1d/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv1d_banks/num_16/conv1d/conv1d/convolution/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv1d_banks/normalize/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1d_banks/normalize/beta"
  input: "conv1d_banks/normalize/beta/Adam"
  input: "conv1d_banks/normalize/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv1d_banks/normalize/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv1d_banks/normalize/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1d_banks/normalize/gamma"
  input: "conv1d_banks/normalize/gamma/Adam"
  input: "conv1d_banks/normalize/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv1d_banks/normalize/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv1d_1/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1d_1/conv1d/kernel"
  input: "conv1d_1/conv1d/kernel/Adam"
  input: "conv1d_1/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv1d_1/conv1d/convolution/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_norm1/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "norm1/beta"
  input: "norm1/beta/Adam"
  input: "norm1/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/norm1/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_norm1/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "norm1/gamma"
  input: "norm1/gamma/Adam"
  input: "norm1/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/norm1/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_conv1d_2/conv1d/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1d_2/conv1d/kernel"
  input: "conv1d_2/conv1d/kernel/Adam"
  input: "conv1d_2/conv1d/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/conv1d_2/conv1d/convolution/ExpandDims_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_norm2/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "norm2/beta"
  input: "norm2/beta/Adam"
  input: "norm2/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/norm2/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_norm2/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "norm2/gamma"
  input: "norm2/gamma/Adam"
  input: "norm2/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/norm2/FusedBatchNorm_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_highwaynet_0/dense1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "highwaynet_0/dense1/kernel"
  input: "highwaynet_0/dense1/kernel/Adam"
  input: "highwaynet_0/dense1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/highwaynet_0/dense1/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_highwaynet_0/dense1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "highwaynet_0/dense1/bias"
  input: "highwaynet_0/dense1/bias/Adam"
  input: "highwaynet_0/dense1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/highwaynet_0/dense1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_highwaynet_0/dense2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "highwaynet_0/dense2/kernel"
  input: "highwaynet_0/dense2/kernel/Adam"
  input: "highwaynet_0/dense2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/highwaynet_0/dense2/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_highwaynet_0/dense2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "highwaynet_0/dense2/bias"
  input: "highwaynet_0/dense2/bias/Adam"
  input: "highwaynet_0/dense2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/highwaynet_0/dense2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_highwaynet_1/dense1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "highwaynet_1/dense1/kernel"
  input: "highwaynet_1/dense1/kernel/Adam"
  input: "highwaynet_1/dense1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/highwaynet_1/dense1/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_highwaynet_1/dense1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "highwaynet_1/dense1/bias"
  input: "highwaynet_1/dense1/bias/Adam"
  input: "highwaynet_1/dense1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/highwaynet_1/dense1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_highwaynet_1/dense2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "highwaynet_1/dense2/kernel"
  input: "highwaynet_1/dense2/kernel/Adam"
  input: "highwaynet_1/dense2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/highwaynet_1/dense2/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_highwaynet_1/dense2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "highwaynet_1/dense2/bias"
  input: "highwaynet_1/dense2/bias/Adam"
  input: "highwaynet_1/dense2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/highwaynet_1/dense2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_highwaynet_2/dense1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "highwaynet_2/dense1/kernel"
  input: "highwaynet_2/dense1/kernel/Adam"
  input: "highwaynet_2/dense1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/highwaynet_2/dense1/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_highwaynet_2/dense1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "highwaynet_2/dense1/bias"
  input: "highwaynet_2/dense1/bias/Adam"
  input: "highwaynet_2/dense1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/highwaynet_2/dense1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_highwaynet_2/dense2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "highwaynet_2/dense2/kernel"
  input: "highwaynet_2/dense2/kernel/Adam"
  input: "highwaynet_2/dense2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/highwaynet_2/dense2/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_highwaynet_2/dense2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "highwaynet_2/dense2/bias"
  input: "highwaynet_2/dense2/bias/Adam"
  input: "highwaynet_2/dense2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/highwaynet_2/dense2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_highwaynet_3/dense1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "highwaynet_3/dense1/kernel"
  input: "highwaynet_3/dense1/kernel/Adam"
  input: "highwaynet_3/dense1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/highwaynet_3/dense1/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_highwaynet_3/dense1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "highwaynet_3/dense1/bias"
  input: "highwaynet_3/dense1/bias/Adam"
  input: "highwaynet_3/dense1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/highwaynet_3/dense1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_highwaynet_3/dense2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "highwaynet_3/dense2/kernel"
  input: "highwaynet_3/dense2/kernel/Adam"
  input: "highwaynet_3/dense2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/highwaynet_3/dense2/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_highwaynet_3/dense2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "highwaynet_3/dense2/bias"
  input: "highwaynet_3/dense2/bias/Adam"
  input: "highwaynet_3/dense2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/highwaynet_3/dense2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_gru1/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/gru1/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_gru1/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/gru1/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_dense/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "dense/kernel"
  input: "dense/kernel/Adam"
  input: "dense/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/dense/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "Adam/beta1"
  input: "^Adam/update_emb_x/lookup_table/ApplyAdam"
  input: "^Adam/update_prenet/dense1/kernel/ApplyAdam"
  input: "^Adam/update_prenet/dense1/bias/ApplyAdam"
  input: "^Adam/update_prenet/dense2/kernel/ApplyAdam"
  input: "^Adam/update_prenet/dense2/bias/ApplyAdam"
  input: "^Adam/update_conv1d_banks/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_2/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_3/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_4/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_5/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_6/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_7/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_8/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_9/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_10/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_11/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_12/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_13/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_14/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_15/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_16/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/normalize/beta/ApplyAdam"
  input: "^Adam/update_conv1d_banks/normalize/gamma/ApplyAdam"
  input: "^Adam/update_conv1d_1/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_norm1/beta/ApplyAdam"
  input: "^Adam/update_norm1/gamma/ApplyAdam"
  input: "^Adam/update_conv1d_2/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_norm2/beta/ApplyAdam"
  input: "^Adam/update_norm2/gamma/ApplyAdam"
  input: "^Adam/update_highwaynet_0/dense1/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_0/dense1/bias/ApplyAdam"
  input: "^Adam/update_highwaynet_0/dense2/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_0/dense2/bias/ApplyAdam"
  input: "^Adam/update_highwaynet_1/dense1/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_1/dense1/bias/ApplyAdam"
  input: "^Adam/update_highwaynet_1/dense2/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_1/dense2/bias/ApplyAdam"
  input: "^Adam/update_highwaynet_2/dense1/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_2/dense1/bias/ApplyAdam"
  input: "^Adam/update_highwaynet_2/dense2/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_2/dense2/bias/ApplyAdam"
  input: "^Adam/update_highwaynet_3/dense1/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_3/dense1/bias/ApplyAdam"
  input: "^Adam/update_highwaynet_3/dense2/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_3/dense2/bias/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  input: "^Adam/update_dense/kernel/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "Adam/beta2"
  input: "^Adam/update_emb_x/lookup_table/ApplyAdam"
  input: "^Adam/update_prenet/dense1/kernel/ApplyAdam"
  input: "^Adam/update_prenet/dense1/bias/ApplyAdam"
  input: "^Adam/update_prenet/dense2/kernel/ApplyAdam"
  input: "^Adam/update_prenet/dense2/bias/ApplyAdam"
  input: "^Adam/update_conv1d_banks/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_2/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_3/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_4/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_5/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_6/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_7/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_8/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_9/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_10/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_11/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_12/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_13/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_14/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_15/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_16/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/normalize/beta/ApplyAdam"
  input: "^Adam/update_conv1d_banks/normalize/gamma/ApplyAdam"
  input: "^Adam/update_conv1d_1/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_norm1/beta/ApplyAdam"
  input: "^Adam/update_norm1/gamma/ApplyAdam"
  input: "^Adam/update_conv1d_2/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_norm2/beta/ApplyAdam"
  input: "^Adam/update_norm2/gamma/ApplyAdam"
  input: "^Adam/update_highwaynet_0/dense1/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_0/dense1/bias/ApplyAdam"
  input: "^Adam/update_highwaynet_0/dense2/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_0/dense2/bias/ApplyAdam"
  input: "^Adam/update_highwaynet_1/dense1/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_1/dense1/bias/ApplyAdam"
  input: "^Adam/update_highwaynet_1/dense2/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_1/dense2/bias/ApplyAdam"
  input: "^Adam/update_highwaynet_2/dense1/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_2/dense1/bias/ApplyAdam"
  input: "^Adam/update_highwaynet_2/dense2/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_2/dense2/bias/ApplyAdam"
  input: "^Adam/update_highwaynet_3/dense1/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_3/dense1/bias/ApplyAdam"
  input: "^Adam/update_highwaynet_3/dense2/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_3/dense2/bias/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  input: "^Adam/update_dense/kernel/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update"
  op: "NoOp"
  input: "^Adam/update_emb_x/lookup_table/ApplyAdam"
  input: "^Adam/update_prenet/dense1/kernel/ApplyAdam"
  input: "^Adam/update_prenet/dense1/bias/ApplyAdam"
  input: "^Adam/update_prenet/dense2/kernel/ApplyAdam"
  input: "^Adam/update_prenet/dense2/bias/ApplyAdam"
  input: "^Adam/update_conv1d_banks/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_2/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_3/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_4/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_5/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_6/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_7/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_8/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_9/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_10/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_11/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_12/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_13/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_14/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_15/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/num_16/conv1d/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_conv1d_banks/normalize/beta/ApplyAdam"
  input: "^Adam/update_conv1d_banks/normalize/gamma/ApplyAdam"
  input: "^Adam/update_conv1d_1/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_norm1/beta/ApplyAdam"
  input: "^Adam/update_norm1/gamma/ApplyAdam"
  input: "^Adam/update_conv1d_2/conv1d/kernel/ApplyAdam"
  input: "^Adam/update_norm2/beta/ApplyAdam"
  input: "^Adam/update_norm2/gamma/ApplyAdam"
  input: "^Adam/update_highwaynet_0/dense1/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_0/dense1/bias/ApplyAdam"
  input: "^Adam/update_highwaynet_0/dense2/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_0/dense2/bias/ApplyAdam"
  input: "^Adam/update_highwaynet_1/dense1/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_1/dense1/bias/ApplyAdam"
  input: "^Adam/update_highwaynet_1/dense2/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_1/dense2/bias/ApplyAdam"
  input: "^Adam/update_highwaynet_2/dense1/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_2/dense1/bias/ApplyAdam"
  input: "^Adam/update_highwaynet_2/dense2/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_2/dense2/bias/ApplyAdam"
  input: "^Adam/update_highwaynet_3/dense1/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_3/dense1/bias/ApplyAdam"
  input: "^Adam/update_highwaynet_3/dense2/kernel/ApplyAdam"
  input: "^Adam/update_highwaynet_3/dense2/bias/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^Adam/update_gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  input: "^Adam/update_dense/kernel/ApplyAdam"
  input: "^Adam/Assign"
  input: "^Adam/Assign_1"
}
node {
  name: "Adam/value"
  op: "Const"
  input: "^Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "mean_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "mean_loss"
      }
    }
  }
}
node {
  name: "mean_loss"
  op: "ScalarSummary"
  input: "mean_loss/tags"
  input: "truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "acc/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "acc"
      }
    }
  }
}
node {
  name: "acc"
  op: "ScalarSummary"
  input: "acc/tags"
  input: "truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "input_producer/input_producer/fraction_of_32_full"
  input: "batch/fraction_of_12800_full"
  input: "mean_loss"
  input: "acc"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "emb_x/lookup_table"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "prenet/dense1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "prenet/dense1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "prenet/dense2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "prenet/dense2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "conv1d_banks/conv1d/conv1d/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "conv1d_banks/normalize/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "conv1d_banks/normalize/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "conv1d_banks/normalize/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "conv1d_banks/normalize/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "conv1d_1/conv1d/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "norm1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "norm1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "norm1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "norm1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "norm1/norm1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "norm1/norm1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "conv1d_2/conv1d/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "norm2/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "norm2/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "norm2/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "norm2/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "norm2/norm2/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "norm2/norm2/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "highwaynet_0/dense1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "highwaynet_0/dense1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "highwaynet_0/dense2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "highwaynet_0/dense2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "highwaynet_1/dense1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "highwaynet_1/dense1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "highwaynet_1/dense2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "highwaynet_1/dense2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "highwaynet_2/dense1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "highwaynet_2/dense1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "highwaynet_2/dense2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "highwaynet_2/dense2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "highwaynet_3/dense1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "highwaynet_3/dense1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "highwaynet_3/dense2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "highwaynet_3/dense2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "dense/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "emb_x/lookup_table/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "emb_x/lookup_table/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "prenet/dense1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "prenet/dense1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "prenet/dense1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "prenet/dense1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "prenet/dense2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "prenet/dense2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "prenet/dense2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "prenet/dense2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "conv1d_banks/conv1d/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "conv1d_banks/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_97"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_98"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_99"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_100"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_101"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_102"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_103"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_104"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_105"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_106"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_107"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_108"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_109"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_110"
  op: "IsVariableInitialized"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_111"
  op: "IsVariableInitialized"
  input: "conv1d_banks/normalize/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_112"
  op: "IsVariableInitialized"
  input: "conv1d_banks/normalize/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_113"
  op: "IsVariableInitialized"
  input: "conv1d_banks/normalize/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_114"
  op: "IsVariableInitialized"
  input: "conv1d_banks/normalize/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_115"
  op: "IsVariableInitialized"
  input: "conv1d_1/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_116"
  op: "IsVariableInitialized"
  input: "conv1d_1/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_117"
  op: "IsVariableInitialized"
  input: "norm1/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_118"
  op: "IsVariableInitialized"
  input: "norm1/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_119"
  op: "IsVariableInitialized"
  input: "norm1/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_120"
  op: "IsVariableInitialized"
  input: "norm1/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_121"
  op: "IsVariableInitialized"
  input: "conv1d_2/conv1d/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_122"
  op: "IsVariableInitialized"
  input: "conv1d_2/conv1d/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_123"
  op: "IsVariableInitialized"
  input: "norm2/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_124"
  op: "IsVariableInitialized"
  input: "norm2/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_125"
  op: "IsVariableInitialized"
  input: "norm2/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_126"
  op: "IsVariableInitialized"
  input: "norm2/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_127"
  op: "IsVariableInitialized"
  input: "highwaynet_0/dense1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_128"
  op: "IsVariableInitialized"
  input: "highwaynet_0/dense1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_129"
  op: "IsVariableInitialized"
  input: "highwaynet_0/dense1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_130"
  op: "IsVariableInitialized"
  input: "highwaynet_0/dense1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_131"
  op: "IsVariableInitialized"
  input: "highwaynet_0/dense2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_132"
  op: "IsVariableInitialized"
  input: "highwaynet_0/dense2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_133"
  op: "IsVariableInitialized"
  input: "highwaynet_0/dense2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_134"
  op: "IsVariableInitialized"
  input: "highwaynet_0/dense2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_135"
  op: "IsVariableInitialized"
  input: "highwaynet_1/dense1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_136"
  op: "IsVariableInitialized"
  input: "highwaynet_1/dense1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_137"
  op: "IsVariableInitialized"
  input: "highwaynet_1/dense1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_138"
  op: "IsVariableInitialized"
  input: "highwaynet_1/dense1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_139"
  op: "IsVariableInitialized"
  input: "highwaynet_1/dense2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_140"
  op: "IsVariableInitialized"
  input: "highwaynet_1/dense2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_141"
  op: "IsVariableInitialized"
  input: "highwaynet_1/dense2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_142"
  op: "IsVariableInitialized"
  input: "highwaynet_1/dense2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_143"
  op: "IsVariableInitialized"
  input: "highwaynet_2/dense1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_144"
  op: "IsVariableInitialized"
  input: "highwaynet_2/dense1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_145"
  op: "IsVariableInitialized"
  input: "highwaynet_2/dense1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_146"
  op: "IsVariableInitialized"
  input: "highwaynet_2/dense1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_147"
  op: "IsVariableInitialized"
  input: "highwaynet_2/dense2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_148"
  op: "IsVariableInitialized"
  input: "highwaynet_2/dense2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_149"
  op: "IsVariableInitialized"
  input: "highwaynet_2/dense2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_150"
  op: "IsVariableInitialized"
  input: "highwaynet_2/dense2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_151"
  op: "IsVariableInitialized"
  input: "highwaynet_3/dense1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_152"
  op: "IsVariableInitialized"
  input: "highwaynet_3/dense1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_153"
  op: "IsVariableInitialized"
  input: "highwaynet_3/dense1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_154"
  op: "IsVariableInitialized"
  input: "highwaynet_3/dense1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_155"
  op: "IsVariableInitialized"
  input: "highwaynet_3/dense2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_156"
  op: "IsVariableInitialized"
  input: "highwaynet_3/dense2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_157"
  op: "IsVariableInitialized"
  input: "highwaynet_3/dense2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_158"
  op: "IsVariableInitialized"
  input: "highwaynet_3/dense2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_159"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_160"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_161"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_162"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_163"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_164"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_165"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_166"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_167"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_168"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_169"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_170"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_171"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_172"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_173"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_174"
  op: "IsVariableInitialized"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_175"
  op: "IsVariableInitialized"
  input: "dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_176"
  op: "IsVariableInitialized"
  input: "dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  input: "report_uninitialized_variables/IsVariableInitialized_71"
  input: "report_uninitialized_variables/IsVariableInitialized_72"
  input: "report_uninitialized_variables/IsVariableInitialized_73"
  input: "report_uninitialized_variables/IsVariableInitialized_74"
  input: "report_uninitialized_variables/IsVariableInitialized_75"
  input: "report_uninitialized_variables/IsVariableInitialized_76"
  input: "report_uninitialized_variables/IsVariableInitialized_77"
  input: "report_uninitialized_variables/IsVariableInitialized_78"
  input: "report_uninitialized_variables/IsVariableInitialized_79"
  input: "report_uninitialized_variables/IsVariableInitialized_80"
  input: "report_uninitialized_variables/IsVariableInitialized_81"
  input: "report_uninitialized_variables/IsVariableInitialized_82"
  input: "report_uninitialized_variables/IsVariableInitialized_83"
  input: "report_uninitialized_variables/IsVariableInitialized_84"
  input: "report_uninitialized_variables/IsVariableInitialized_85"
  input: "report_uninitialized_variables/IsVariableInitialized_86"
  input: "report_uninitialized_variables/IsVariableInitialized_87"
  input: "report_uninitialized_variables/IsVariableInitialized_88"
  input: "report_uninitialized_variables/IsVariableInitialized_89"
  input: "report_uninitialized_variables/IsVariableInitialized_90"
  input: "report_uninitialized_variables/IsVariableInitialized_91"
  input: "report_uninitialized_variables/IsVariableInitialized_92"
  input: "report_uninitialized_variables/IsVariableInitialized_93"
  input: "report_uninitialized_variables/IsVariableInitialized_94"
  input: "report_uninitialized_variables/IsVariableInitialized_95"
  input: "report_uninitialized_variables/IsVariableInitialized_96"
  input: "report_uninitialized_variables/IsVariableInitialized_97"
  input: "report_uninitialized_variables/IsVariableInitialized_98"
  input: "report_uninitialized_variables/IsVariableInitialized_99"
  input: "report_uninitialized_variables/IsVariableInitialized_100"
  input: "report_uninitialized_variables/IsVariableInitialized_101"
  input: "report_uninitialized_variables/IsVariableInitialized_102"
  input: "report_uninitialized_variables/IsVariableInitialized_103"
  input: "report_uninitialized_variables/IsVariableInitialized_104"
  input: "report_uninitialized_variables/IsVariableInitialized_105"
  input: "report_uninitialized_variables/IsVariableInitialized_106"
  input: "report_uninitialized_variables/IsVariableInitialized_107"
  input: "report_uninitialized_variables/IsVariableInitialized_108"
  input: "report_uninitialized_variables/IsVariableInitialized_109"
  input: "report_uninitialized_variables/IsVariableInitialized_110"
  input: "report_uninitialized_variables/IsVariableInitialized_111"
  input: "report_uninitialized_variables/IsVariableInitialized_112"
  input: "report_uninitialized_variables/IsVariableInitialized_113"
  input: "report_uninitialized_variables/IsVariableInitialized_114"
  input: "report_uninitialized_variables/IsVariableInitialized_115"
  input: "report_uninitialized_variables/IsVariableInitialized_116"
  input: "report_uninitialized_variables/IsVariableInitialized_117"
  input: "report_uninitialized_variables/IsVariableInitialized_118"
  input: "report_uninitialized_variables/IsVariableInitialized_119"
  input: "report_uninitialized_variables/IsVariableInitialized_120"
  input: "report_uninitialized_variables/IsVariableInitialized_121"
  input: "report_uninitialized_variables/IsVariableInitialized_122"
  input: "report_uninitialized_variables/IsVariableInitialized_123"
  input: "report_uninitialized_variables/IsVariableInitialized_124"
  input: "report_uninitialized_variables/IsVariableInitialized_125"
  input: "report_uninitialized_variables/IsVariableInitialized_126"
  input: "report_uninitialized_variables/IsVariableInitialized_127"
  input: "report_uninitialized_variables/IsVariableInitialized_128"
  input: "report_uninitialized_variables/IsVariableInitialized_129"
  input: "report_uninitialized_variables/IsVariableInitialized_130"
  input: "report_uninitialized_variables/IsVariableInitialized_131"
  input: "report_uninitialized_variables/IsVariableInitialized_132"
  input: "report_uninitialized_variables/IsVariableInitialized_133"
  input: "report_uninitialized_variables/IsVariableInitialized_134"
  input: "report_uninitialized_variables/IsVariableInitialized_135"
  input: "report_uninitialized_variables/IsVariableInitialized_136"
  input: "report_uninitialized_variables/IsVariableInitialized_137"
  input: "report_uninitialized_variables/IsVariableInitialized_138"
  input: "report_uninitialized_variables/IsVariableInitialized_139"
  input: "report_uninitialized_variables/IsVariableInitialized_140"
  input: "report_uninitialized_variables/IsVariableInitialized_141"
  input: "report_uninitialized_variables/IsVariableInitialized_142"
  input: "report_uninitialized_variables/IsVariableInitialized_143"
  input: "report_uninitialized_variables/IsVariableInitialized_144"
  input: "report_uninitialized_variables/IsVariableInitialized_145"
  input: "report_uninitialized_variables/IsVariableInitialized_146"
  input: "report_uninitialized_variables/IsVariableInitialized_147"
  input: "report_uninitialized_variables/IsVariableInitialized_148"
  input: "report_uninitialized_variables/IsVariableInitialized_149"
  input: "report_uninitialized_variables/IsVariableInitialized_150"
  input: "report_uninitialized_variables/IsVariableInitialized_151"
  input: "report_uninitialized_variables/IsVariableInitialized_152"
  input: "report_uninitialized_variables/IsVariableInitialized_153"
  input: "report_uninitialized_variables/IsVariableInitialized_154"
  input: "report_uninitialized_variables/IsVariableInitialized_155"
  input: "report_uninitialized_variables/IsVariableInitialized_156"
  input: "report_uninitialized_variables/IsVariableInitialized_157"
  input: "report_uninitialized_variables/IsVariableInitialized_158"
  input: "report_uninitialized_variables/IsVariableInitialized_159"
  input: "report_uninitialized_variables/IsVariableInitialized_160"
  input: "report_uninitialized_variables/IsVariableInitialized_161"
  input: "report_uninitialized_variables/IsVariableInitialized_162"
  input: "report_uninitialized_variables/IsVariableInitialized_163"
  input: "report_uninitialized_variables/IsVariableInitialized_164"
  input: "report_uninitialized_variables/IsVariableInitialized_165"
  input: "report_uninitialized_variables/IsVariableInitialized_166"
  input: "report_uninitialized_variables/IsVariableInitialized_167"
  input: "report_uninitialized_variables/IsVariableInitialized_168"
  input: "report_uninitialized_variables/IsVariableInitialized_169"
  input: "report_uninitialized_variables/IsVariableInitialized_170"
  input: "report_uninitialized_variables/IsVariableInitialized_171"
  input: "report_uninitialized_variables/IsVariableInitialized_172"
  input: "report_uninitialized_variables/IsVariableInitialized_173"
  input: "report_uninitialized_variables/IsVariableInitialized_174"
  input: "report_uninitialized_variables/IsVariableInitialized_175"
  input: "report_uninitialized_variables/IsVariableInitialized_176"
  attr {
    key: "N"
    value {
      i: 177
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 177
          }
        }
        string_val: "emb_x/lookup_table"
        string_val: "prenet/dense1/kernel"
        string_val: "prenet/dense1/bias"
        string_val: "prenet/dense2/kernel"
        string_val: "prenet/dense2/bias"
        string_val: "conv1d_banks/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_2/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_3/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_4/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_5/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_6/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_7/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_8/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_9/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_10/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_11/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_12/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_13/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_14/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_15/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_16/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/normalize/beta"
        string_val: "conv1d_banks/normalize/gamma"
        string_val: "conv1d_banks/normalize/moving_mean"
        string_val: "conv1d_banks/normalize/moving_variance"
        string_val: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/biased"
        string_val: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/local_step"
        string_val: "conv1d_1/conv1d/kernel"
        string_val: "norm1/beta"
        string_val: "norm1/gamma"
        string_val: "norm1/moving_mean"
        string_val: "norm1/moving_variance"
        string_val: "norm1/norm1/moving_mean/biased"
        string_val: "norm1/norm1/moving_mean/local_step"
        string_val: "conv1d_2/conv1d/kernel"
        string_val: "norm2/beta"
        string_val: "norm2/gamma"
        string_val: "norm2/moving_mean"
        string_val: "norm2/moving_variance"
        string_val: "norm2/norm2/moving_mean/biased"
        string_val: "norm2/norm2/moving_mean/local_step"
        string_val: "highwaynet_0/dense1/kernel"
        string_val: "highwaynet_0/dense1/bias"
        string_val: "highwaynet_0/dense2/kernel"
        string_val: "highwaynet_0/dense2/bias"
        string_val: "highwaynet_1/dense1/kernel"
        string_val: "highwaynet_1/dense1/bias"
        string_val: "highwaynet_1/dense2/kernel"
        string_val: "highwaynet_1/dense2/bias"
        string_val: "highwaynet_2/dense1/kernel"
        string_val: "highwaynet_2/dense1/bias"
        string_val: "highwaynet_2/dense2/kernel"
        string_val: "highwaynet_2/dense2/bias"
        string_val: "highwaynet_3/dense1/kernel"
        string_val: "highwaynet_3/dense1/bias"
        string_val: "highwaynet_3/dense2/kernel"
        string_val: "highwaynet_3/dense2/bias"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
        string_val: "dense/kernel"
        string_val: "global_step"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "emb_x/lookup_table/Adam"
        string_val: "emb_x/lookup_table/Adam_1"
        string_val: "prenet/dense1/kernel/Adam"
        string_val: "prenet/dense1/kernel/Adam_1"
        string_val: "prenet/dense1/bias/Adam"
        string_val: "prenet/dense1/bias/Adam_1"
        string_val: "prenet/dense2/kernel/Adam"
        string_val: "prenet/dense2/kernel/Adam_1"
        string_val: "prenet/dense2/bias/Adam"
        string_val: "prenet/dense2/bias/Adam_1"
        string_val: "conv1d_banks/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/normalize/beta/Adam"
        string_val: "conv1d_banks/normalize/beta/Adam_1"
        string_val: "conv1d_banks/normalize/gamma/Adam"
        string_val: "conv1d_banks/normalize/gamma/Adam_1"
        string_val: "conv1d_1/conv1d/kernel/Adam"
        string_val: "conv1d_1/conv1d/kernel/Adam_1"
        string_val: "norm1/beta/Adam"
        string_val: "norm1/beta/Adam_1"
        string_val: "norm1/gamma/Adam"
        string_val: "norm1/gamma/Adam_1"
        string_val: "conv1d_2/conv1d/kernel/Adam"
        string_val: "conv1d_2/conv1d/kernel/Adam_1"
        string_val: "norm2/beta/Adam"
        string_val: "norm2/beta/Adam_1"
        string_val: "norm2/gamma/Adam"
        string_val: "norm2/gamma/Adam_1"
        string_val: "highwaynet_0/dense1/kernel/Adam"
        string_val: "highwaynet_0/dense1/kernel/Adam_1"
        string_val: "highwaynet_0/dense1/bias/Adam"
        string_val: "highwaynet_0/dense1/bias/Adam_1"
        string_val: "highwaynet_0/dense2/kernel/Adam"
        string_val: "highwaynet_0/dense2/kernel/Adam_1"
        string_val: "highwaynet_0/dense2/bias/Adam"
        string_val: "highwaynet_0/dense2/bias/Adam_1"
        string_val: "highwaynet_1/dense1/kernel/Adam"
        string_val: "highwaynet_1/dense1/kernel/Adam_1"
        string_val: "highwaynet_1/dense1/bias/Adam"
        string_val: "highwaynet_1/dense1/bias/Adam_1"
        string_val: "highwaynet_1/dense2/kernel/Adam"
        string_val: "highwaynet_1/dense2/kernel/Adam_1"
        string_val: "highwaynet_1/dense2/bias/Adam"
        string_val: "highwaynet_1/dense2/bias/Adam_1"
        string_val: "highwaynet_2/dense1/kernel/Adam"
        string_val: "highwaynet_2/dense1/kernel/Adam_1"
        string_val: "highwaynet_2/dense1/bias/Adam"
        string_val: "highwaynet_2/dense1/bias/Adam_1"
        string_val: "highwaynet_2/dense2/kernel/Adam"
        string_val: "highwaynet_2/dense2/kernel/Adam_1"
        string_val: "highwaynet_2/dense2/bias/Adam"
        string_val: "highwaynet_2/dense2/bias/Adam_1"
        string_val: "highwaynet_3/dense1/kernel/Adam"
        string_val: "highwaynet_3/dense1/kernel/Adam_1"
        string_val: "highwaynet_3/dense1/bias/Adam"
        string_val: "highwaynet_3/dense1/bias/Adam_1"
        string_val: "highwaynet_3/dense2/kernel/Adam"
        string_val: "highwaynet_3/dense2/kernel/Adam_1"
        string_val: "highwaynet_3/dense2/bias/Adam"
        string_val: "highwaynet_3/dense2/bias/Adam_1"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 177
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 177
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^emb_x/lookup_table/Assign"
  input: "^prenet/dense1/kernel/Assign"
  input: "^prenet/dense1/bias/Assign"
  input: "^prenet/dense2/kernel/Assign"
  input: "^prenet/dense2/bias/Assign"
  input: "^conv1d_banks/conv1d/conv1d/kernel/Assign"
  input: "^conv1d_banks/num_2/conv1d/conv1d/kernel/Assign"
  input: "^conv1d_banks/num_3/conv1d/conv1d/kernel/Assign"
  input: "^conv1d_banks/num_4/conv1d/conv1d/kernel/Assign"
  input: "^conv1d_banks/num_5/conv1d/conv1d/kernel/Assign"
  input: "^conv1d_banks/num_6/conv1d/conv1d/kernel/Assign"
  input: "^conv1d_banks/num_7/conv1d/conv1d/kernel/Assign"
  input: "^conv1d_banks/num_8/conv1d/conv1d/kernel/Assign"
  input: "^conv1d_banks/num_9/conv1d/conv1d/kernel/Assign"
  input: "^conv1d_banks/num_10/conv1d/conv1d/kernel/Assign"
  input: "^conv1d_banks/num_11/conv1d/conv1d/kernel/Assign"
  input: "^conv1d_banks/num_12/conv1d/conv1d/kernel/Assign"
  input: "^conv1d_banks/num_13/conv1d/conv1d/kernel/Assign"
  input: "^conv1d_banks/num_14/conv1d/conv1d/kernel/Assign"
  input: "^conv1d_banks/num_15/conv1d/conv1d/kernel/Assign"
  input: "^conv1d_banks/num_16/conv1d/conv1d/kernel/Assign"
  input: "^conv1d_banks/normalize/beta/Assign"
  input: "^conv1d_banks/normalize/gamma/Assign"
  input: "^conv1d_banks/normalize/moving_mean/Assign"
  input: "^conv1d_banks/normalize/moving_variance/Assign"
  input: "^conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/biased/Assign"
  input: "^conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/local_step/Assign"
  input: "^conv1d_1/conv1d/kernel/Assign"
  input: "^norm1/beta/Assign"
  input: "^norm1/gamma/Assign"
  input: "^norm1/moving_mean/Assign"
  input: "^norm1/moving_variance/Assign"
  input: "^norm1/norm1/moving_mean/biased/Assign"
  input: "^norm1/norm1/moving_mean/local_step/Assign"
  input: "^conv1d_2/conv1d/kernel/Assign"
  input: "^norm2/beta/Assign"
  input: "^norm2/gamma/Assign"
  input: "^norm2/moving_mean/Assign"
  input: "^norm2/moving_variance/Assign"
  input: "^norm2/norm2/moving_mean/biased/Assign"
  input: "^norm2/norm2/moving_mean/local_step/Assign"
  input: "^highwaynet_0/dense1/kernel/Assign"
  input: "^highwaynet_0/dense1/bias/Assign"
  input: "^highwaynet_0/dense2/kernel/Assign"
  input: "^highwaynet_0/dense2/bias/Assign"
  input: "^highwaynet_1/dense1/kernel/Assign"
  input: "^highwaynet_1/dense1/bias/Assign"
  input: "^highwaynet_1/dense2/kernel/Assign"
  input: "^highwaynet_1/dense2/bias/Assign"
  input: "^highwaynet_2/dense1/kernel/Assign"
  input: "^highwaynet_2/dense1/bias/Assign"
  input: "^highwaynet_2/dense2/kernel/Assign"
  input: "^highwaynet_2/dense2/bias/Assign"
  input: "^highwaynet_3/dense1/kernel/Assign"
  input: "^highwaynet_3/dense1/bias/Assign"
  input: "^highwaynet_3/dense2/kernel/Assign"
  input: "^highwaynet_3/dense2/bias/Assign"
  input: "^gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Assign"
  input: "^gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Assign"
  input: "^gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Assign"
  input: "^gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Assign"
  input: "^gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Assign"
  input: "^gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Assign"
  input: "^gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Assign"
  input: "^gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Assign"
  input: "^dense/kernel/Assign"
  input: "^global_step/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^emb_x/lookup_table/Adam/Assign"
  input: "^emb_x/lookup_table/Adam_1/Assign"
  input: "^prenet/dense1/kernel/Adam/Assign"
  input: "^prenet/dense1/kernel/Adam_1/Assign"
  input: "^prenet/dense1/bias/Adam/Assign"
  input: "^prenet/dense1/bias/Adam_1/Assign"
  input: "^prenet/dense2/kernel/Adam/Assign"
  input: "^prenet/dense2/kernel/Adam_1/Assign"
  input: "^prenet/dense2/bias/Adam/Assign"
  input: "^prenet/dense2/bias/Adam_1/Assign"
  input: "^conv1d_banks/conv1d/conv1d/kernel/Adam/Assign"
  input: "^conv1d_banks/conv1d/conv1d/kernel/Adam_1/Assign"
  input: "^conv1d_banks/num_2/conv1d/conv1d/kernel/Adam/Assign"
  input: "^conv1d_banks/num_2/conv1d/conv1d/kernel/Adam_1/Assign"
  input: "^conv1d_banks/num_3/conv1d/conv1d/kernel/Adam/Assign"
  input: "^conv1d_banks/num_3/conv1d/conv1d/kernel/Adam_1/Assign"
  input: "^conv1d_banks/num_4/conv1d/conv1d/kernel/Adam/Assign"
  input: "^conv1d_banks/num_4/conv1d/conv1d/kernel/Adam_1/Assign"
  input: "^conv1d_banks/num_5/conv1d/conv1d/kernel/Adam/Assign"
  input: "^conv1d_banks/num_5/conv1d/conv1d/kernel/Adam_1/Assign"
  input: "^conv1d_banks/num_6/conv1d/conv1d/kernel/Adam/Assign"
  input: "^conv1d_banks/num_6/conv1d/conv1d/kernel/Adam_1/Assign"
  input: "^conv1d_banks/num_7/conv1d/conv1d/kernel/Adam/Assign"
  input: "^conv1d_banks/num_7/conv1d/conv1d/kernel/Adam_1/Assign"
  input: "^conv1d_banks/num_8/conv1d/conv1d/kernel/Adam/Assign"
  input: "^conv1d_banks/num_8/conv1d/conv1d/kernel/Adam_1/Assign"
  input: "^conv1d_banks/num_9/conv1d/conv1d/kernel/Adam/Assign"
  input: "^conv1d_banks/num_9/conv1d/conv1d/kernel/Adam_1/Assign"
  input: "^conv1d_banks/num_10/conv1d/conv1d/kernel/Adam/Assign"
  input: "^conv1d_banks/num_10/conv1d/conv1d/kernel/Adam_1/Assign"
  input: "^conv1d_banks/num_11/conv1d/conv1d/kernel/Adam/Assign"
  input: "^conv1d_banks/num_11/conv1d/conv1d/kernel/Adam_1/Assign"
  input: "^conv1d_banks/num_12/conv1d/conv1d/kernel/Adam/Assign"
  input: "^conv1d_banks/num_12/conv1d/conv1d/kernel/Adam_1/Assign"
  input: "^conv1d_banks/num_13/conv1d/conv1d/kernel/Adam/Assign"
  input: "^conv1d_banks/num_13/conv1d/conv1d/kernel/Adam_1/Assign"
  input: "^conv1d_banks/num_14/conv1d/conv1d/kernel/Adam/Assign"
  input: "^conv1d_banks/num_14/conv1d/conv1d/kernel/Adam_1/Assign"
  input: "^conv1d_banks/num_15/conv1d/conv1d/kernel/Adam/Assign"
  input: "^conv1d_banks/num_15/conv1d/conv1d/kernel/Adam_1/Assign"
  input: "^conv1d_banks/num_16/conv1d/conv1d/kernel/Adam/Assign"
  input: "^conv1d_banks/num_16/conv1d/conv1d/kernel/Adam_1/Assign"
  input: "^conv1d_banks/normalize/beta/Adam/Assign"
  input: "^conv1d_banks/normalize/beta/Adam_1/Assign"
  input: "^conv1d_banks/normalize/gamma/Adam/Assign"
  input: "^conv1d_banks/normalize/gamma/Adam_1/Assign"
  input: "^conv1d_1/conv1d/kernel/Adam/Assign"
  input: "^conv1d_1/conv1d/kernel/Adam_1/Assign"
  input: "^norm1/beta/Adam/Assign"
  input: "^norm1/beta/Adam_1/Assign"
  input: "^norm1/gamma/Adam/Assign"
  input: "^norm1/gamma/Adam_1/Assign"
  input: "^conv1d_2/conv1d/kernel/Adam/Assign"
  input: "^conv1d_2/conv1d/kernel/Adam_1/Assign"
  input: "^norm2/beta/Adam/Assign"
  input: "^norm2/beta/Adam_1/Assign"
  input: "^norm2/gamma/Adam/Assign"
  input: "^norm2/gamma/Adam_1/Assign"
  input: "^highwaynet_0/dense1/kernel/Adam/Assign"
  input: "^highwaynet_0/dense1/kernel/Adam_1/Assign"
  input: "^highwaynet_0/dense1/bias/Adam/Assign"
  input: "^highwaynet_0/dense1/bias/Adam_1/Assign"
  input: "^highwaynet_0/dense2/kernel/Adam/Assign"
  input: "^highwaynet_0/dense2/kernel/Adam_1/Assign"
  input: "^highwaynet_0/dense2/bias/Adam/Assign"
  input: "^highwaynet_0/dense2/bias/Adam_1/Assign"
  input: "^highwaynet_1/dense1/kernel/Adam/Assign"
  input: "^highwaynet_1/dense1/kernel/Adam_1/Assign"
  input: "^highwaynet_1/dense1/bias/Adam/Assign"
  input: "^highwaynet_1/dense1/bias/Adam_1/Assign"
  input: "^highwaynet_1/dense2/kernel/Adam/Assign"
  input: "^highwaynet_1/dense2/kernel/Adam_1/Assign"
  input: "^highwaynet_1/dense2/bias/Adam/Assign"
  input: "^highwaynet_1/dense2/bias/Adam_1/Assign"
  input: "^highwaynet_2/dense1/kernel/Adam/Assign"
  input: "^highwaynet_2/dense1/kernel/Adam_1/Assign"
  input: "^highwaynet_2/dense1/bias/Adam/Assign"
  input: "^highwaynet_2/dense1/bias/Adam_1/Assign"
  input: "^highwaynet_2/dense2/kernel/Adam/Assign"
  input: "^highwaynet_2/dense2/kernel/Adam_1/Assign"
  input: "^highwaynet_2/dense2/bias/Adam/Assign"
  input: "^highwaynet_2/dense2/bias/Adam_1/Assign"
  input: "^highwaynet_3/dense1/kernel/Adam/Assign"
  input: "^highwaynet_3/dense1/kernel/Adam_1/Assign"
  input: "^highwaynet_3/dense1/bias/Adam/Assign"
  input: "^highwaynet_3/dense1/bias/Adam_1/Assign"
  input: "^highwaynet_3/dense2/kernel/Adam/Assign"
  input: "^highwaynet_3/dense2/kernel/Adam_1/Assign"
  input: "^highwaynet_3/dense2/bias/Adam/Assign"
  input: "^highwaynet_3/dense2/bias/Adam_1/Assign"
  input: "^gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Assign"
  input: "^gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Assign"
  input: "^gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Assign"
  input: "^gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Assign"
  input: "^gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Assign"
  input: "^gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Assign"
  input: "^gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Assign"
  input: "^gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Assign"
  input: "^gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Assign"
  input: "^gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Assign"
  input: "^gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Assign"
  input: "^gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Assign"
  input: "^gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Assign"
  input: "^gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Assign"
  input: "^dense/kernel/Adam/Assign"
  input: "^dense/kernel/Adam_1/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 177
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "conv1d_1/conv1d/kernel"
        string_val: "conv1d_1/conv1d/kernel/Adam"
        string_val: "conv1d_1/conv1d/kernel/Adam_1"
        string_val: "conv1d_2/conv1d/kernel"
        string_val: "conv1d_2/conv1d/kernel/Adam"
        string_val: "conv1d_2/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/normalize/beta"
        string_val: "conv1d_banks/normalize/beta/Adam"
        string_val: "conv1d_banks/normalize/beta/Adam_1"
        string_val: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/biased"
        string_val: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/local_step"
        string_val: "conv1d_banks/normalize/gamma"
        string_val: "conv1d_banks/normalize/gamma/Adam"
        string_val: "conv1d_banks/normalize/gamma/Adam_1"
        string_val: "conv1d_banks/normalize/moving_mean"
        string_val: "conv1d_banks/normalize/moving_variance"
        string_val: "conv1d_banks/num_10/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_11/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_12/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_13/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_14/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_15/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_16/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_2/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_3/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_4/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_5/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_6/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_7/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_8/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam_1"
        string_val: "conv1d_banks/num_9/conv1d/conv1d/kernel"
        string_val: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam"
        string_val: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam_1"
        string_val: "dense/kernel"
        string_val: "dense/kernel/Adam"
        string_val: "dense/kernel/Adam_1"
        string_val: "emb_x/lookup_table"
        string_val: "emb_x/lookup_table/Adam"
        string_val: "emb_x/lookup_table/Adam_1"
        string_val: "global_step"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
        string_val: "highwaynet_0/dense1/bias"
        string_val: "highwaynet_0/dense1/bias/Adam"
        string_val: "highwaynet_0/dense1/bias/Adam_1"
        string_val: "highwaynet_0/dense1/kernel"
        string_val: "highwaynet_0/dense1/kernel/Adam"
        string_val: "highwaynet_0/dense1/kernel/Adam_1"
        string_val: "highwaynet_0/dense2/bias"
        string_val: "highwaynet_0/dense2/bias/Adam"
        string_val: "highwaynet_0/dense2/bias/Adam_1"
        string_val: "highwaynet_0/dense2/kernel"
        string_val: "highwaynet_0/dense2/kernel/Adam"
        string_val: "highwaynet_0/dense2/kernel/Adam_1"
        string_val: "highwaynet_1/dense1/bias"
        string_val: "highwaynet_1/dense1/bias/Adam"
        string_val: "highwaynet_1/dense1/bias/Adam_1"
        string_val: "highwaynet_1/dense1/kernel"
        string_val: "highwaynet_1/dense1/kernel/Adam"
        string_val: "highwaynet_1/dense1/kernel/Adam_1"
        string_val: "highwaynet_1/dense2/bias"
        string_val: "highwaynet_1/dense2/bias/Adam"
        string_val: "highwaynet_1/dense2/bias/Adam_1"
        string_val: "highwaynet_1/dense2/kernel"
        string_val: "highwaynet_1/dense2/kernel/Adam"
        string_val: "highwaynet_1/dense2/kernel/Adam_1"
        string_val: "highwaynet_2/dense1/bias"
        string_val: "highwaynet_2/dense1/bias/Adam"
        string_val: "highwaynet_2/dense1/bias/Adam_1"
        string_val: "highwaynet_2/dense1/kernel"
        string_val: "highwaynet_2/dense1/kernel/Adam"
        string_val: "highwaynet_2/dense1/kernel/Adam_1"
        string_val: "highwaynet_2/dense2/bias"
        string_val: "highwaynet_2/dense2/bias/Adam"
        string_val: "highwaynet_2/dense2/bias/Adam_1"
        string_val: "highwaynet_2/dense2/kernel"
        string_val: "highwaynet_2/dense2/kernel/Adam"
        string_val: "highwaynet_2/dense2/kernel/Adam_1"
        string_val: "highwaynet_3/dense1/bias"
        string_val: "highwaynet_3/dense1/bias/Adam"
        string_val: "highwaynet_3/dense1/bias/Adam_1"
        string_val: "highwaynet_3/dense1/kernel"
        string_val: "highwaynet_3/dense1/kernel/Adam"
        string_val: "highwaynet_3/dense1/kernel/Adam_1"
        string_val: "highwaynet_3/dense2/bias"
        string_val: "highwaynet_3/dense2/bias/Adam"
        string_val: "highwaynet_3/dense2/bias/Adam_1"
        string_val: "highwaynet_3/dense2/kernel"
        string_val: "highwaynet_3/dense2/kernel/Adam"
        string_val: "highwaynet_3/dense2/kernel/Adam_1"
        string_val: "norm1/beta"
        string_val: "norm1/beta/Adam"
        string_val: "norm1/beta/Adam_1"
        string_val: "norm1/gamma"
        string_val: "norm1/gamma/Adam"
        string_val: "norm1/gamma/Adam_1"
        string_val: "norm1/moving_mean"
        string_val: "norm1/moving_variance"
        string_val: "norm1/norm1/moving_mean/biased"
        string_val: "norm1/norm1/moving_mean/local_step"
        string_val: "norm2/beta"
        string_val: "norm2/beta/Adam"
        string_val: "norm2/beta/Adam_1"
        string_val: "norm2/gamma"
        string_val: "norm2/gamma/Adam"
        string_val: "norm2/gamma/Adam_1"
        string_val: "norm2/moving_mean"
        string_val: "norm2/moving_variance"
        string_val: "norm2/norm2/moving_mean/biased"
        string_val: "norm2/norm2/moving_mean/local_step"
        string_val: "prenet/dense1/bias"
        string_val: "prenet/dense1/bias/Adam"
        string_val: "prenet/dense1/bias/Adam_1"
        string_val: "prenet/dense1/kernel"
        string_val: "prenet/dense1/kernel/Adam"
        string_val: "prenet/dense1/kernel/Adam_1"
        string_val: "prenet/dense2/bias"
        string_val: "prenet/dense2/bias/Adam"
        string_val: "prenet/dense2/bias/Adam_1"
        string_val: "prenet/dense2/kernel"
        string_val: "prenet/dense2/kernel/Adam"
        string_val: "prenet/dense2/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 177
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "conv1d_1/conv1d/kernel"
  input: "conv1d_1/conv1d/kernel/Adam"
  input: "conv1d_1/conv1d/kernel/Adam_1"
  input: "conv1d_2/conv1d/kernel"
  input: "conv1d_2/conv1d/kernel/Adam"
  input: "conv1d_2/conv1d/kernel/Adam_1"
  input: "conv1d_banks/conv1d/conv1d/kernel"
  input: "conv1d_banks/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/normalize/beta"
  input: "conv1d_banks/normalize/beta/Adam"
  input: "conv1d_banks/normalize/beta/Adam_1"
  input: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/biased"
  input: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/local_step"
  input: "conv1d_banks/normalize/gamma"
  input: "conv1d_banks/normalize/gamma/Adam"
  input: "conv1d_banks/normalize/gamma/Adam_1"
  input: "conv1d_banks/normalize/moving_mean"
  input: "conv1d_banks/normalize/moving_variance"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam_1"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam_1"
  input: "dense/kernel"
  input: "dense/kernel/Adam"
  input: "dense/kernel/Adam_1"
  input: "emb_x/lookup_table"
  input: "emb_x/lookup_table/Adam"
  input: "emb_x/lookup_table/Adam_1"
  input: "global_step"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "highwaynet_0/dense1/bias"
  input: "highwaynet_0/dense1/bias/Adam"
  input: "highwaynet_0/dense1/bias/Adam_1"
  input: "highwaynet_0/dense1/kernel"
  input: "highwaynet_0/dense1/kernel/Adam"
  input: "highwaynet_0/dense1/kernel/Adam_1"
  input: "highwaynet_0/dense2/bias"
  input: "highwaynet_0/dense2/bias/Adam"
  input: "highwaynet_0/dense2/bias/Adam_1"
  input: "highwaynet_0/dense2/kernel"
  input: "highwaynet_0/dense2/kernel/Adam"
  input: "highwaynet_0/dense2/kernel/Adam_1"
  input: "highwaynet_1/dense1/bias"
  input: "highwaynet_1/dense1/bias/Adam"
  input: "highwaynet_1/dense1/bias/Adam_1"
  input: "highwaynet_1/dense1/kernel"
  input: "highwaynet_1/dense1/kernel/Adam"
  input: "highwaynet_1/dense1/kernel/Adam_1"
  input: "highwaynet_1/dense2/bias"
  input: "highwaynet_1/dense2/bias/Adam"
  input: "highwaynet_1/dense2/bias/Adam_1"
  input: "highwaynet_1/dense2/kernel"
  input: "highwaynet_1/dense2/kernel/Adam"
  input: "highwaynet_1/dense2/kernel/Adam_1"
  input: "highwaynet_2/dense1/bias"
  input: "highwaynet_2/dense1/bias/Adam"
  input: "highwaynet_2/dense1/bias/Adam_1"
  input: "highwaynet_2/dense1/kernel"
  input: "highwaynet_2/dense1/kernel/Adam"
  input: "highwaynet_2/dense1/kernel/Adam_1"
  input: "highwaynet_2/dense2/bias"
  input: "highwaynet_2/dense2/bias/Adam"
  input: "highwaynet_2/dense2/bias/Adam_1"
  input: "highwaynet_2/dense2/kernel"
  input: "highwaynet_2/dense2/kernel/Adam"
  input: "highwaynet_2/dense2/kernel/Adam_1"
  input: "highwaynet_3/dense1/bias"
  input: "highwaynet_3/dense1/bias/Adam"
  input: "highwaynet_3/dense1/bias/Adam_1"
  input: "highwaynet_3/dense1/kernel"
  input: "highwaynet_3/dense1/kernel/Adam"
  input: "highwaynet_3/dense1/kernel/Adam_1"
  input: "highwaynet_3/dense2/bias"
  input: "highwaynet_3/dense2/bias/Adam"
  input: "highwaynet_3/dense2/bias/Adam_1"
  input: "highwaynet_3/dense2/kernel"
  input: "highwaynet_3/dense2/kernel/Adam"
  input: "highwaynet_3/dense2/kernel/Adam_1"
  input: "norm1/beta"
  input: "norm1/beta/Adam"
  input: "norm1/beta/Adam_1"
  input: "norm1/gamma"
  input: "norm1/gamma/Adam"
  input: "norm1/gamma/Adam_1"
  input: "norm1/moving_mean"
  input: "norm1/moving_variance"
  input: "norm1/norm1/moving_mean/biased"
  input: "norm1/norm1/moving_mean/local_step"
  input: "norm2/beta"
  input: "norm2/beta/Adam"
  input: "norm2/beta/Adam_1"
  input: "norm2/gamma"
  input: "norm2/gamma/Adam"
  input: "norm2/gamma/Adam_1"
  input: "norm2/moving_mean"
  input: "norm2/moving_variance"
  input: "norm2/norm2/moving_mean/biased"
  input: "norm2/norm2/moving_mean/local_step"
  input: "prenet/dense1/bias"
  input: "prenet/dense1/bias/Adam"
  input: "prenet/dense1/bias/Adam_1"
  input: "prenet/dense1/kernel"
  input: "prenet/dense1/kernel/Adam"
  input: "prenet/dense1/kernel/Adam_1"
  input: "prenet/dense2/bias"
  input: "prenet/dense2/bias/Adam"
  input: "prenet/dense2/bias/Adam_1"
  input: "prenet/dense2/kernel"
  input: "prenet/dense2/kernel/Adam"
  input: "prenet/dense2/kernel/Adam_1"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_1/conv1d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "conv1d_1/conv1d/kernel"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_1/conv1d/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "conv1d_1/conv1d/kernel/Adam"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_1/conv1d/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "conv1d_1/conv1d/kernel/Adam_1"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_1/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 2400
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_2/conv1d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "conv1d_2/conv1d/kernel"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_2/conv1d/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "conv1d_2/conv1d/kernel/Adam"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_2/conv1d/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "conv1d_2/conv1d/kernel/Adam_1"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_2/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "conv1d_banks/conv1d/conv1d/kernel"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/conv1d/conv1d/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "conv1d_banks/conv1d/conv1d/kernel/Adam"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/conv1d/conv1d/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "conv1d_banks/conv1d/conv1d/kernel/Adam_1"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/normalize/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "conv1d_banks/normalize/beta"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/normalize/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "conv1d_banks/normalize/beta/Adam"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/normalize/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "conv1d_banks/normalize/beta/Adam_1"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/biased"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/biased"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/local_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "conv1d_banks/normalize/conv1d_banks/normalize/moving_mean/local_step"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/normalize/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "conv1d_banks/normalize/gamma"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/normalize/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "conv1d_banks/normalize/gamma/Adam"
  input: "save/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/normalize/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "conv1d_banks/normalize/gamma/Adam_1"
  input: "save/RestoreV2_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/normalize/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "conv1d_banks/normalize/moving_mean"
  input: "save/RestoreV2_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/normalize/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "conv1d_banks/normalize/moving_variance"
  input: "save/RestoreV2_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/normalize/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel"
  input: "save/RestoreV2_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam"
  input: "save/RestoreV2_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "conv1d_banks/num_10/conv1d/conv1d/kernel/Adam_1"
  input: "save/RestoreV2_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_10/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_24/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_24/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_24"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_24/tensor_names"
  input: "save/RestoreV2_24/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel"
  input: "save/RestoreV2_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_25/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_25/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_25"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_25/tensor_names"
  input: "save/RestoreV2_25/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam"
  input: "save/RestoreV2_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_26/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_26/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_26"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_26/tensor_names"
  input: "save/RestoreV2_26/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "conv1d_banks/num_11/conv1d/conv1d/kernel/Adam_1"
  input: "save/RestoreV2_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_11/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_27/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_27/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_27"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_27/tensor_names"
  input: "save/RestoreV2_27/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel"
  input: "save/RestoreV2_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_28/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_28/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_28"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_28/tensor_names"
  input: "save/RestoreV2_28/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam"
  input: "save/RestoreV2_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_29/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_29/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_29"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_29/tensor_names"
  input: "save/RestoreV2_29/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "conv1d_banks/num_12/conv1d/conv1d/kernel/Adam_1"
  input: "save/RestoreV2_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_12/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_30/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_30/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_30"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_30/tensor_names"
  input: "save/RestoreV2_30/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel"
  input: "save/RestoreV2_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_31/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_31/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_31"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_31/tensor_names"
  input: "save/RestoreV2_31/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam"
  input: "save/RestoreV2_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_32/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_32/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_32"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_32/tensor_names"
  input: "save/RestoreV2_32/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "conv1d_banks/num_13/conv1d/conv1d/kernel/Adam_1"
  input: "save/RestoreV2_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_13/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_33/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_33/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_33"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_33/tensor_names"
  input: "save/RestoreV2_33/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel"
  input: "save/RestoreV2_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_34/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_34/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_34"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_34/tensor_names"
  input: "save/RestoreV2_34/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam"
  input: "save/RestoreV2_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_35/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_35/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_35"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_35/tensor_names"
  input: "save/RestoreV2_35/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "conv1d_banks/num_14/conv1d/conv1d/kernel/Adam_1"
  input: "save/RestoreV2_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_14/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 14
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_36/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_36/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_36"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_36/tensor_names"
  input: "save/RestoreV2_36/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel"
  input: "save/RestoreV2_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_37/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_37/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_37"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_37/tensor_names"
  input: "save/RestoreV2_37/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam"
  input: "save/RestoreV2_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_38/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_38/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_38"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_38/tensor_names"
  input: "save/RestoreV2_38/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "conv1d_banks/num_15/conv1d/conv1d/kernel/Adam_1"
  input: "save/RestoreV2_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_15/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_39/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_39/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_39"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_39/tensor_names"
  input: "save/RestoreV2_39/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel"
  input: "save/RestoreV2_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_40/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_40/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_40"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_40/tensor_names"
  input: "save/RestoreV2_40/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam"
  input: "save/RestoreV2_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_41/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_41/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_41"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_41/tensor_names"
  input: "save/RestoreV2_41/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "conv1d_banks/num_16/conv1d/conv1d/kernel/Adam_1"
  input: "save/RestoreV2_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_16/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_42/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_42/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_42"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_42/tensor_names"
  input: "save/RestoreV2_42/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel"
  input: "save/RestoreV2_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_43/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_43/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_43"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_43/tensor_names"
  input: "save/RestoreV2_43/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam"
  input: "save/RestoreV2_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_44/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_44/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_44"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_44/tensor_names"
  input: "save/RestoreV2_44/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "conv1d_banks/num_2/conv1d/conv1d/kernel/Adam_1"
  input: "save/RestoreV2_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_2/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_45/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_45/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_45"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_45/tensor_names"
  input: "save/RestoreV2_45/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel"
  input: "save/RestoreV2_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_46/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_46/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_46"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_46/tensor_names"
  input: "save/RestoreV2_46/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam"
  input: "save/RestoreV2_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_47/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_47/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_47"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_47/tensor_names"
  input: "save/RestoreV2_47/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "conv1d_banks/num_3/conv1d/conv1d/kernel/Adam_1"
  input: "save/RestoreV2_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_3/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_48/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_48/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_48"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_48/tensor_names"
  input: "save/RestoreV2_48/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel"
  input: "save/RestoreV2_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_49/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_49/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_49"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_49/tensor_names"
  input: "save/RestoreV2_49/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam"
  input: "save/RestoreV2_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_50/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_50/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_50"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_50/tensor_names"
  input: "save/RestoreV2_50/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "conv1d_banks/num_4/conv1d/conv1d/kernel/Adam_1"
  input: "save/RestoreV2_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_4/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_51/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_51/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_51"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_51/tensor_names"
  input: "save/RestoreV2_51/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel"
  input: "save/RestoreV2_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_52/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_52/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_52"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_52/tensor_names"
  input: "save/RestoreV2_52/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam"
  input: "save/RestoreV2_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_53/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_53/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_53"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_53/tensor_names"
  input: "save/RestoreV2_53/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "conv1d_banks/num_5/conv1d/conv1d/kernel/Adam_1"
  input: "save/RestoreV2_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_5/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_54/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_54/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_54"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_54/tensor_names"
  input: "save/RestoreV2_54/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel"
  input: "save/RestoreV2_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_55/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_55/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_55"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_55/tensor_names"
  input: "save/RestoreV2_55/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam"
  input: "save/RestoreV2_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_56/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_56/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_56"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_56/tensor_names"
  input: "save/RestoreV2_56/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "conv1d_banks/num_6/conv1d/conv1d/kernel/Adam_1"
  input: "save/RestoreV2_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_6/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_57/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_57/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_57"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_57/tensor_names"
  input: "save/RestoreV2_57/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel"
  input: "save/RestoreV2_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_58/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_58/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_58"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_58/tensor_names"
  input: "save/RestoreV2_58/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam"
  input: "save/RestoreV2_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_59/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_59/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_59"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_59/tensor_names"
  input: "save/RestoreV2_59/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "conv1d_banks/num_7/conv1d/conv1d/kernel/Adam_1"
  input: "save/RestoreV2_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_7/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_60/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_60/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_60"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_60/tensor_names"
  input: "save/RestoreV2_60/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel"
  input: "save/RestoreV2_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_61/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_61/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_61"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_61/tensor_names"
  input: "save/RestoreV2_61/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam"
  input: "save/RestoreV2_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_62/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_62/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_62"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_62/tensor_names"
  input: "save/RestoreV2_62/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "conv1d_banks/num_8/conv1d/conv1d/kernel/Adam_1"
  input: "save/RestoreV2_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_8/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_63/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_63/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_63"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_63/tensor_names"
  input: "save/RestoreV2_63/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel"
  input: "save/RestoreV2_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_64/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_64/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_64"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_64/tensor_names"
  input: "save/RestoreV2_64/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam"
  input: "save/RestoreV2_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_65/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_65/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_65"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_65/tensor_names"
  input: "save/RestoreV2_65/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "conv1d_banks/num_9/conv1d/conv1d/kernel/Adam_1"
  input: "save/RestoreV2_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1d_banks/num_9/conv1d/conv1d/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_66/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_66/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_66"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_66/tensor_names"
  input: "save/RestoreV2_66/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "dense/kernel"
  input: "save/RestoreV2_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_67/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_67/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_67"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_67/tensor_names"
  input: "save/RestoreV2_67/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "dense/kernel/Adam"
  input: "save/RestoreV2_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_68/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "dense/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_68/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_68"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_68/tensor_names"
  input: "save/RestoreV2_68/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "dense/kernel/Adam_1"
  input: "save/RestoreV2_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 73
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_69/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "emb_x/lookup_table"
      }
    }
  }
}
node {
  name: "save/RestoreV2_69/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_69"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_69/tensor_names"
  input: "save/RestoreV2_69/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "emb_x/lookup_table"
  input: "save/RestoreV2_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 43
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_70/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "emb_x/lookup_table/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_70/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_70"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_70/tensor_names"
  input: "save/RestoreV2_70/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "emb_x/lookup_table/Adam"
  input: "save/RestoreV2_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 43
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_71/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "emb_x/lookup_table/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_71/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_71"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_71/tensor_names"
  input: "save/RestoreV2_71/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "emb_x/lookup_table/Adam_1"
  input: "save/RestoreV2_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@emb_x/lookup_table"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 43
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_72/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2_72/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_72"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_72/tensor_names"
  input: "save/RestoreV2_72/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT32
      }
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2_72"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_73/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_73/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_73"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_73/tensor_names"
  input: "save/RestoreV2_73/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "save/RestoreV2_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_74/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_74/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_74"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_74/tensor_names"
  input: "save/RestoreV2_74/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "save/RestoreV2_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_75/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_75/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_75"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_75/tensor_names"
  input: "save/RestoreV2_75/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "save/RestoreV2_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_76/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_76/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_76"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_76/tensor_names"
  input: "save/RestoreV2_76/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "save/RestoreV2_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_77/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_77/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_77"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_77/tensor_names"
  input: "save/RestoreV2_77/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "save/RestoreV2_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_78/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_78/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_78"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_78/tensor_names"
  input: "save/RestoreV2_78/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "save/RestoreV2_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_79/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_79/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_79"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_79/tensor_names"
  input: "save/RestoreV2_79/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "save/RestoreV2_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_80/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_80/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_80"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_80/tensor_names"
  input: "save/RestoreV2_80/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "save/RestoreV2_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_81/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_81/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_81"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_81/tensor_names"
  input: "save/RestoreV2_81/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "save/RestoreV2_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_82/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_82/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_82"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_82/tensor_names"
  input: "save/RestoreV2_82/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "save/RestoreV2_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_83/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_83/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_83"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_83/tensor_names"
  input: "save/RestoreV2_83/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "save/RestoreV2_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_84/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_84/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_84"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_84/tensor_names"
  input: "save/RestoreV2_84/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "gru1/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "save/RestoreV2_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_85/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_85/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_85"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_85/tensor_names"
  input: "save/RestoreV2_85/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "save/RestoreV2_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_86/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_86/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_86"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_86/tensor_names"
  input: "save/RestoreV2_86/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "save/RestoreV2_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_87/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_87/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_87"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_87/tensor_names"
  input: "save/RestoreV2_87/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "save/RestoreV2_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_88/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_88/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_88"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_88/tensor_names"
  input: "save/RestoreV2_88/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "save/RestoreV2_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_89/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_89/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_89"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_89/tensor_names"
  input: "save/RestoreV2_89/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "save/RestoreV2_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_90/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_90/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_90"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_90/tensor_names"
  input: "save/RestoreV2_90/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "save/RestoreV2_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_91/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_91/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_91"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_91/tensor_names"
  input: "save/RestoreV2_91/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "save/RestoreV2_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_92/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_92/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_92"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_92/tensor_names"
  input: "save/RestoreV2_92/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "save/RestoreV2_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_93/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_93/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_93"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_93/tensor_names"
  input: "save/RestoreV2_93/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "save/RestoreV2_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_94/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_94/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_94"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_94/tensor_names"
  input: "save/RestoreV2_94/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "save/RestoreV2_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_95/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_95/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_95"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_95/tensor_names"
  input: "save/RestoreV2_95/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "save/RestoreV2_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_96/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_96/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_96"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_96/tensor_names"
  input: "save/RestoreV2_96/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "gru1/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "save/RestoreV2_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gru1/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_97/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_0/dense1/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_97/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_97"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_97/tensor_names"
  input: "save/RestoreV2_97/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "highwaynet_0/dense1/bias"
  input: "save/RestoreV2_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_98/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_0/dense1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_98/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_98"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_98/tensor_names"
  input: "save/RestoreV2_98/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "highwaynet_0/dense1/bias/Adam"
  input: "save/RestoreV2_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_99/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_0/dense1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_99/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_99"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_99/tensor_names"
  input: "save/RestoreV2_99/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "highwaynet_0/dense1/bias/Adam_1"
  input: "save/RestoreV2_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_100/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_0/dense1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_100/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_100"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_100/tensor_names"
  input: "save/RestoreV2_100/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "highwaynet_0/dense1/kernel"
  input: "save/RestoreV2_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_101/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_0/dense1/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_101/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_101"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_101/tensor_names"
  input: "save/RestoreV2_101/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "highwaynet_0/dense1/kernel/Adam"
  input: "save/RestoreV2_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_102/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_0/dense1/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_102/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_102"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_102/tensor_names"
  input: "save/RestoreV2_102/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "highwaynet_0/dense1/kernel/Adam_1"
  input: "save/RestoreV2_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_103/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_0/dense2/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_103/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_103"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_103/tensor_names"
  input: "save/RestoreV2_103/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "highwaynet_0/dense2/bias"
  input: "save/RestoreV2_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_104/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_0/dense2/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_104/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_104"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_104/tensor_names"
  input: "save/RestoreV2_104/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "highwaynet_0/dense2/bias/Adam"
  input: "save/RestoreV2_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_105/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_0/dense2/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_105/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_105"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_105/tensor_names"
  input: "save/RestoreV2_105/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "highwaynet_0/dense2/bias/Adam_1"
  input: "save/RestoreV2_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_106/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_0/dense2/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_106/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_106"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_106/tensor_names"
  input: "save/RestoreV2_106/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "highwaynet_0/dense2/kernel"
  input: "save/RestoreV2_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_107/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_0/dense2/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_107/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_107"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_107/tensor_names"
  input: "save/RestoreV2_107/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "highwaynet_0/dense2/kernel/Adam"
  input: "save/RestoreV2_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_108/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_0/dense2/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_108/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_108"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_108/tensor_names"
  input: "save/RestoreV2_108/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "highwaynet_0/dense2/kernel/Adam_1"
  input: "save/RestoreV2_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_0/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_109/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_1/dense1/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_109/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_109"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_109/tensor_names"
  input: "save/RestoreV2_109/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "highwaynet_1/dense1/bias"
  input: "save/RestoreV2_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_110/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_1/dense1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_110/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_110"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_110/tensor_names"
  input: "save/RestoreV2_110/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "highwaynet_1/dense1/bias/Adam"
  input: "save/RestoreV2_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_111/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_1/dense1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_111/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_111"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_111/tensor_names"
  input: "save/RestoreV2_111/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "highwaynet_1/dense1/bias/Adam_1"
  input: "save/RestoreV2_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_112/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_1/dense1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_112/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_112"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_112/tensor_names"
  input: "save/RestoreV2_112/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "highwaynet_1/dense1/kernel"
  input: "save/RestoreV2_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_113/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_1/dense1/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_113/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_113"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_113/tensor_names"
  input: "save/RestoreV2_113/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "highwaynet_1/dense1/kernel/Adam"
  input: "save/RestoreV2_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_114/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_1/dense1/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_114/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_114"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_114/tensor_names"
  input: "save/RestoreV2_114/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "highwaynet_1/dense1/kernel/Adam_1"
  input: "save/RestoreV2_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_115/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_1/dense2/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_115/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_115"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_115/tensor_names"
  input: "save/RestoreV2_115/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "highwaynet_1/dense2/bias"
  input: "save/RestoreV2_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_116/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_1/dense2/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_116/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_116"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_116/tensor_names"
  input: "save/RestoreV2_116/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "highwaynet_1/dense2/bias/Adam"
  input: "save/RestoreV2_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_117/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_1/dense2/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_117/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_117"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_117/tensor_names"
  input: "save/RestoreV2_117/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "highwaynet_1/dense2/bias/Adam_1"
  input: "save/RestoreV2_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_118/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_1/dense2/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_118/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_118"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_118/tensor_names"
  input: "save/RestoreV2_118/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "highwaynet_1/dense2/kernel"
  input: "save/RestoreV2_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_119/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_1/dense2/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_119/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_119"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_119/tensor_names"
  input: "save/RestoreV2_119/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "highwaynet_1/dense2/kernel/Adam"
  input: "save/RestoreV2_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_120/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_1/dense2/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_120/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_120"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_120/tensor_names"
  input: "save/RestoreV2_120/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "highwaynet_1/dense2/kernel/Adam_1"
  input: "save/RestoreV2_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_1/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_121/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_2/dense1/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_121/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_121"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_121/tensor_names"
  input: "save/RestoreV2_121/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "highwaynet_2/dense1/bias"
  input: "save/RestoreV2_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_122/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_2/dense1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_122/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_122"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_122/tensor_names"
  input: "save/RestoreV2_122/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "highwaynet_2/dense1/bias/Adam"
  input: "save/RestoreV2_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_123/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_2/dense1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_123/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_123"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_123/tensor_names"
  input: "save/RestoreV2_123/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "highwaynet_2/dense1/bias/Adam_1"
  input: "save/RestoreV2_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_124/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_2/dense1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_124/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_124"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_124/tensor_names"
  input: "save/RestoreV2_124/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "highwaynet_2/dense1/kernel"
  input: "save/RestoreV2_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_125/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_2/dense1/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_125/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_125"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_125/tensor_names"
  input: "save/RestoreV2_125/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "highwaynet_2/dense1/kernel/Adam"
  input: "save/RestoreV2_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_126/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_2/dense1/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_126/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_126"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_126/tensor_names"
  input: "save/RestoreV2_126/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "highwaynet_2/dense1/kernel/Adam_1"
  input: "save/RestoreV2_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_127/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_2/dense2/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_127/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_127"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_127/tensor_names"
  input: "save/RestoreV2_127/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "highwaynet_2/dense2/bias"
  input: "save/RestoreV2_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_128/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_2/dense2/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_128/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_128"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_128/tensor_names"
  input: "save/RestoreV2_128/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "highwaynet_2/dense2/bias/Adam"
  input: "save/RestoreV2_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_129/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_2/dense2/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_129/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_129"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_129/tensor_names"
  input: "save/RestoreV2_129/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "highwaynet_2/dense2/bias/Adam_1"
  input: "save/RestoreV2_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_130/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_2/dense2/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_130/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_130"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_130/tensor_names"
  input: "save/RestoreV2_130/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "highwaynet_2/dense2/kernel"
  input: "save/RestoreV2_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_131/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_2/dense2/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_131/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_131"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_131/tensor_names"
  input: "save/RestoreV2_131/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "highwaynet_2/dense2/kernel/Adam"
  input: "save/RestoreV2_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_132/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_2/dense2/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_132/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_132"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_132/tensor_names"
  input: "save/RestoreV2_132/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "highwaynet_2/dense2/kernel/Adam_1"
  input: "save/RestoreV2_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_2/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_133/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_3/dense1/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_133/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_133"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_133/tensor_names"
  input: "save/RestoreV2_133/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "highwaynet_3/dense1/bias"
  input: "save/RestoreV2_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_134/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_3/dense1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_134/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_134"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_134/tensor_names"
  input: "save/RestoreV2_134/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "highwaynet_3/dense1/bias/Adam"
  input: "save/RestoreV2_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_135/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_3/dense1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_135/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_135"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_135/tensor_names"
  input: "save/RestoreV2_135/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "highwaynet_3/dense1/bias/Adam_1"
  input: "save/RestoreV2_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_136/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_3/dense1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_136/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_136"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_136/tensor_names"
  input: "save/RestoreV2_136/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "highwaynet_3/dense1/kernel"
  input: "save/RestoreV2_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_137/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_3/dense1/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_137/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_137"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_137/tensor_names"
  input: "save/RestoreV2_137/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "highwaynet_3/dense1/kernel/Adam"
  input: "save/RestoreV2_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_138/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_3/dense1/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_138/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_138"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_138/tensor_names"
  input: "save/RestoreV2_138/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_138"
  op: "Assign"
  input: "highwaynet_3/dense1/kernel/Adam_1"
  input: "save/RestoreV2_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_139/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_3/dense2/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_139/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_139"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_139/tensor_names"
  input: "save/RestoreV2_139/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_139"
  op: "Assign"
  input: "highwaynet_3/dense2/bias"
  input: "save/RestoreV2_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_140/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_3/dense2/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_140/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_140"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_140/tensor_names"
  input: "save/RestoreV2_140/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_140"
  op: "Assign"
  input: "highwaynet_3/dense2/bias/Adam"
  input: "save/RestoreV2_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_141/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_3/dense2/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_141/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_141"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_141/tensor_names"
  input: "save/RestoreV2_141/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_141"
  op: "Assign"
  input: "highwaynet_3/dense2/bias/Adam_1"
  input: "save/RestoreV2_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_142/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_3/dense2/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_142/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_142"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_142/tensor_names"
  input: "save/RestoreV2_142/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_142"
  op: "Assign"
  input: "highwaynet_3/dense2/kernel"
  input: "save/RestoreV2_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_143/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_3/dense2/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_143/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_143"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_143/tensor_names"
  input: "save/RestoreV2_143/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_143"
  op: "Assign"
  input: "highwaynet_3/dense2/kernel/Adam"
  input: "save/RestoreV2_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_144/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "highwaynet_3/dense2/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_144/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_144"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_144/tensor_names"
  input: "save/RestoreV2_144/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_144"
  op: "Assign"
  input: "highwaynet_3/dense2/kernel/Adam_1"
  input: "save/RestoreV2_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@highwaynet_3/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_145/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "norm1/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_145/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_145"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_145/tensor_names"
  input: "save/RestoreV2_145/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_145"
  op: "Assign"
  input: "norm1/beta"
  input: "save/RestoreV2_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_146/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "norm1/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_146/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_146"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_146/tensor_names"
  input: "save/RestoreV2_146/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_146"
  op: "Assign"
  input: "norm1/beta/Adam"
  input: "save/RestoreV2_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_147/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "norm1/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_147/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_147"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_147/tensor_names"
  input: "save/RestoreV2_147/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_147"
  op: "Assign"
  input: "norm1/beta/Adam_1"
  input: "save/RestoreV2_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_148/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "norm1/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_148/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_148"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_148/tensor_names"
  input: "save/RestoreV2_148/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_148"
  op: "Assign"
  input: "norm1/gamma"
  input: "save/RestoreV2_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_149/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "norm1/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_149/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_149"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_149/tensor_names"
  input: "save/RestoreV2_149/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_149"
  op: "Assign"
  input: "norm1/gamma/Adam"
  input: "save/RestoreV2_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_150/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "norm1/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_150/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_150"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_150/tensor_names"
  input: "save/RestoreV2_150/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_150"
  op: "Assign"
  input: "norm1/gamma/Adam_1"
  input: "save/RestoreV2_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_151/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "norm1/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_151/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_151"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_151/tensor_names"
  input: "save/RestoreV2_151/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_151"
  op: "Assign"
  input: "norm1/moving_mean"
  input: "save/RestoreV2_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_152/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "norm1/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_152/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_152"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_152/tensor_names"
  input: "save/RestoreV2_152/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_152"
  op: "Assign"
  input: "norm1/moving_variance"
  input: "save/RestoreV2_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_153/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "norm1/norm1/moving_mean/biased"
      }
    }
  }
}
node {
  name: "save/RestoreV2_153/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_153"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_153/tensor_names"
  input: "save/RestoreV2_153/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_153"
  op: "Assign"
  input: "norm1/norm1/moving_mean/biased"
  input: "save/RestoreV2_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_154/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "norm1/norm1/moving_mean/local_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2_154/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_154"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_154/tensor_names"
  input: "save/RestoreV2_154/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_154"
  op: "Assign"
  input: "norm1/norm1/moving_mean/local_step"
  input: "save/RestoreV2_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm1/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_155/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "norm2/beta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_155/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_155"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_155/tensor_names"
  input: "save/RestoreV2_155/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_155"
  op: "Assign"
  input: "norm2/beta"
  input: "save/RestoreV2_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_156/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "norm2/beta/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_156/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_156"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_156/tensor_names"
  input: "save/RestoreV2_156/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_156"
  op: "Assign"
  input: "norm2/beta/Adam"
  input: "save/RestoreV2_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_157/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "norm2/beta/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_157/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_157"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_157/tensor_names"
  input: "save/RestoreV2_157/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_157"
  op: "Assign"
  input: "norm2/beta/Adam_1"
  input: "save/RestoreV2_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_158/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "norm2/gamma"
      }
    }
  }
}
node {
  name: "save/RestoreV2_158/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_158"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_158/tensor_names"
  input: "save/RestoreV2_158/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_158"
  op: "Assign"
  input: "norm2/gamma"
  input: "save/RestoreV2_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_159/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "norm2/gamma/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_159/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_159"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_159/tensor_names"
  input: "save/RestoreV2_159/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_159"
  op: "Assign"
  input: "norm2/gamma/Adam"
  input: "save/RestoreV2_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_160/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "norm2/gamma/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_160/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_160"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_160/tensor_names"
  input: "save/RestoreV2_160/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_160"
  op: "Assign"
  input: "norm2/gamma/Adam_1"
  input: "save/RestoreV2_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_161/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "norm2/moving_mean"
      }
    }
  }
}
node {
  name: "save/RestoreV2_161/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_161"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_161/tensor_names"
  input: "save/RestoreV2_161/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_161"
  op: "Assign"
  input: "norm2/moving_mean"
  input: "save/RestoreV2_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_162/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "norm2/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2_162/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_162"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_162/tensor_names"
  input: "save/RestoreV2_162/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_162"
  op: "Assign"
  input: "norm2/moving_variance"
  input: "save/RestoreV2_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_163/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "norm2/norm2/moving_mean/biased"
      }
    }
  }
}
node {
  name: "save/RestoreV2_163/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_163"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_163/tensor_names"
  input: "save/RestoreV2_163/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_163"
  op: "Assign"
  input: "norm2/norm2/moving_mean/biased"
  input: "save/RestoreV2_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_164/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "norm2/norm2/moving_mean/local_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2_164/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_164"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_164/tensor_names"
  input: "save/RestoreV2_164/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_164"
  op: "Assign"
  input: "norm2/norm2/moving_mean/local_step"
  input: "save/RestoreV2_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@norm2/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_165/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "prenet/dense1/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_165/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_165"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_165/tensor_names"
  input: "save/RestoreV2_165/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_165"
  op: "Assign"
  input: "prenet/dense1/bias"
  input: "save/RestoreV2_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_166/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "prenet/dense1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_166/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_166"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_166/tensor_names"
  input: "save/RestoreV2_166/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_166"
  op: "Assign"
  input: "prenet/dense1/bias/Adam"
  input: "save/RestoreV2_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_167/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "prenet/dense1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_167/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_167"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_167/tensor_names"
  input: "save/RestoreV2_167/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_167"
  op: "Assign"
  input: "prenet/dense1/bias/Adam_1"
  input: "save/RestoreV2_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_168/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "prenet/dense1/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_168/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_168"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_168/tensor_names"
  input: "save/RestoreV2_168/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_168"
  op: "Assign"
  input: "prenet/dense1/kernel"
  input: "save/RestoreV2_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_169/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "prenet/dense1/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_169/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_169"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_169/tensor_names"
  input: "save/RestoreV2_169/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_169"
  op: "Assign"
  input: "prenet/dense1/kernel/Adam"
  input: "save/RestoreV2_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_170/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "prenet/dense1/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_170/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_170"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_170/tensor_names"
  input: "save/RestoreV2_170/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_170"
  op: "Assign"
  input: "prenet/dense1/kernel/Adam_1"
  input: "save/RestoreV2_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 300
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_171/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "prenet/dense2/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_171/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_171"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_171/tensor_names"
  input: "save/RestoreV2_171/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_171"
  op: "Assign"
  input: "prenet/dense2/bias"
  input: "save/RestoreV2_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_172/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "prenet/dense2/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_172/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_172"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_172/tensor_names"
  input: "save/RestoreV2_172/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_172"
  op: "Assign"
  input: "prenet/dense2/bias/Adam"
  input: "save/RestoreV2_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_173/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "prenet/dense2/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_173/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_173"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_173/tensor_names"
  input: "save/RestoreV2_173/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_173"
  op: "Assign"
  input: "prenet/dense2/bias/Adam_1"
  input: "save/RestoreV2_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_174/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "prenet/dense2/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_174/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_174"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_174/tensor_names"
  input: "save/RestoreV2_174/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_174"
  op: "Assign"
  input: "prenet/dense2/kernel"
  input: "save/RestoreV2_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_175/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "prenet/dense2/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_175/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_175"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_175/tensor_names"
  input: "save/RestoreV2_175/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_175"
  op: "Assign"
  input: "prenet/dense2/kernel/Adam"
  input: "save/RestoreV2_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_176/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "prenet/dense2/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_176/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_176"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_176/tensor_names"
  input: "save/RestoreV2_176/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_176"
  op: "Assign"
  input: "prenet/dense2/kernel/Adam_1"
  input: "save/RestoreV2_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@prenet/dense2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 150
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
  input: "^save/Assign_138"
  input: "^save/Assign_139"
  input: "^save/Assign_140"
  input: "^save/Assign_141"
  input: "^save/Assign_142"
  input: "^save/Assign_143"
  input: "^save/Assign_144"
  input: "^save/Assign_145"
  input: "^save/Assign_146"
  input: "^save/Assign_147"
  input: "^save/Assign_148"
  input: "^save/Assign_149"
  input: "^save/Assign_150"
  input: "^save/Assign_151"
  input: "^save/Assign_152"
  input: "^save/Assign_153"
  input: "^save/Assign_154"
  input: "^save/Assign_155"
  input: "^save/Assign_156"
  input: "^save/Assign_157"
  input: "^save/Assign_158"
  input: "^save/Assign_159"
  input: "^save/Assign_160"
  input: "^save/Assign_161"
  input: "^save/Assign_162"
  input: "^save/Assign_163"
  input: "^save/Assign_164"
  input: "^save/Assign_165"
  input: "^save/Assign_166"
  input: "^save/Assign_167"
  input: "^save/Assign_168"
  input: "^save/Assign_169"
  input: "^save/Assign_170"
  input: "^save/Assign_171"
  input: "^save/Assign_172"
  input: "^save/Assign_173"
  input: "^save/Assign_174"
  input: "^save/Assign_175"
  input: "^save/Assign_176"
}
node {
  name: "Merge_1/MergeSummary"
  op: "MergeSummary"
  input: "input_producer/input_producer/fraction_of_32_full"
  input: "batch/fraction_of_12800_full"
  input: "mean_loss"
  input: "acc"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
versions {
  producer: 22
}
